{"includedArchiveIdentifiers":["Factory"],"interfaceLanguages":{"swift":[{"children":[{"title":"The Basics","type":"groupMarker"},{"children":[{"title":"Examples","type":"groupMarker"},{"path":"\/documentation\/factory\/registrations","title":"Sample Registrations","type":"article"},{"path":"\/documentation\/factory\/resolutions","title":"Sample Resolutions","type":"article"}],"path":"\/documentation\/factory\/gettingstarted","title":"Getting Started","type":"symbol"},{"path":"\/documentation\/factory\/containers","title":"Containers","type":"article"},{"children":[{"title":"Scope Class Definitions","type":"groupMarker"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/cached-swift.class\/init()","title":"init()","type":"init"}],"path":"\/documentation\/factory\/scope\/cached-swift.class","title":"Scope.Cached","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/graph-swift.class\/init()","title":"init()","type":"init"}],"path":"\/documentation\/factory\/scope\/graph-swift.class","title":"Scope.Graph","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/shared-swift.class\/init()","title":"init()","type":"init"}],"path":"\/documentation\/factory\/scope\/shared-swift.class","title":"Scope.Shared","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/singleton-swift.class\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/singleton-swift.class\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/factory\/scope\/singleton-swift.class","title":"Scope.Singleton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/unique-swift.class\/init()","title":"init()","type":"init"}],"path":"\/documentation\/factory\/scope\/unique-swift.class","title":"Scope.Unique","type":"class"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/cached-swift.type.property","title":"static let cached: Scope.Cached","type":"property"},{"path":"\/documentation\/factory\/scope\/graph-swift.type.property","title":"static let graph: Scope.Graph","type":"property"},{"path":"\/documentation\/factory\/scope\/shared-swift.type.property","title":"static let shared: Scope.Shared","type":"property"},{"path":"\/documentation\/factory\/scope\/singleton-swift.type.property","title":"static let singleton: Scope.Singleton","type":"property"},{"path":"\/documentation\/factory\/scope\/unique-swift.type.property","title":"static let unique: Scope.Unique","type":"property"}],"path":"\/documentation\/factory\/scope","title":"Scope","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/cached-swift.class\/init()","title":"init()","type":"init"}],"path":"\/documentation\/factory\/scope\/cached-swift.class","title":"Scope.Cached","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/graph-swift.class\/init()","title":"init()","type":"init"}],"path":"\/documentation\/factory\/scope\/graph-swift.class","title":"Scope.Graph","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/shared-swift.class\/init()","title":"init()","type":"init"}],"path":"\/documentation\/factory\/scope\/shared-swift.class","title":"Scope.Shared","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/singleton-swift.class\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/singleton-swift.class\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/factory\/scope\/singleton-swift.class","title":"Scope.Singleton","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/scope\/unique-swift.class\/init()","title":"init()","type":"init"}],"path":"\/documentation\/factory\/scope\/unique-swift.class","title":"Scope.Unique","type":"class"}],"path":"\/documentation\/factory\/scopes","title":"Scopes","type":"symbol"},{"title":"Development and Testing","type":"groupMarker"},{"path":"\/documentation\/factory\/previews","title":"SwiftUI Previews","type":"article"},{"path":"\/documentation\/factory\/testing","title":"Testing","type":"article"},{"path":"\/documentation\/factory\/contexts","title":"Contexts","type":"article"},{"path":"\/documentation\/factory\/debugging","title":"Debugging","type":"article"},{"path":"\/documentation\/factory\/chains","title":"Circular Dependency Chains","type":"article"},{"title":"Advanced Topics","type":"groupMarker"},{"path":"\/documentation\/factory\/design","title":"Designing Factory","type":"article"},{"path":"\/documentation\/factory\/modifiers","title":"Factory Modifiers","type":"article"},{"path":"\/documentation\/factory\/modules","title":"Modular Development","type":"article"},{"path":"\/documentation\/factory\/cycle","title":"Resolution Cycles","type":"article"},{"path":"\/documentation\/factory\/optionals","title":"Optionals and Dynamic Registration","type":"article"},{"path":"\/documentation\/factory\/functional","title":"Functional Injection","type":"article"},{"path":"\/documentation\/factory\/tags","title":"Tags","type":"article"},{"title":"Additional Topics","type":"groupMarker"},{"path":"\/documentation\/factory\/migration","title":"Migration","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/container\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/container\/manager","title":"let manager: ContainerManager","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/container\/$shared","title":"static let $shared: TaskLocal<Container>","type":"property"},{"path":"\/documentation\/factory\/container\/shared","title":"static var shared: Container","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/container\/callasfunction(key:_:)-1rsf5","title":"func callAsFunction<T>(key: StaticString, VoidFactoryType<T>) -> Factory<T>","type":"method"},{"path":"\/documentation\/factory\/container\/callasfunction(key:_:)-4o236","title":"func callAsFunction<P, T>(key: StaticString, ParameterFactoryType<P, T>) -> ParameterFactory<P, T>","type":"method"},{"path":"\/documentation\/factory\/container\/decorator(_:)","title":"func decorator(((Any) -> ())?)","type":"method"},{"path":"\/documentation\/factory\/container\/promised(key:file:line:)-6ep9u","title":"func promised<P, T>(key: StaticString, file: StaticString, line: UInt) -> ParameterFactory<P, T?>","type":"method"},{"path":"\/documentation\/factory\/container\/promised(key:file:line:)-7ze8","title":"func promised<T>(key: StaticString, file: StaticString, line: UInt) -> Factory<T?>","type":"method"},{"path":"\/documentation\/factory\/container\/reset(options:)","title":"func reset(options: FactoryResetOptions)","type":"method"},{"path":"\/documentation\/factory\/container\/with(_:)","title":"func with((Self) -> Void) -> Self","type":"method"}],"path":"\/documentation\/factory\/container\/managedcontainer-implementations","title":"ManagedContainer Implementations","type":"symbol"}],"path":"\/documentation\/factory\/container","title":"Container","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/containermanager\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/containermanager\/defaultscope","title":"var defaultScope: Scope?","type":"property"},{"path":"\/documentation\/factory\/containermanager\/dependencychaintestmax","title":"var dependencyChainTestMax: Int","type":"property"},{"path":"\/documentation\/factory\/containermanager\/logger","title":"var logger: (String) -> Void","type":"property"},{"path":"\/documentation\/factory\/containermanager\/promisetriggerserror","title":"var promiseTriggersError: Bool","type":"property"},{"path":"\/documentation\/factory\/containermanager\/trace","title":"var trace: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/containermanager\/pop()","title":"func pop()","type":"method"},{"path":"\/documentation\/factory\/containermanager\/push()","title":"func push()","type":"method"},{"path":"\/documentation\/factory\/containermanager\/reset(options:)","title":"func reset(options: FactoryResetOptions)","type":"method"},{"path":"\/documentation\/factory\/containermanager\/reset(scope:)","title":"func reset(scope: Scope)","type":"method"}],"path":"\/documentation\/factory\/containermanager","title":"ContainerManager","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/autoregistering\/autoregister()","title":"func autoRegister()","type":"method"}],"path":"\/documentation\/factory\/autoregistering","title":"AutoRegistering","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/factory\/factorymodifying\/p","title":"P","type":"associatedtype"},{"path":"\/documentation\/factory\/factorymodifying\/t","title":"T","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/factorymodifying\/cached","title":"var cached: Self","type":"property"},{"path":"\/documentation\/factory\/factorymodifying\/graph","title":"var graph: Self","type":"property"},{"path":"\/documentation\/factory\/factorymodifying\/registration","title":"var registration: FactoryRegistration<Self.P, Self.T>","type":"property"},{"path":"\/documentation\/factory\/factorymodifying\/shared","title":"var shared: Self","type":"property"},{"path":"\/documentation\/factory\/factorymodifying\/singleton","title":"var singleton: Self","type":"property"},{"path":"\/documentation\/factory\/factorymodifying\/unique","title":"var unique: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/factorymodifying\/context(_:factory:)","title":"func context(FactoryContextType..., factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/decorator(_:)","title":"func decorator((Self.T) -> Void) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/onarg(_:factory:)","title":"func onArg(String, factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/onargs(_:factory:)","title":"func onArgs([String], factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/ondebug(factory:)","title":"func onDebug(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/ondevice(factory:)","title":"func onDevice(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/onpreview(factory:)","title":"func onPreview(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/onsimulator(factory:)","title":"func onSimulator(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/ontest(factory:)","title":"func onTest(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/once()","title":"func once() -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/reset(_:)","title":"func reset(FactoryResetOptions) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/scope(_:)","title":"func scope(Scope) -> Self","type":"method"},{"path":"\/documentation\/factory\/factorymodifying\/timetolive(_:)","title":"func timeToLive(TimeInterval) -> Self","type":"method"}],"path":"\/documentation\/factory\/factorymodifying","title":"FactoryModifying","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/managedcontainer\/manager","title":"var manager: ContainerManager","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/managedcontainer\/callasfunction(key:_:)-9ht01","title":"func callAsFunction<P, T>(key: StaticString, ParameterFactoryType<P, T>) -> ParameterFactory<P, T>","type":"method"},{"path":"\/documentation\/factory\/managedcontainer\/callasfunction(key:_:)-up8n","title":"func callAsFunction<T>(key: StaticString, VoidFactoryType<T>) -> Factory<T>","type":"method"},{"path":"\/documentation\/factory\/managedcontainer\/decorator(_:)","title":"func decorator(((Any) -> ())?)","type":"method"},{"path":"\/documentation\/factory\/managedcontainer\/promised(key:file:line:)-663f6","title":"func promised<P, T>(key: StaticString, file: StaticString, line: UInt) -> ParameterFactory<P, T?>","type":"method"},{"path":"\/documentation\/factory\/managedcontainer\/promised(key:file:line:)-8l95o","title":"func promised<T>(key: StaticString, file: StaticString, line: UInt) -> Factory<T?>","type":"method"},{"path":"\/documentation\/factory\/managedcontainer\/reset(options:)","title":"func reset(options: FactoryResetOptions)","type":"method"},{"path":"\/documentation\/factory\/managedcontainer\/with(_:)","title":"func with((Self) -> Void) -> Self","type":"method"}],"path":"\/documentation\/factory\/managedcontainer","title":"ManagedContainer","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/factory\/resolving\/factory(_:)-6s19m","title":"func factory<T>(T.Type) -> Factory<T>?","type":"method"}],"title":"Resolving Implementations","type":"groupMarker"}],"path":"\/documentation\/factory\/resolving\/factory(_:)","title":"func factory<T>(T.Type) -> Factory<T>?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/factory\/resolving\/register(_:factory:)-9ktpf","title":"func register<T>(T.Type, factory: () -> T) -> Factory<T>","type":"method"}],"title":"Resolving Implementations","type":"groupMarker"}],"path":"\/documentation\/factory\/resolving\/register(_:factory:)","title":"func register<T>(T.Type, factory: () -> T) -> Factory<T>","type":"method"},{"children":[{"children":[{"path":"\/documentation\/factory\/resolving\/resolve(_:)-82xu1","title":"func resolve<T>(T.Type) -> T?","type":"method"}],"title":"Resolving Implementations","type":"groupMarker"}],"path":"\/documentation\/factory\/resolving\/resolve(_:)","title":"func resolve<T>(T.Type) -> T?","type":"method"}],"path":"\/documentation\/factory\/resolving","title":"Resolving","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/sharedcontainer\/shared","title":"static var shared: Self","type":"property"}],"path":"\/documentation\/factory\/sharedcontainer","title":"SharedContainer","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/containertrait\/providescope(for:testcase:performing:)","title":"func provideScope(for: Test, testCase: Test.Case?, performing: () async throws -> Void) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/containertrait\/comments","title":"var comments: [Comment]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/containertrait\/prepare(for:)","title":"func prepare(for: Test) async throws","type":"method"},{"path":"\/documentation\/factory\/containertrait\/scopeprovider(for:testcase:)","title":"func scopeProvider(for: Test, testCase: Test.Case?) -> Self?","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/containertrait\/container","title":"static var container: ContainerTrait","type":"property"}],"path":"\/documentation\/factory\/containertrait\/trait-implementations","title":"Trait Implementations","type":"symbol"}],"path":"\/documentation\/factory\/containertrait","title":"ContainerTrait","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/dynamicinjected\/init(_:)-2f6gs","title":"init<C>(KeyPath<C, Factory<T>>)","type":"init"},{"path":"\/documentation\/factory\/dynamicinjected\/init(_:)-3wi25","title":"init(KeyPath<Container, Factory<T>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/dynamicinjected\/projectedvalue","title":"var projectedValue: Factory<T>","type":"property"},{"path":"\/documentation\/factory\/dynamicinjected\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/factory\/dynamicinjected","title":"DynamicInjected","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/factory\/init(_:key:_:)","title":"init(any ManagedContainer, key: StaticString, VoidFactoryType<T>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/factory\/registration","title":"var registration: FactoryRegistration<Void, T>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/factory\/callasfunction()","title":"func callAsFunction() -> T","type":"method"},{"path":"\/documentation\/factory\/factory\/register(factory:)","title":"func register(factory: VoidFactoryType<T>) -> Factory<T>","type":"method"},{"path":"\/documentation\/factory\/factory\/resolve()","title":"func resolve() -> T","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/factory\/cached","title":"var cached: Self","type":"property"},{"path":"\/documentation\/factory\/factory\/graph","title":"var graph: Self","type":"property"},{"path":"\/documentation\/factory\/factory\/shared","title":"var shared: Self","type":"property"},{"path":"\/documentation\/factory\/factory\/singleton","title":"var singleton: Self","type":"property"},{"path":"\/documentation\/factory\/factory\/unique","title":"var unique: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/factory\/context(_:factory:)","title":"func context(FactoryContextType..., factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/decorator(_:)","title":"func decorator((Self.T) -> Void) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/onarg(_:factory:)","title":"func onArg(String, factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/onargs(_:factory:)","title":"func onArgs([String], factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/ondebug(factory:)","title":"func onDebug(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/ondevice(factory:)","title":"func onDevice(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/onpreview(factory:)","title":"func onPreview(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/onsimulator(factory:)","title":"func onSimulator(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/ontest(factory:)","title":"func onTest(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/once()","title":"func once() -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/reset(_:)","title":"func reset(FactoryResetOptions) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/scope(_:)","title":"func scope(Scope) -> Self","type":"method"},{"path":"\/documentation\/factory\/factory\/timetolive(_:)","title":"func timeToLive(TimeInterval) -> Self","type":"method"}],"path":"\/documentation\/factory\/factory\/factorymodifying-implementations","title":"FactoryModifying Implementations","type":"symbol"}],"path":"\/documentation\/factory\/factory","title":"Factory","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/factorycontext\/arguments","title":"var arguments: [String]","type":"property"},{"path":"\/documentation\/factory\/factorycontext\/isdebug","title":"var isDebug: Bool","type":"property"},{"path":"\/documentation\/factory\/factorycontext\/ispreview","title":"var isPreview: Bool","type":"property"},{"path":"\/documentation\/factory\/factorycontext\/issimulator","title":"var isSimulator: Bool","type":"property"},{"path":"\/documentation\/factory\/factorycontext\/istest","title":"var isTest: Bool","type":"property"},{"path":"\/documentation\/factory\/factorycontext\/runtimearguments","title":"var runtimeArguments: [String : String]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/factorycontext\/current","title":"static var current: FactoryContext","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/factorycontext\/removearg(forkey:)","title":"static func removeArg(forKey: String)","type":"method"},{"path":"\/documentation\/factory\/factorycontext\/setarg(_:forkey:)","title":"static func setArg(String, forKey: String)","type":"method"}],"path":"\/documentation\/factory\/factorycontext","title":"FactoryContext","type":"struct"},{"path":"\/documentation\/factory\/factoryregistration","title":"FactoryRegistration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/injected\/init(_:)-7xpmb","title":"init(KeyPath<Container, Factory<T>>)","type":"init"},{"path":"\/documentation\/factory\/injected\/init(_:)-9sxzk","title":"init<C>(KeyPath<C, Factory<T>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/injected\/factory","title":"var factory: Factory<T>","type":"property"},{"path":"\/documentation\/factory\/injected\/projectedvalue","title":"var projectedValue: Injected<T>","type":"property"},{"path":"\/documentation\/factory\/injected\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/injected\/resolve(reset:)","title":"func resolve(reset: FactoryResetOptions)","type":"method"}],"path":"\/documentation\/factory\/injected","title":"Injected","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/injectedobject\/init(_:)-4awwf","title":"init(T)","type":"init"},{"path":"\/documentation\/factory\/injectedobject\/init(_:)-7dlth","title":"init(KeyPath<Container, Factory<T>>)","type":"init"},{"path":"\/documentation\/factory\/injectedobject\/init(_:)-8lxkh","title":"init<C>(KeyPath<C, Factory<T>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/injectedobject\/projectedvalue","title":"var projectedValue: ObservedObject<T>.Wrapper","type":"property"},{"path":"\/documentation\/factory\/injectedobject\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/injectedobject\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/factory\/injectedobject\/dynamicproperty-implementations","title":"DynamicProperty Implementations","type":"symbol"}],"path":"\/documentation\/factory\/injectedobject","title":"InjectedObject","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/injectedobservable\/init(_:)-715un","title":"init(KeyPath<Container, Factory<T>>)","type":"init"},{"path":"\/documentation\/factory\/injectedobservable\/init(_:)-7v9fn","title":"init<C>(KeyPath<C, Factory<T>>)","type":"init"},{"path":"\/documentation\/factory\/injectedobservable\/init(_:)-9bqj9","title":"init(@autoclosure () -> T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/injectedobservable\/projectedvalue","title":"var projectedValue: Binding<T>","type":"property"},{"path":"\/documentation\/factory\/injectedobservable\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/injectedobservable\/update()","title":"func update()","type":"method"}],"path":"\/documentation\/factory\/injectedobservable\/dynamicproperty-implementations","title":"DynamicProperty Implementations","type":"symbol"}],"path":"\/documentation\/factory\/injectedobservable","title":"InjectedObservable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/injectedtype\/init()","title":"init()","type":"init"},{"path":"\/documentation\/factory\/injectedtype\/init(_:)","title":"init(any ManagedContainer)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/injectedtype\/wrappedvalue","title":"var wrappedValue: T?","type":"property"}],"path":"\/documentation\/factory\/injectedtype","title":"InjectedType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/lazyinjected\/init(_:)-1mer0","title":"init(KeyPath<Container, Factory<T>>)","type":"init"},{"path":"\/documentation\/factory\/lazyinjected\/init(_:)-8np9u","title":"init<C>(KeyPath<C, Factory<T>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/lazyinjected\/factory","title":"var factory: Factory<T>","type":"property"},{"path":"\/documentation\/factory\/lazyinjected\/projectedvalue","title":"var projectedValue: LazyInjected<T>","type":"property"},{"path":"\/documentation\/factory\/lazyinjected\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/lazyinjected\/resolve(reset:)","title":"func resolve(reset: FactoryResetOptions)","type":"method"},{"path":"\/documentation\/factory\/lazyinjected\/resolvedornil()","title":"func resolvedOrNil() -> T?","type":"method"}],"path":"\/documentation\/factory\/lazyinjected","title":"LazyInjected","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/parameterfactory\/init(_:key:_:)","title":"init(any ManagedContainer, key: StaticString, ParameterFactoryType<P, T>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/parameterfactory\/registration","title":"var registration: FactoryRegistration<P, T>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/parameterfactory\/callasfunction(_:)","title":"func callAsFunction(P) -> T","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/register(factory:)","title":"func register(factory: ParameterFactoryType<P, T>) -> ParameterFactory<P, T>","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/resolve(_:)","title":"func resolve(P) -> T","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/parameterfactory\/cached","title":"var cached: Self","type":"property"},{"path":"\/documentation\/factory\/parameterfactory\/graph","title":"var graph: Self","type":"property"},{"path":"\/documentation\/factory\/parameterfactory\/shared","title":"var shared: Self","type":"property"},{"path":"\/documentation\/factory\/parameterfactory\/singleton","title":"var singleton: Self","type":"property"},{"path":"\/documentation\/factory\/parameterfactory\/unique","title":"var unique: Self","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/parameterfactory\/context(_:factory:)","title":"func context(FactoryContextType..., factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/decorator(_:)","title":"func decorator((Self.T) -> Void) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/onarg(_:factory:)","title":"func onArg(String, factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/onargs(_:factory:)","title":"func onArgs([String], factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/ondebug(factory:)","title":"func onDebug(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/ondevice(factory:)","title":"func onDevice(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/onpreview(factory:)","title":"func onPreview(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/onsimulator(factory:)","title":"func onSimulator(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/ontest(factory:)","title":"func onTest(factory: ParameterFactoryType<Self.P, Self.T>) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/once()","title":"func once() -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/reset(_:)","title":"func reset(FactoryResetOptions) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/scope(_:)","title":"func scope(Scope) -> Self","type":"method"},{"path":"\/documentation\/factory\/parameterfactory\/timetolive(_:)","title":"func timeToLive(TimeInterval) -> Self","type":"method"}],"path":"\/documentation\/factory\/parameterfactory\/factorymodifying-implementations","title":"FactoryModifying Implementations","type":"symbol"}],"path":"\/documentation\/factory\/parameterfactory","title":"ParameterFactory","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/factory\/weaklazyinjected\/init(_:)-4r0lx","title":"init(KeyPath<Container, Factory<T>>)","type":"init"},{"path":"\/documentation\/factory\/weaklazyinjected\/init(_:)-75hq3","title":"init<C>(KeyPath<C, Factory<T>>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/factory\/weaklazyinjected\/factory","title":"var factory: Factory<T>","type":"property"},{"path":"\/documentation\/factory\/weaklazyinjected\/projectedvalue","title":"var projectedValue: WeakLazyInjected<T>","type":"property"},{"path":"\/documentation\/factory\/weaklazyinjected\/wrappedvalue","title":"var wrappedValue: T?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/factory\/weaklazyinjected\/resolve(reset:)","title":"func resolve(reset: FactoryResetOptions)","type":"method"},{"path":"\/documentation\/factory\/weaklazyinjected\/resolvedornil()","title":"func resolvedOrNil() -> T?","type":"method"}],"path":"\/documentation\/factory\/weaklazyinjected","title":"WeakLazyInjected","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/factory\/resolve(_:)-52olu","title":"func resolve<T>(KeyPath<Container, Factory<T>>) -> T","type":"func"},{"path":"\/documentation\/factory\/resolve(_:)-632zk","title":"func resolve<C, T>(KeyPath<C, Factory<T>>) -> T","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/factory\/factoryautoregistering","title":"FactoryAutoRegistering","type":"typealias"},{"path":"\/documentation\/factory\/factorycontainer","title":"FactoryContainer","type":"typealias"},{"path":"\/documentation\/factory\/factorycontainermanager","title":"FactoryContainerManager","type":"typealias"},{"path":"\/documentation\/factory\/factorymanagedcontainer","title":"FactoryManagedContainer","type":"typealias"},{"path":"\/documentation\/factory\/factoryresolving","title":"FactoryResolving","type":"typealias"},{"path":"\/documentation\/factory\/factoryscope","title":"FactoryScope","type":"typealias"},{"path":"\/documentation\/factory\/factorysharedcontainer","title":"FactorySharedContainer","type":"typealias"},{"path":"\/documentation\/factory\/parameterfactorytype","title":"ParameterFactoryType","type":"typealias"},{"path":"\/documentation\/factory\/voidfactorytype","title":"VoidFactoryType","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/factory\/factorycontexttype\/arg(_:)","title":"case arg(String)","type":"case"},{"path":"\/documentation\/factory\/factorycontexttype\/args(_:)","title":"case args([String])","type":"case"},{"path":"\/documentation\/factory\/factorycontexttype\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/factory\/factorycontexttype\/device","title":"case device","type":"case"},{"path":"\/documentation\/factory\/factorycontexttype\/preview","title":"case preview","type":"case"},{"path":"\/documentation\/factory\/factorycontexttype\/simulator","title":"case simulator","type":"case"},{"path":"\/documentation\/factory\/factorycontexttype\/test","title":"case test","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/factory\/factorycontexttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/factory\/factorycontexttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/factory\/factorycontexttype","title":"FactoryContextType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/factory\/factoryresetoptions\/all","title":"case all","type":"case"},{"path":"\/documentation\/factory\/factoryresetoptions\/context","title":"case context","type":"case"},{"path":"\/documentation\/factory\/factoryresetoptions\/none","title":"case none","type":"case"},{"path":"\/documentation\/factory\/factoryresetoptions\/registration","title":"case registration","type":"case"},{"path":"\/documentation\/factory\/factoryresetoptions\/scope","title":"case scope","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/factory\/factoryresetoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/factory\/factoryresetoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/factory\/factoryresetoptions","title":"FactoryResetOptions","type":"enum"}],"path":"\/documentation\/factory","title":"Factory","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}