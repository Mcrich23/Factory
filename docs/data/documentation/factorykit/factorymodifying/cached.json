{"variants":[{"paths":["\/documentation\/factorykit\/factorymodifying\/cached"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"cached","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Property","role":"symbol","extendedModule":"FactoryKit","symbolKind":"property","modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit0A9ModifyingPAAE6cachedxvp"},"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","type":"reference"},{"text":".","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/cached"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"syntax":"swift","code":["var service: Factory<ServiceType> {","    factory { MyService() }","        .cached","}"],"type":"codeListing"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/cached":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/cached","type":"topic","title":"cached","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","isActive":true},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","url":"\/documentation\/factorykit\/factorymodifying\/cached"},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryModifying"}],"title":"FactoryModifying","url":"\/documentation\/factorykit\/factorymodifying","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class":{"title":"Scope.Cached","abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}],"navigatorTitle":[{"kind":"identifier","text":"Cached"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/scope\/cached-swift.class","type":"topic"}}}