{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"]}],"kind":"content"}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/singleton","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/factorykit\/factorymodifying\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"},{"type":"text","text":"."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"title":"singleton","modules":[{"name":"FactoryKit"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:10FactoryKit0A9ModifyingPAAE9singletonxvp","role":"symbol","roleHeading":"Instance Property","symbolKind":"property","extendedModule":"FactoryKit"},"references":{"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/singleton":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/singleton","title":"singleton","url":"\/documentation\/factorykit\/factorymodifying\/singleton","role":"symbol","type":"topic","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","isActive":true},{"text":".","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","title":"FactoryModifying","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}],"abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/factorymodifying","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","type":"topic","kind":"symbol","title":"Scope.Singleton","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"}}}