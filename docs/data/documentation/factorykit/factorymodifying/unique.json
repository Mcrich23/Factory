{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"syntax":"swift","type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .unique","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While you can add the modifier, Factory’s are unique by default."}]}]}],"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/unique"},"abstract":[{"text":"Syntactic sugar defines defines unique scope. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","type":"reference"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/factorykit\/factorymodifying\/unique"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:10FactoryKit0A9ModifyingPAAE6uniquexvp","symbolKind":"property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"unique","modules":[{"name":"FactoryKit"}],"extendedModule":"FactoryKit","roleHeading":"Instance Property"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://FactoryKit/documentation/FactoryKit/Scope":{"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factorykit\/scope","title":"Scope","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/unique":{"type":"topic","role":"symbol","abstract":[{"text":"Syntactic sugar defines defines unique scope. See ","type":"text"},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","type":"reference","isActive":true},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/unique","url":"\/documentation\/factorykit\/factorymodifying\/unique","title":"unique","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","type":"topic","title":"FactoryKit","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","role":"collection"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","type":"topic","kind":"symbol","url":"\/documentation\/factorykit\/factorymodifying","abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"role":"symbol","navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"title":"FactoryModifying","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}]}}}