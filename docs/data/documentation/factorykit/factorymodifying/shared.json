{"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"paths":["\/documentation\/factorykit\/factorymodifying\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","isActive":true},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .shared","}"],"syntax":"swift","type":"codeListing"}]}],"metadata":{"role":"symbol","externalID":"s:10FactoryKit0A9ModifyingPAAE6sharedxvp","roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"FactoryKit"}],"extendedModule":"FactoryKit","title":"shared","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/shared"},"references":{"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}],"title":"FactoryModifying","url":"\/documentation\/factorykit\/factorymodifying"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/shared":{"role":"symbol","url":"\/documentation\/factorykit\/factorymodifying\/shared","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/shared","title":"shared"},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"navigatorTitle":[{"kind":"identifier","text":"Shared"}],"url":"\/documentation\/factorykit\/scope\/shared-swift.class","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","title":"Scope.Shared","kind":"symbol","role":"symbol"}}}