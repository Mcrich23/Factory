{"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","type":"reference","isActive":true},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/factorykit\/factorymodifying\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"syntax":"swift","type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .shared","}"]}],"kind":"content"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"extendedModule":"FactoryKit","title":"shared","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","externalID":"s:10FactoryKit0A9ModifyingPAAE6sharedxvp","modules":[{"name":"FactoryKit"}],"roleHeading":"Instance Property","symbolKind":"property"},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/shared"},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"references":{"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/shared":{"role":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"shared","url":"\/documentation\/factorykit\/factorymodifying\/shared","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/shared","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","type":"reference"},{"text":".","type":"text"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"title":"Scope.Shared","kind":"symbol","url":"\/documentation\/factorykit\/scope\/shared-swift.class","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}]},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"title":"FactoryModifying","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","url":"\/documentation\/factorykit\/factorymodifying","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}],"navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"kind":"symbol"}}}