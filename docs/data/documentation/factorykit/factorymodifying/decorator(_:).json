{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"text":"Adds a factory specific decorator. The decorator will ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decorator"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/T","preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"platforms":["macOS"]}]},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This includes previously created items that may have been cached by a scope."}]},{"syntax":"swift","type":"codeListing","code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/decorator(_:)"},"variants":[{"paths":["\/documentation\/factorykit\/factorymodifying\/decorator(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Instance Method","title":"decorator(_:)","symbolKind":"method","role":"symbol","extendedModule":"FactoryKit","modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit0A9ModifyingPAAE9decoratoryxy1TQzYbcF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"references":{"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryModifying"}],"title":"FactoryModifying","url":"\/documentation\/factorykit\/factorymodifying","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}]},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/T":{"abstract":[{"text":"The return type of the Factory’s dependency.","type":"text"}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/T","kind":"symbol","url":"\/documentation\/factorykit\/factorymodifying\/t","type":"topic","title":"T","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"T"}],"required":true},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/decorator(_:)":{"type":"topic","kind":"symbol","role":"symbol","title":"decorator(_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/decorator(_:)","abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"type":"emphasis","inlineContent":[{"text":"always","type":"text"}]},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"type":"text","text":"for further examination or manipulation."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factorykit\/factorymodifying\/decorator(_:)"}}}