{"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"variants":[{"paths":["\/documentation\/factorykit\/factorymodifying\/scopeonparameters"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"abstract":[{"text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are","type":"text"},{"text":" ","type":"text"},{"text":"passed on future requests.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopeOnParameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"The behavior can be changed with the ","type":"text"},{"code":".scopeOnParameters","type":"codeVoice"},{"text":" modifier.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["var parameterService: ParameterFactory<Int, ParameterService> {","    self { ParameterService(value: $0) }.scopeOnParameters.cached","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The passed parameter must be Hashable for this modifier to appear and for the per-parameter caching functionality to occur."}],"type":"paragraph"}]}],"metadata":{"symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"P"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"extendedModule":"FactoryKit","roleHeading":"Instance Property","externalID":"s:10FactoryKit0A9ModifyingPAASH1PRpzrlE17scopeOnParametersxvp","title":"scopeOnParameters","modules":[{"name":"FactoryKit"}],"role":"symbol"},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/scopeOnParameters"},"references":{"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/scopeOnParameters":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/scopeOnParameters","abstract":[{"text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are","type":"text"},{"text":" ","type":"text"},{"text":"passed on future requests.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/factorykit\/factorymodifying\/scopeonparameters","title":"scopeOnParameters","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"P","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","title":"FactoryModifying","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}],"abstract":[{"text":"Public protocol with functionality common to all Factoryâ€™s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/factorymodifying","type":"topic"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"}}}