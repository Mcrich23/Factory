{"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"roleHeading":"Structure","modules":[{"name":"FactoryKit"}],"symbolKind":"struct","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"externalID":"s:10FactoryKit0A0V","title":"Factory"},"abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"kind":"symbol","variants":[{"paths":["\/documentation\/factorykit\/factory"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","doc:\/\/FactoryKit\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/init(_:key:_:)"]},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/registration"]},{"anchor":"Instance-Methods","generated":true,"title":"Instance Methods","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/callAsFunction()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/register(factory:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/resolve()"]},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/FactoryModifying-Implementations"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s used to produce an object of the desired type when required. This may be a brand new instance or Factory may"},{"type":"text","text":" "},{"type":"text","text":"return a previously cached value from the specified scope."}]},{"type":"heading","text":"Defining a Factory","level":2,"anchor":"Defining-a-Factory"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s define a Factory that returns an instance of "},{"type":"codeVoice","code":"ServiceType"},{"type":"text","text":". To do that we need to extend a Factory "},{"type":"codeVoice","code":"Container"},{"type":"text","text":" and within"},{"type":"text","text":" "},{"type":"text","text":"that container we define a new computed variable of type "},{"type":"codeVoice","code":"Factory<ServiceType>"},{"type":"text","text":". The type must be explicitly defined, and is usually a"},{"type":"text","text":" "},{"type":"text","text":"protocol to which the returned dependency conforms."}]},{"type":"codeListing","syntax":"swift","code":["extension Container {","    var service: Factory<ServiceType> {","        Factory(self) { MyService() }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inside the computed variable we define our Factory, passing it a reference to the enclosing container. We also provide it with"},{"type":"text","text":" "},{"type":"text","text":"a closure that creates an instance of our dependency when required. That Factory is then returned to the caller, usually to be evaluated"},{"type":"text","text":" "},{"type":"text","text":"(see "},{"type":"codeVoice","code":"callAsFunction()"},{"type":"text","text":" below). Every time we resolve this factory we’ll get a new, unique instance of our object."}]},{"type":"paragraph","inlineContent":[{"text":"Factory also provides a bit of syntactic sugar that lets us do the same thing in a more convenient form,","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","    }","}"]},{"type":"heading","text":"Transient","level":2,"anchor":"Transient"},{"type":"paragraph","inlineContent":[{"text":"If you’re concerned about building Factory’s on the fly, don’t be. Like SwiftUI Views, Factory structs and modifiers","type":"text"},{"text":" ","type":"text"},{"text":"are lightweight and transitory. They’re created when needed and then immediately discarded once their purpose has","type":"text"},{"text":" ","type":"text"},{"text":"been served.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Other operations exist for Factory. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","type":"reference"},{"text":".","type":"text"}]}],"kind":"content"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"references":{"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Factory/callAsFunction()":{"kind":"symbol","title":"callAsFunction()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/callAsFunction()","url":"\/documentation\/factorykit\/factory\/callasfunction()","abstract":[{"type":"text","text":"Evaluates the factory and returns an object or service of the desired type. The resolved instance may be brand new or Factory may"},{"type":"text","text":" "},{"type":"text","text":"return a cached value from the specified scope."}],"type":"topic","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"title":"FactoryModifying","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","url":"\/documentation\/factorykit\/factorymodifying","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}],"navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Factory","kind":"identifier"}],"abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"title":"Factory","url":"\/documentation\/factorykit\/factory","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"},"doc://FactoryKit/documentation/FactoryKit/Factory/register(factory:)":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/register(factory:)","abstract":[{"type":"text","text":"Registers a new factory closure capable of producing an object or service of the desired type."}],"kind":"symbol","url":"\/documentation\/factorykit\/factory\/register(factory:)","title":"register(factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit04VoidA4Typea"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Factory/init(_:key:_:)":{"role":"symbol","url":"\/documentation\/factorykit\/factory\/init(_:key:_:)","type":"topic","abstract":[{"text":"Public initializer creates a Factory capable of managing dependencies of the desired type.","type":"text"}],"title":"init(_:key:_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/init(_:key:_:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(any ","kind":"text"},{"text":"ManagedContainer","preciseIdentifier":"s:10FactoryKit16ManagedContainerP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit04VoidA4Typea"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">)"}]},"doc://FactoryKit/documentation/FactoryKit/Factory/registration":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"registration","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A12RegistrationV","text":"FactoryRegistration","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","role":"symbol","abstract":[{"text":"Internal parameters for this Factory including id, container, the factory closure itself, the scope,","type":"text"},{"text":" ","type":"text"},{"text":"and others.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/registration","url":"\/documentation\/factorykit\/factory\/registration","title":"registration","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/Factory/FactoryModifying-Implementations":{"abstract":[],"role":"collectionGroup","kind":"article","title":"FactoryModifying Implementations","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/FactoryModifying-Implementations","type":"topic","url":"\/documentation\/factorykit\/factory\/factorymodifying-implementations"},"doc://FactoryKit/s8SendableP":{"identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://FactoryKit/documentation/FactoryKit/Factory/resolve()":{"role":"symbol","url":"\/documentation\/factorykit\/factory\/resolve()","type":"topic","abstract":[{"type":"text","text":"Unsugared resolution function."}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/resolve()","title":"resolve()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}}}