{"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager"]]},"kind":"symbol","sections":[],"metadata":{"modules":[{"name":"FactoryKit"}],"title":"reset(scope:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":")"}],"role":"symbol","extendedModule":"FactoryKit","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:10FactoryKit16ContainerManagerC5reset5scopeyAA5ScopeC_tF"},"abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/factorykit\/containermanager\/reset(scope:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)"},"references":{"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(scope:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"title":"reset(scope:)","url":"\/documentation\/factorykit\/containermanager\/reset(scope:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)"},"doc://FactoryKit/documentation/FactoryKit/Scope":{"url":"\/documentation\/factorykit\/scope","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","role":"symbol","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"title":"Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}],"navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"title":"ContainerManager","kind":"symbol","type":"topic","url":"\/documentation\/factorykit\/containermanager","abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}]}}}