{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer"]]},"sections":[],"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85"]}],"metadata":{"extendedModule":"FactoryKit","modules":[{"name":"FactoryKit"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"externalID":"s:10FactoryKit16ManagedContainerPAAE8promised3key4file4lineAA0A0Vyqd__SgGs12StaticStringV_AMSutlF","roleHeading":"Instance Method","role":"symbol","title":"promised(key:file:line:)"},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#file","kind":"keyword"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":" = ","kind":"text"},{"text":"#line","kind":"keyword"},{"text":") -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"syntax":"swift","type":"codeListing","code":["extension Container {","    public var accountLoader: Factory<AccountLoading?> { promised() }","}"]},{"inlineContent":[{"text":"When run in debug mode and the application attempts to resolve an unregistered accountLoader, ","type":"text"},{"type":"codeVoice","code":"promised()"},{"text":" will trigger a fatalError to","type":"text"},{"text":" ","type":"text"},{"text":"inform you of the mistake. But in a released application, ","type":"text"},{"type":"codeVoice","code":"promised()"},{"text":" simply returns nil and your application can continue on.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://FactoryKit/documentation/FactoryKit/Factory":{"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"role":"symbol","title":"Factory","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"url":"\/documentation\/factorykit\/factory","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-1lq85":{"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","kind":"symbol","type":"topic","title":"promised(key:file:line:)","url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"kind":"symbol","title":"ManagedContainer","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","type":"topic","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factorykit\/managedcontainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}]}}}