{"sections":[],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/projectedValue","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LazyInjected","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected","preciseIdentifier":"s:10FactoryKit12LazyInjectedV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected"]]},"abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"metadata":{"symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LazyInjected","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit12LazyInjectedV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Property","title":"projectedValue","modules":[{"name":"FactoryKit"}],"role":"symbol","externalID":"s:10FactoryKit12LazyInjectedV14projectedValueACyxGvp"},"variants":[{"paths":["\/documentation\/factorykit\/lazyinjected\/projectedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/LazyInjected/projectedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LazyInjected","preciseIdentifier":"s:10FactoryKit12LazyInjectedV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"projectedValue","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/projectedValue","role":"symbol","type":"topic","url":"\/documentation\/factorykit\/lazyinjected\/projectedvalue","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}]},"doc://FactoryKit/documentation/FactoryKit/LazyInjected":{"kind":"symbol","url":"\/documentation\/factorykit\/lazyinjected","type":"topic","role":"symbol","navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyInjected","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected","title":"LazyInjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested."}]}}}