{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"(","kind":"text"},{"text":"reset","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"options","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryResetOptions","text":"FactoryResetOptions","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","kind":"typeIdentifier"},{"text":" = .none)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Allows the user to force a Factory resolution at their discretion."}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected"]]},"metadata":{"modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit12LazyInjectedV7resolve5resetyAA0A12ResetOptionsO_tF","roleHeading":"Instance Method","title":"resolve(reset:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"("},{"kind":"externalParam","text":"reset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions"},{"kind":"text","text":")"}],"symbolKind":"method"},"kind":"symbol","identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/resolve(reset:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/lazyinjected\/resolve(reset:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://FactoryKit/documentation/FactoryKit/FactoryResetOptions":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryResetOptions"}],"navigatorTitle":[{"kind":"identifier","text":"FactoryResetOptions"}],"url":"\/documentation\/factorykit\/factoryresetoptions","role":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryResetOptions","title":"FactoryResetOptions","abstract":[{"type":"text","text":"Reset options for Factory’s and Container’s"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/LazyInjected":{"kind":"symbol","url":"\/documentation\/factorykit\/lazyinjected","type":"topic","role":"symbol","navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyInjected","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected","title":"LazyInjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested."}]},"doc://FactoryKit/documentation/FactoryKit/LazyInjected/resolve(reset:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"(","kind":"text"},{"text":"reset","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/factorykit\/lazyinjected\/resolve(reset:)","title":"resolve(reset:)","abstract":[{"type":"text","text":"Allows the user to force a Factory resolution at their discretion."}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/resolve(reset:)"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}