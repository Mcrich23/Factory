{"abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected"]]},"metadata":{"title":"wrappedValue","role":"symbol","roleHeading":"Instance Property","externalID":"s:10FactoryKit12LazyInjectedV12wrappedValuexvp","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"modules":[{"name":"FactoryKit"}],"symbolKind":"property"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/wrappedValue"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/factorykit\/lazyinjected\/wrappedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"references":{"doc://FactoryKit/documentation/FactoryKit/LazyInjected":{"kind":"symbol","url":"\/documentation\/factorykit\/lazyinjected","type":"topic","role":"symbol","navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyInjected","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected","title":"LazyInjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested."}]},"doc://FactoryKit/documentation/FactoryKit/LazyInjected/wrappedValue":{"abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"title":"wrappedValue","role":"symbol","type":"topic","url":"\/documentation\/factorykit\/lazyinjected\/wrappedvalue","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}