{"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/wrappedValue","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/lazyinjected\/wrappedvalue"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected"]]},"sections":[],"metadata":{"modules":[{"name":"FactoryKit"}],"title":"wrappedValue","symbolKind":"property","roleHeading":"Instance Property","externalID":"s:10FactoryKit12LazyInjectedV12wrappedValuexvp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]}],"references":{"doc://FactoryKit/documentation/FactoryKit/LazyInjected":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected","title":"LazyInjected","navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyInjected","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/factorykit\/lazyinjected","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested.","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/LazyInjected/wrappedValue":{"type":"topic","title":"wrappedValue","url":"\/documentation\/factorykit\/lazyinjected\/wrappedvalue","kind":"symbol","abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/wrappedValue"},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"}}}