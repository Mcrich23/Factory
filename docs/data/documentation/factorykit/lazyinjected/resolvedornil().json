{"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected"]]},"metadata":{"modules":[{"name":"FactoryKit"}],"symbolKind":"method","title":"resolvedOrNil()","externalID":"s:10FactoryKit12LazyInjectedV13resolvedOrNilxSgyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"roleHeading":"Instance Method","role":"symbol"},"variants":[{"paths":["\/documentation\/factorykit\/lazyinjected\/resolvedornil()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/resolvedOrNil()","interfaceLanguage":"swift"},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Projected function returns resolved instance if it exists."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This can come in handy when you need to perform some sort of cleanup, but you don’t want to resolve","type":"text"},{"text":" ","type":"text"},{"text":"the property wrapper instance if it hasn’t already been resolved.","type":"text"}]},{"code":["deinit {","    $myService.resolvedOrNil()?.cleanup()","}"],"type":"codeListing","syntax":"swift"}]}],"sections":[],"references":{"doc://FactoryKit/documentation/FactoryKit/LazyInjected/resolvedOrNil()":{"abstract":[{"type":"text","text":"Projected function returns resolved instance if it exists."}],"title":"resolvedOrNil()","type":"topic","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/resolvedOrNil()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"url":"\/documentation\/factorykit\/lazyinjected\/resolvedornil()"},"doc://FactoryKit/documentation/FactoryKit/LazyInjected":{"title":"LazyInjected","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyInjected"}],"navigatorTitle":[{"kind":"identifier","text":"LazyInjected"}],"kind":"symbol","url":"\/documentation\/factorykit\/lazyinjected","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected","role":"symbol","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested.","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"}}}