{"variants":[{"paths":["\/documentation\/factorykit\/lazyinjected\/resolvedornil()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","modules":[{"name":"FactoryKit"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"externalID":"s:10FactoryKit12LazyInjectedV13resolvedOrNilxSgyF","title":"resolvedOrNil()"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/resolvedOrNil()"},"sections":[],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This can come in handy when you need to perform some sort of cleanup, but you don’t want to resolve","type":"text"},{"text":" ","type":"text"},{"text":"the property wrapper instance if it hasn’t already been resolved.","type":"text"}]},{"code":["deinit {","    $myService.resolvedOrNil()?.cleanup()","}"],"type":"codeListing","syntax":"swift"}]}],"abstract":[{"type":"text","text":"Projected function returns resolved instance if it exists."}],"references":{"doc://FactoryKit/documentation/FactoryKit/LazyInjected":{"abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested.","type":"text"}],"type":"topic","url":"\/documentation\/factorykit\/lazyinjected","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected","navigatorTitle":[{"kind":"identifier","text":"LazyInjected"}],"title":"LazyInjected","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyInjected"}]},"doc://FactoryKit/documentation/FactoryKit/LazyInjected/resolvedOrNil()":{"type":"topic","kind":"symbol","abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"url":"\/documentation\/factorykit\/lazyinjected\/resolvedornil()","title":"resolvedOrNil()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/resolvedOrNil()"},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","url":"\/documentation\/factorykit"}}}