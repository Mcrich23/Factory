{"abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This can come in handy when you need to perform some sort of cleanup, but you don’t want to resolve","type":"text"},{"text":" ","type":"text"},{"text":"the property wrapper instance if it hasn’t already been resolved.","type":"text"}]},{"type":"codeListing","code":["deinit {","    $myService.resolvedOrNil()?.cleanup()","}"],"syntax":"swift"}]}],"variants":[{"paths":["\/documentation\/factorykit\/weaklazyinjected\/resolvedornil()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","title":"resolvedOrNil()","externalID":"s:10FactoryKit16WeakLazyInjectedV13resolvedOrNilxSgyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"modules":[{"name":"FactoryKit"}]},"references":{"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"url":"\/documentation\/factorykit\/weaklazyinjected","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"type":"topic","title":"WeakLazyInjected","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/resolvedOrNil()":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()","abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"url":"\/documentation\/factorykit\/weaklazyinjected\/resolvedornil()","type":"topic","role":"symbol","title":"resolvedOrNil()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}]}}}