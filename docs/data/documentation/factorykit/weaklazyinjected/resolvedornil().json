{"abstract":[{"type":"text","text":"Projected function returns resolved instance if it exists."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/weaklazyinjected\/resolvedornil()"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This can come in handy when you need to perform some sort of cleanup, but you don’t want to resolve","type":"text"},{"text":" ","type":"text"},{"text":"the property wrapper instance if it hasn’t already been resolved.","type":"text"}]},{"type":"codeListing","code":["deinit {","    $myService.resolvedOrNil()?.cleanup()","}"],"syntax":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()"},"sections":[],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected"]]},"kind":"symbol","metadata":{"symbolKind":"method","externalID":"s:10FactoryKit16WeakLazyInjectedV13resolvedOrNilxSgyF","title":"resolvedOrNil()","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"modules":[{"name":"FactoryKit"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"title":"WeakLazyInjected","url":"\/documentation\/factorykit\/weaklazyinjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested."}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/resolvedOrNil()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","kind":"symbol","title":"resolvedOrNil()","abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()","url":"\/documentation\/factorykit\/weaklazyinjected\/resolvedornil()"}}}