{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/weaklazyinjected\/init(_:)-24jhl"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"keyPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>) "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","preciseIdentifier":"s:10FactoryKit15SharedContainerP","text":"SharedContainer"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"keyPath","content":[{"inlineContent":[{"type":"text","text":"KeyPath to a Factory on the specified Container."}],"type":"paragraph"}]}],"kind":"parameters"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-24jhl","interfaceLanguage":"swift"},"metadata":{"externalID":"s:10FactoryKit16WeakLazyInjectedVyACyxGs7KeyPathCyqd__AA0A0VyxGGcAA15SharedContainerRd__lufc","roleHeading":"Initializer","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"symbolKind":"init","title":"init(_:)","modules":[{"name":"FactoryKit"}]},"sections":[],"references":{"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/init(_:)-24jhl":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-24jhl","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"url":"\/documentation\/factorykit\/weaklazyinjected\/init(_:)-24jhl","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"title":"init(_:)"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected":{"url":"\/documentation\/factorykit\/weaklazyinjected","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"}],"navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"role":"symbol","abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"kind":"symbol","type":"topic","title":"WeakLazyInjected"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"role":"symbol","title":"Factory","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"url":"\/documentation\/factorykit\/factory","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"type":"topic","url":"\/documentation\/factorykit\/sharedcontainer","title":"SharedContainer","kind":"symbol","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}