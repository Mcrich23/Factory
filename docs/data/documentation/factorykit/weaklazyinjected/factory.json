{"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"role":"symbol","roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"FactoryKit"}],"title":"factory","externalID":"s:10FactoryKit16WeakLazyInjectedV7factoryAA0A0VyxGvp"},"abstract":[{"text":"Grants access to the internal Factory.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/factory","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/factorykit\/weaklazyinjected\/factory"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"factory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Factory","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected":{"navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"url":"\/documentation\/factorykit\/weaklazyinjected","title":"WeakLazyInjected","role":"symbol","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"title":"Factory","url":"\/documentation\/factorykit\/factory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/factory":{"kind":"symbol","title":"factory","type":"topic","url":"\/documentation\/factorykit\/weaklazyinjected\/factory","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/factory","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Grants access to the internal Factory."}]},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","url":"\/documentation\/factorykit"}}}