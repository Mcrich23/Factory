{"sections":[],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"override"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class\/init()","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Initializer","symbolKind":"init","externalID":"s:10FactoryKit5ScopeC9SingletonCAEycfc","modules":[{"name":"FactoryKit"}],"title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"role":"symbol"},"variants":[{"paths":["\/documentation\/factorykit\/scope\/singleton-swift.class\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class/init()":{"type":"topic","title":"init()","role":"symbol","abstract":[],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class\/init()","url":"\/documentation\/factorykit\/scope\/singleton-swift.class\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class","kind":"symbol","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"role":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","title":"Scope.Singleton"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/Scope":{"url":"\/documentation\/factorykit\/scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"role":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","type":"topic","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}]}}}