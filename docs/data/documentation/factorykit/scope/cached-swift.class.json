{"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class\/init()"],"anchor":"Initializers","title":"Initializers","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/scope\/cached-swift.class"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope"],"title":"Inherits From","type":"inheritsFrom"},{"kind":"relationships","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"anchor":"Scope-Class-Definitions","title":"Scope Class Definitions","generated":true}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}]}],"kind":"declarations"}],"metadata":{"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cached","kind":"identifier"}],"modules":[{"name":"FactoryKit"}],"extendedModule":"FactoryKit","role":"symbol","symbolKind":"class","title":"Scope.Cached","externalID":"s:10FactoryKit5ScopeC6CachedC","roleHeading":"Class"},"sections":[],"references":{"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class","kind":"symbol","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"role":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","title":"Scope.Singleton"},"doc://FactoryKit/documentation/FactoryKit/Scope":{"url":"\/documentation\/factorykit\/scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"role":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","type":"topic","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Graph-swift.class":{"role":"symbol","title":"Scope.Graph","kind":"symbol","url":"\/documentation\/factorykit\/scope\/graph-swift.class","navigatorTitle":[{"text":"Graph","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","type":"topic","abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Graph","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class/init()":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","url":"\/documentation\/factorykit\/scope\/cached-swift.class\/init()","abstract":[]},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"navigatorTitle":[{"kind":"identifier","text":"Shared"}],"url":"\/documentation\/factorykit\/scope\/shared-swift.class","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","title":"Scope.Shared","kind":"symbol","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class":{"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"url":"\/documentation\/factorykit\/scope\/cached-swift.class","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","kind":"symbol","role":"symbol","title":"Scope.Cached","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cached","kind":"identifier"}],"type":"topic"},"doc://FactoryKit/s8SendableP":{"identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}