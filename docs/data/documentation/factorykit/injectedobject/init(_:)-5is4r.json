{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r"]}],"abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"sections":[],"metadata":{"externalID":"s:10FactoryKit14InjectedObjectVyACyxGxcfc","platforms":[{"beta":false,"name":"iOS","introducedAt":"14.0","deprecated":false,"unavailable":false},{"beta":false,"name":"macOS","introducedAt":"11.0","deprecated":false,"unavailable":false},{"beta":false,"name":"tvOS","introducedAt":"14.0","deprecated":false,"unavailable":false},{"beta":false,"name":"watchOS","introducedAt":"7.0","deprecated":false,"unavailable":false}],"role":"symbol","symbolKind":"init","extendedModule":"FactoryKit","roleHeading":"Initializer","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]},"modules":[{"name":"FactoryKit"}]},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath."},{"type":"text","text":" "},{"type":"text","text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified"}]}]}],"references":{"doc://FactoryKit/documentation/FactoryKit/InjectedObject":{"navigatorTitle":[{"kind":"identifier","text":"InjectedObject"}],"kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Immediate injection property wrapper for SwiftUI ObservableObjects."}],"url":"\/documentation\/factorykit\/injectedobject","title":"InjectedObject","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedObject"}]},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/InjectedObject/init(_:)-5is4r":{"title":"init(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r","type":"topic","abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableObject","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}}}}