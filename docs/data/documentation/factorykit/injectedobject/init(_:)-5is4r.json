{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath.","type":"text"},{"text":" ","type":"text"},{"text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified","type":"text"}],"type":"paragraph"}]}],"abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","metadata":{"symbolKind":"init","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"code":"ObservableObject","type":"codeVoice"},{"text":".","type":"text"}]},"platforms":[{"introducedAt":"14.0","unavailable":false,"beta":false,"deprecated":false,"name":"iOS"},{"introducedAt":"11.0","unavailable":false,"beta":false,"deprecated":false,"name":"macOS"},{"introducedAt":"14.0","unavailable":false,"beta":false,"deprecated":false,"name":"tvOS"},{"introducedAt":"7.0","unavailable":false,"beta":false,"deprecated":false,"name":"watchOS"}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"modules":[{"name":"FactoryKit"}],"roleHeading":"Initializer","extendedModule":"FactoryKit","externalID":"s:10FactoryKit14InjectedObjectVyACyxGxcfc","title":"init(_:)","role":"symbol"},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r"]}],"references":{"doc://FactoryKit/documentation/FactoryKit/InjectedObject/init(_:)-5is4r":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r","type":"topic","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableObject","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://FactoryKit/documentation/FactoryKit/InjectedObject":{"url":"\/documentation\/factorykit\/injectedobject","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject","title":"InjectedObject","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedObject"}],"abstract":[{"type":"text","text":"Immediate injection property wrapper for SwiftUI ObservableObjects."}],"role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InjectedObject"}]},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"}}}