{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath.","type":"text"},{"text":" ","type":"text"},{"text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"metadata":{"platforms":[{"unavailable":false,"beta":false,"introducedAt":"14.0","name":"iOS","deprecated":false},{"unavailable":false,"beta":false,"introducedAt":"11.0","name":"macOS","deprecated":false},{"unavailable":false,"beta":false,"introducedAt":"14.0","name":"tvOS","deprecated":false},{"unavailable":false,"beta":false,"introducedAt":"7.0","name":"watchOS","deprecated":false}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","externalID":"s:10FactoryKit14InjectedObjectVyACyxGxcfc","role":"symbol","roleHeading":"Initializer","modules":[{"name":"FactoryKit"}],"extendedModule":"FactoryKit","symbolKind":"init"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r"},"references":{"doc://FactoryKit/documentation/FactoryKit/InjectedObject":{"role":"symbol","url":"\/documentation\/factorykit\/injectedobject","type":"topic","navigatorTitle":[{"text":"InjectedObject","kind":"identifier"}],"title":"InjectedObject","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject","abstract":[{"text":"Immediate injection property wrapper for SwiftUI ObservableObjects.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedObject","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/InjectedObject/init(_:)-5is4r":{"url":"\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r","abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableObject","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init(_:)","type":"topic"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"}}}