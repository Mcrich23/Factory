{"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath.","type":"text"},{"text":" ","type":"text"},{"text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified","type":"text"}]}]}],"metadata":{"modules":[{"name":"FactoryKit"}],"roleHeading":"Initializer","title":"init(_:)","platforms":[{"introducedAt":"17.0","unavailable":false,"beta":false,"deprecated":false,"name":"iOS"},{"introducedAt":"14.0","unavailable":false,"beta":false,"deprecated":false,"name":"macOS"},{"introducedAt":"17.0","unavailable":false,"beta":false,"deprecated":false,"name":"tvOS"},{"introducedAt":"10.0","unavailable":false,"beta":false,"deprecated":false,"name":"watchOS"}],"externalID":"s:10FactoryKit18InjectedObservableVyACyxGxyXAcfc","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"T","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Observable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"FactoryKit","symbolKind":"init","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable"]]},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","url":"\/documentation\/factorykit"},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable":{"title":"InjectedObservable","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedObservable","kind":"identifier"}],"url":"\/documentation\/factorykit\/injectedobservable","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that injects an Observable dependency into a SwiftUI view."}],"navigatorTitle":[{"text":"InjectedObservable","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable/init(_:)-8hen6":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Observable","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(_:)","abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"url":"\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"}}}