{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6"},"sections":[],"metadata":{"roleHeading":"Initializer","title":"init(_:)","symbolKind":"init","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"T","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Observable","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"extendedModule":"FactoryKit","platforms":[{"name":"iOS","unavailable":false,"introducedAt":"17.0","beta":false,"deprecated":false},{"name":"macOS","unavailable":false,"introducedAt":"14.0","beta":false,"deprecated":false},{"name":"tvOS","unavailable":false,"introducedAt":"17.0","beta":false,"deprecated":false},{"name":"watchOS","unavailable":false,"introducedAt":"10.0","beta":false,"deprecated":false}],"modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit18InjectedObservableVyACyxGxyXAcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath."},{"type":"text","text":" "},{"type":"text","text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"variants":[{"paths":["\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit/InjectedObservable":{"url":"\/documentation\/factorykit\/injectedobservable","abstract":[{"text":"A property wrapper that injects an Observable dependency into a SwiftUI view.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"InjectedObservable"}],"title":"InjectedObservable","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedObservable"}],"type":"topic","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable/init(_:)-8hen6":{"title":"init(_:)","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"}}}