{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable"]]},"abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"sections":[],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath.","type":"text"},{"text":" ","type":"text"},{"text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"FactoryKit"}],"roleHeading":"Initializer","externalID":"s:10FactoryKit18InjectedObservableVyACyxGxyXAcfc","title":"init(_:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Observable","type":"codeVoice"},{"text":".","type":"text"}]},"extendedModule":"FactoryKit","role":"symbol","symbolKind":"init","platforms":[{"beta":false,"unavailable":false,"introducedAt":"17.0","name":"iOS","deprecated":false},{"beta":false,"unavailable":false,"introducedAt":"14.0","name":"macOS","deprecated":false},{"beta":false,"unavailable":false,"introducedAt":"17.0","name":"tvOS","deprecated":false},{"beta":false,"unavailable":false,"introducedAt":"10.0","name":"watchOS","deprecated":false}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"]}],"references":{"doc://FactoryKit/documentation/FactoryKit/InjectedObservable":{"type":"topic","url":"\/documentation\/factorykit\/injectedobservable","title":"InjectedObservable","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedObservable","kind":"identifier"}],"navigatorTitle":[{"text":"InjectedObservable","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that injects an Observable dependency into a SwiftUI view."}]},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable/init(_:)-8hen6":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(_:)","url":"\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}