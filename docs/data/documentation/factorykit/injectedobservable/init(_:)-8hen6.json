{"abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"languages":["swift"],"platforms":["macOS"]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath."},{"type":"text","text":" "},{"type":"text","text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"extendedModule":"FactoryKit","role":"symbol","title":"init(_:)","modules":[{"name":"FactoryKit"}],"conformance":{"constraints":[{"code":"T","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Observable","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"roleHeading":"Initializer","externalID":"s:10FactoryKit18InjectedObservableVyACyxGxyXAcfc","symbolKind":"init","platforms":[{"beta":false,"introducedAt":"17.0","name":"iOS","unavailable":false,"deprecated":false},{"beta":false,"introducedAt":"14.0","name":"macOS","unavailable":false,"deprecated":false},{"beta":false,"introducedAt":"17.0","name":"tvOS","unavailable":false,"deprecated":false},{"beta":false,"introducedAt":"10.0","name":"watchOS","unavailable":false,"deprecated":false}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit/InjectedObservable/init(_:)-8hen6":{"conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6","title":"init(_:)","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","kind":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable","abstract":[{"text":"A property wrapper that injects an Observable dependency into a SwiftUI view.","type":"text"}],"role":"symbol","kind":"symbol","title":"InjectedObservable","type":"topic","url":"\/documentation\/factorykit\/injectedobservable","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InjectedObservable","kind":"identifier"}],"navigatorTitle":[{"text":"InjectedObservable","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"}}}