{"metadata":{"externalID":"s:10FactoryKit18InjectedObservableVyACyxGxyXAcfc","title":"init(_:)","symbolKind":"init","platforms":[{"introducedAt":"17.0","deprecated":false,"unavailable":false,"name":"iOS","beta":false},{"introducedAt":"14.0","deprecated":false,"unavailable":false,"name":"macOS","beta":false},{"introducedAt":"17.0","deprecated":false,"unavailable":false,"name":"tvOS","beta":false},{"introducedAt":"10.0","deprecated":false,"unavailable":false,"name":"watchOS","beta":false}],"role":"symbol","roleHeading":"Initializer","modules":[{"name":"FactoryKit"}],"extendedModule":"FactoryKit","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Observable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"keyword","text":"@escaping"},{"text":" () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath.","type":"text"},{"text":" ","type":"text"},{"text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"variants":[{"paths":["\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable/init(_:)-8hen6":{"title":"init(_:)","url":"\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"."}]},"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable":{"navigatorTitle":[{"text":"InjectedObservable","kind":"identifier"}],"url":"\/documentation\/factorykit\/injectedobservable","kind":"symbol","abstract":[{"type":"text","text":"A property wrapper that injects an Observable dependency into a SwiftUI view."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable","title":"InjectedObservable","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedObservable","kind":"identifier"}],"type":"topic"}}}