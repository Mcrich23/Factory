{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"relationshipsSections":[{"identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","interfaceLanguage":"swift"},"abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-24jhl","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-713tk"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/factory","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/projectedValue","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/wrappedValue"],"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolve(reset:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"This wrapper maintains a weak reference to the object in question, so it must exist elsewhere.","type":"text"},{"text":" ","type":"text"},{"text":"It’s useful for delegate patterns and parent\/child relationships.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using"},{"type":"text","text":" "},{"type":"text","text":"EnvironmentObject in SwiftUI."}],"type":"paragraph"},{"code":["class MyViewModel {","   @LazyInjected(\\.myService) var service1","   @LazyInjected(\\MyCustomContainer.myService) var service2","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The provided keypath resolves to a Factory definition on the "},{"type":"codeVoice","code":"shared"},{"type":"text","text":" container required for each Container type."},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"type":"text","text":"allows you to point an instance of your own custom container type."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Lazy injection is resolved the first time the dependency is referenced by the code, ","type":"text"},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"text":" on initialization.","type":"text"}]}],"style":"note","name":"Note","type":"aside"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/factorykit\/weaklazyinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"FactoryKit"}],"roleHeading":"Structure","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"}],"externalID":"s:10FactoryKit16WeakLazyInjectedV","navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"symbolKind":"struct","title":"WeakLazyInjected"},"sections":[],"references":{"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected":{"url":"\/documentation\/factorykit\/weaklazyinjected","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"}],"navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"role":"symbol","abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"kind":"symbol","type":"topic","title":"WeakLazyInjected"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/resolve(reset:)":{"title":"resolve(reset:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"(","kind":"text"},{"text":"reset","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/factorykit\/weaklazyinjected\/resolve(reset:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolve(reset:)","abstract":[{"type":"text","text":"Allows the user to force a Factory resolution at their discretion."}]},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/wrappedValue":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/wrappedValue","abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"wrappedValue","url":"\/documentation\/factorykit\/weaklazyinjected\/wrappedvalue","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/resolvedOrNil()":{"url":"\/documentation\/factorykit\/weaklazyinjected\/resolvedornil()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()","title":"resolvedOrNil()","type":"topic","abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/projectedValue":{"url":"\/documentation\/factorykit\/weaklazyinjected\/projectedvalue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit16WeakLazyInjectedV","text":"WeakLazyInjected","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","kind":"symbol","title":"projectedValue","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/projectedValue","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}]},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/init(_:)-24jhl":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-24jhl","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"url":"\/documentation\/factorykit\/weaklazyinjected\/init(_:)-24jhl","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"title":"init(_:)"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/init(_:)-713tk":{"url":"\/documentation\/factorykit\/weaklazyinjected\/init(_:)-713tk","title":"init(_:)","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-713tk","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit9ContainerC","text":"Container"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"type":"topic"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/factory":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/factory","kind":"symbol","role":"symbol","title":"factory","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"factory","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"text":"Grants access to the internal Factory.","type":"text"}],"url":"\/documentation\/factorykit\/weaklazyinjected\/factory"},"doc://FactoryKit/s8SendableP":{"identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}