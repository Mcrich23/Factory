{"sections":[],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit16ManagedContainerP","text":"ManagedContainer","kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer"}],"languages":["swift"]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution.","type":"text"}],"type":"paragraph"},{"code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"The default ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","type":"reference"},{"text":" provided is a SharedContainer. It can be used in both roles as needed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers"},{"text":" for more information.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"topicSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/shared"],"title":"Type Properties","generated":true,"anchor":"Type-Properties"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/mock(_:)"],"title":"Type Methods","generated":true,"anchor":"Type-Methods"}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","doc:\/\/FactoryKit\/s8SendableP"],"type":"inheritsFrom"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"],"type":"conformingTypes"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/sharedcontainer"]}],"metadata":{"externalID":"s:10FactoryKit15SharedContainerP","title":"SharedContainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"modules":[{"name":"FactoryKit"}],"symbolKind":"protocol","navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"roleHeading":"Protocol"},"references":{"doc://FactoryKit/documentation/FactoryKit/SharedContainer/shared":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/shared","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"shared","url":"\/documentation\/factorykit\/sharedcontainer\/shared","type":"topic","abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"required":true},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","kind":"symbol","type":"topic","url":"\/documentation\/factorykit\/sharedcontainer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"title":"SharedContainer","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Container":{"type":"topic","url":"\/documentation\/factorykit\/container","navigatorTitle":[{"text":"Container","kind":"identifier"}],"abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","title":"Container","role":"symbol","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Containers":{"title":"Containers","kind":"article","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}],"url":"\/documentation\/factorykit\/containers","type":"topic","role":"article"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"url":"\/documentation\/factorykit\/managedcontainer","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"title":"ManagedContainer","navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}]},"doc://FactoryKit/s8SendableP":{"identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer/mock(_:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/mock(_:)","title":"mock(_:)","abstract":[{"type":"text","text":"Defines a preview convenience function to allow easy shared container transformation in SwiftUI Previews."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mock"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9EmptyViewV","text":"EmptyView"}],"role":"symbol","url":"\/documentation\/factorykit\/sharedcontainer\/mock(_:)"}}}