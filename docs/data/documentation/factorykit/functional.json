{"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Functional Injection is a powerful tool that can, in many cases, eliminate the need for defining protocols, implementations, and the various stubs and mocks one needs when doing traditional Protocol-Oriented-Programing.","type":"text"}],"type":"paragraph"},{"text":"Example","anchor":"Example","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Consider the following typealias and Factory."}],"type":"paragraph"},{"syntax":"swift","code":["typealias AccountProviding = () async throws -> [Account]","","extension Container {","    var accountProvider: Factory<AccountProviding> {","        self {{ try await Network.get(path: \"\/accounts\") }}","    }","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Note the double braces. In this example our factory closure is returning a closure, not a class or struct."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Now, here’s the view model that uses it."}],"type":"paragraph"},{"code":["class AccountViewModel: ObservableObject {","    @Injected(\\.accountProvider) var accountProvider","    @Published var accounts: [Account] = []","    @MainActor func load() async {","        do {","            accounts = try await accountProvider()","        } catch {","            print(error)","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"anchor":"Testing","text":"Testing","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Now consider how easy it is to write a test with mock accounts…"}],"type":"paragraph"},{"code":["func testAllAccounts() async {","    Container.shared.accountProvider.register {{ Account.mockAccounts }}","    do {","        let viewModel = AccountViewModel()","        try await viewModel.load()","        XCTAssert(viewModel.accounts.count == 5)","    } catch {","        XCTFail(\"Account load failed\")","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or test edge cases like no accounts found."}],"type":"paragraph"},{"code":["func testEmptyAccounts() async {","    Container.shared.accountProvider.register {{ [] }}","    ...","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Or test specific error cases.","type":"text"}],"type":"paragraph"},{"code":["func testErrorLoadingAccounts() async {","    Container.shared.accountProvider.register {{ throw APIError.network }}","    ...","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here’s an article that goes into the technique in more detail: "},{"type":"reference","identifier":"https:\/\/betterprogramming.pub\/factory-and-functional-dependency-injection-2d0a38042d05","isActive":true}],"type":"paragraph"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Functional"},"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/factorykit\/functional"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Factory can inject more than service classes and structs."}],"sections":[],"metadata":{"role":"article","modules":[{"name":"FactoryKit"}],"roleHeading":"Article","title":"Functional Injection"},"kind":"article","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"seeAlsoSections":[{"title":"Advanced Topics","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Design","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Modifiers","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Modules","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Cycle","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Optionals","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Tags"],"anchor":"Advanced-Topics","generated":true}],"references":{"doc://FactoryKit/documentation/FactoryKit/Design":{"kind":"article","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Design","type":"topic","url":"\/documentation\/factorykit\/design","title":"Designing Factory","abstract":[{"text":"Rationale behind the design decisions made in Factory 1.0 and 2.0","type":"text"}],"role":"article"},"doc://FactoryKit/documentation/FactoryKit/Modifiers":{"url":"\/documentation\/factorykit\/modifiers","title":"Factory Modifiers","kind":"article","role":"article","abstract":[{"type":"text","text":"Considerations when defining and redefining a Factory’s behavior."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Modifiers","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/Modules":{"type":"topic","url":"\/documentation\/factorykit\/modules","title":"Modular Development","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Modules","role":"article","kind":"article","abstract":[{"type":"text","text":"Using Factory in a project with multiple modules."}]},"doc://FactoryKit/documentation/FactoryKit/Tags":{"title":"Tags","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Tags","role":"article","kind":"article","url":"\/documentation\/factorykit\/tags","type":"topic","abstract":[{"type":"text","text":"Obtaining a list of dependencies of a given type."}]},"https://betterprogramming.pub/factory-and-functional-dependency-injection-2d0a38042d05":{"title":"Factory and Functional Dependency Injection","titleInlineContent":[{"text":"Factory and Functional Dependency Injection","type":"text"}],"type":"link","identifier":"https:\/\/betterprogramming.pub\/factory-and-functional-dependency-injection-2d0a38042d05","url":"https:\/\/betterprogramming.pub\/factory-and-functional-dependency-injection-2d0a38042d05"},"doc://FactoryKit/documentation/FactoryKit/Optionals":{"url":"\/documentation\/factorykit\/optionals","abstract":[{"text":"With Factory registrations can be performed at any time.","type":"text"}],"title":"Optionals and Dynamic Registration","role":"article","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Optionals","kind":"article"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"},"doc://FactoryKit/documentation/FactoryKit/Cycle":{"title":"Resolution Cycles","role":"article","abstract":[{"type":"text","text":"What’s a resolution cycle, and why should we care?"}],"url":"\/documentation\/factorykit\/cycle","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Cycle","kind":"article","type":"topic"}}}