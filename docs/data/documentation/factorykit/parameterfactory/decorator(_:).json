{"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/decorator(_:)","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Adds a factory specific decorator. The decorator will ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"always","type":"text"}]},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"decorator"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/T","text":"T","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}]},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This includes previously created items that may have been cached by a scope.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/parameterfactory\/decorator(_:)"]}],"metadata":{"role":"symbol","title":"decorator(_:)","externalID":"s:10FactoryKit0A9ModifyingPAAE9decoratoryxy1TQzYbcF::SYNTHESIZED::s:10FactoryKit09ParameterA0V","modules":[{"name":"FactoryKit"}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"FactoryKit","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa","kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"references":{"doc://FactoryKit/documentation/FactoryKit/ParameterFactory/decorator(_:)":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/decorator(_:)","type":"topic","abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"type":"text","text":"for further examination or manipulation."}],"role":"symbol","title":"decorator(_:)","url":"\/documentation\/factorykit\/parameterfactory\/decorator(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","url":"\/documentation\/factorykit"},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory","kind":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactory"}],"navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"url":"\/documentation\/factorykit\/parameterfactory","type":"topic","role":"symbol","title":"ParameterFactory"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/T":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/T","required":true,"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"T"}],"title":"T","abstract":[{"type":"text","text":"The return type of the Factoryâ€™s dependency."}],"url":"\/documentation\/factorykit\/factorymodifying\/t"}}}