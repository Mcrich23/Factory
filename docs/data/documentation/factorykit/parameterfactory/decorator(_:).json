{"metadata":{"role":"symbol","modules":[{"name":"FactoryKit"}],"extendedModule":"FactoryKit","title":"decorator(_:)","roleHeading":"Instance Method","symbolKind":"method","externalID":"s:10FactoryKit0A9ModifyingPAAE9decoratoryxy1TQzYbcF::SYNTHESIZED::s:10FactoryKit09ParameterA0V","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/factorykit\/parameterfactory\/decorator(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/decorator(_:)"},"abstract":[{"text":"Adds a factory specific decorator. The decorator will ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decorator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/T","preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This includes previously created items that may have been cached by a scope."}]},{"syntax":"swift","type":"codeListing","code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact."}]}],"kind":"content"}],"references":{"doc://FactoryKit/documentation/FactoryKit/ParameterFactory/decorator(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/decorator(_:)","kind":"symbol","url":"\/documentation\/factorykit\/parameterfactory\/decorator(_:)","abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"type":"emphasis","inlineContent":[{"text":"always","type":"text"}]},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"type":"text","text":"for further examination or manipulation."}],"type":"topic","title":"decorator(_:)","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory":{"url":"\/documentation\/factorykit\/parameterfactory","abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactory"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory","type":"topic","kind":"symbol","title":"ParameterFactory","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}]},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/T":{"abstract":[{"type":"text","text":"The return type of the Factoryâ€™s dependency."}],"type":"topic","required":true,"fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"T"}],"kind":"symbol","title":"T","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/T","role":"symbol","url":"\/documentation\/factorykit\/factorymodifying\/t"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","type":"topic","title":"FactoryKit","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","role":"collection"}}}