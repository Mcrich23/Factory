{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/parameterfactory\/scopeonparameters"]}],"abstract":[{"text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are","type":"text"},{"text":" ","type":"text"},{"text":"passed on future requests.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/scopeOnParameters"},"kind":"symbol","metadata":{"roleHeading":"Instance Property","symbolKind":"property","role":"symbol","title":"scopeOnParameters","modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit0A9ModifyingPAASH1PRpzrlE17scopeOnParametersxvp::SYNTHESIZED::s:10FactoryKit09ParameterA0V","extendedModule":"FactoryKit","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"conformance":{"constraints":[{"type":"codeVoice","code":"P"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior can be changed with the "},{"type":"codeVoice","code":".scopeOnParameters"},{"type":"text","text":" modifier."}]},{"syntax":"swift","type":"codeListing","code":["var parameterService: ParameterFactory<Int, ParameterService> {","    self { ParameterService(value: $0) }.scopeOnParameters.cached","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The passed parameter must be Hashable for this modifier to appear and for the per-parameter caching functionality to occur."}]}],"kind":"content"}],"references":{"doc://FactoryKit/documentation/FactoryKit/ParameterFactory":{"navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"url":"\/documentation\/factorykit\/parameterfactory","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactory"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory","kind":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"title":"ParameterFactory"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory/scopeOnParameters":{"url":"\/documentation\/factorykit\/parameterfactory\/scopeonparameters","type":"topic","conformance":{"constraints":[{"code":"P","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/scopeOnParameters","title":"scopeOnParameters","abstract":[{"type":"text","text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are"},{"type":"text","text":" "},{"type":"text","text":"passed on future requests."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopeOnParameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}]}}}