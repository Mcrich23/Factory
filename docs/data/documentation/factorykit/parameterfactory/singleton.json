{"metadata":{"extendedModule":"FactoryKit","roleHeading":"Instance Property","symbolKind":"property","role":"symbol","modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:10FactoryKit09ParameterA0V","title":"singleton","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}]},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/parameterfactory\/singleton"]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/singleton","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"references":{"doc://FactoryKit/documentation/FactoryKit/ParameterFactory":{"title":"ParameterFactory","url":"\/documentation\/factorykit\/parameterfactory","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","type":"topic","kind":"symbol","title":"Scope.Singleton","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory/singleton":{"url":"\/documentation\/factorykit\/parameterfactory\/singleton","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/singleton","role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"},{"type":"text","text":"."}],"title":"singleton","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}]}}}