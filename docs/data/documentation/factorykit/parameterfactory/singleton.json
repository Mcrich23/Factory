{"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","type":"reference"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/factorykit\/parameterfactory\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"],"type":"codeListing","syntax":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/singleton"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"]]},"metadata":{"symbolKind":"property","extendedModule":"FactoryKit","title":"singleton","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:10FactoryKit0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:10FactoryKit09ParameterA0V","roleHeading":"Instance Property","role":"symbol","modules":[{"name":"FactoryKit"}]},"references":{"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","kind":"symbol","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class","title":"Scope.Singleton"},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory":{"url":"\/documentation\/factorykit\/parameterfactory","abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactory"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory","type":"topic","kind":"symbol","title":"ParameterFactory","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}]},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory/singleton":{"kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"},{"type":"text","text":"."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/singleton","role":"symbol","url":"\/documentation\/factorykit\/parameterfactory\/singleton","title":"singleton","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"url":"\/documentation\/factorykit","type":"topic","title":"FactoryKit","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","role":"collection"}}}