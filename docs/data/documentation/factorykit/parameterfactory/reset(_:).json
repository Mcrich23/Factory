{"metadata":{"role":"symbol","extendedModule":"FactoryKit","modules":[{"name":"FactoryKit"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","externalID":"s:10FactoryKit0A9ModifyingPAAE5resetyxAA0A12ResetOptionsOF::SYNTHESIZED::s:10FactoryKit09ParameterA0V","roleHeading":"Instance Method","title":"reset(_:)"},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/reset(_:)"},"variants":[{"paths":["\/documentation\/factorykit\/parameterfactory\/reset(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryResetOptions"},{"kind":"text","text":" = .all) -> "},{"kind":"typeIdentifier","text":"Self"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"name":"options","content":[{"type":"paragraph","inlineContent":[{"text":"Options description","type":"text"}]}]}],"kind":"parameters"}],"sections":[],"abstract":[{"type":"text","text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope."}],"references":{"doc://FactoryKit/documentation/FactoryKit/ParameterFactory/reset(_:)":{"type":"topic","title":"reset(_:)","role":"symbol","url":"\/documentation\/factorykit\/parameterfactory\/reset(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/reset(_:)","abstract":[{"type":"text","text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope."}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"},"doc://FactoryKit/documentation/FactoryKit/FactoryResetOptions":{"type":"topic","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryResetOptions","kind":"symbol","abstract":[{"text":"Reset options for Factory’s and Container’s","type":"text"}],"navigatorTitle":[{"text":"FactoryResetOptions","kind":"identifier"}],"title":"FactoryResetOptions","url":"\/documentation\/factorykit\/factoryresetoptions","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryResetOptions","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory":{"navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory","type":"topic","kind":"symbol","url":"\/documentation\/factorykit\/parameterfactory","title":"ParameterFactory","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"role":"symbol"}}}