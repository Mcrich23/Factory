{"sections":[],"relationshipsSections":[{"type":"inheritedBy","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"kind":"relationships","title":"Inherited By"},{"type":"conformsTo","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}]}]},{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When a scope is associated with a Factory the first time the dependency is resolved a reference to that object"},{"type":"text","text":" "},{"type":"text","text":"is cached. The next time that Factory is resolved a reference to the originally cached object will be returned."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That behavior can vary according to the scope type (e.g. Shared or Graph)"}]},{"code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","            .singleton","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Scopes work hand in hand with Containers to managed object lifecycles. If the container ever goes our of scope, so"},{"type":"text","text":" "},{"type":"text","text":"will all of its cached references."}]},{"type":"paragraph","inlineContent":[{"text":"If no scope is associated with a given Factory then the scope is considered to be unique and a new instance","type":"text"},{"text":" ","type":"text"},{"text":"of the dependency will be created each and every time that factory is resolved.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/scope"]}],"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","interfaceLanguage":"swift"},"metadata":{"role":"symbol","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"title":"Scope","externalID":"s:10FactoryKit5ScopeC","modules":[{"name":"FactoryKit"}],"symbolKind":"class"},"topicSections":[{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"title":"Classes","anchor":"Classes"},{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/$singleton","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/cached-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/graph-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/shared-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/singleton-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/unique"],"title":"Type Properties","anchor":"Type-Properties"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"title":"Scope Class Definitions","anchor":"Scope-Class-Definitions"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"references":{"doc://FactoryKit/documentation/FactoryKit/Scope/$singleton":{"title":"$singleton","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/$singleton","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/factorykit\/scope\/$singleton","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"$singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency9TaskLocalC","text":"TaskLocal"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC","text":"Singleton"},{"kind":"text","text":">"}],"abstract":[]},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Scope/Graph-swift.class":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","type":"topic","role":"symbol","title":"Scope.Graph","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Graph"}],"abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"url":"\/documentation\/factorykit\/scope\/graph-swift.class"},"doc://FactoryKit/documentation/FactoryKit/Scope":{"url":"\/documentation\/factorykit\/scope","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","role":"symbol","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"title":"Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","type":"topic","navigatorTitle":[{"text":"Cached","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cached","kind":"identifier"}],"title":"Scope.Cached","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"url":"\/documentation\/factorykit\/scope\/cached-swift.class"},"doc://FactoryKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable"},"doc://FactoryKit/documentation/FactoryKit/Scope/shared-swift.type.property":{"role":"symbol","abstract":[{"text":"A reference to the default shared scope manager.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC6SharedC","text":"Shared"}],"title":"shared","url":"\/documentation\/factorykit\/scope\/shared-swift.type.property","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/shared-swift.type.property"},"doc://FactoryKit/documentation/FactoryKit/Scope/cached-swift.type.property":{"abstract":[{"text":"A reference to the default cached scope manager.","type":"text"}],"kind":"symbol","title":"cached","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/cached-swift.type.property","url":"\/documentation\/factorykit\/scope\/cached-swift.type.property","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"text":".","kind":"text"},{"text":"Cached","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC6CachedC"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/singleton-swift.type.property":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC","text":"Singleton"}],"title":"singleton","url":"\/documentation\/factorykit\/scope\/singleton-swift.type.property","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/singleton-swift.type.property","abstract":[]},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class","title":"Scope.Singleton","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"navigatorTitle":[{"kind":"identifier","text":"Singleton"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/graph-swift.type.property":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/graph-swift.type.property","type":"topic","title":"graph","url":"\/documentation\/factorykit\/scope\/graph-swift.type.property","abstract":[{"text":"A reference to the default graph scope manager.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"graph","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"text":".","kind":"text"},{"text":"Graph","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC5GraphC"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/unique":{"abstract":[{"type":"text","text":"A reference to the default unique scope."}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/unique","title":"unique","url":"\/documentation\/factorykit\/scope\/unique","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"kind":"text","text":"?"}],"type":"topic","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"title":"Scope.Shared","kind":"symbol","url":"\/documentation\/factorykit\/scope\/shared-swift.class","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Shared"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}]}}}