{"seeAlsoSections":[{"title":"Scope Class Definitions","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"generated":true,"anchor":"Scope-Class-Definitions"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/scope"]}],"sections":[],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"When a scope is associated with a Factory the first time the dependency is resolved a reference to that object"},{"type":"text","text":" "},{"type":"text","text":"is cached. The next time that Factory is resolved a reference to the originally cached object will be returned."}],"type":"paragraph"},{"inlineContent":[{"text":"That behavior can vary according to the scope type (e.g. Shared or Graph)","type":"text"}],"type":"paragraph"},{"code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","            .singleton","    }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Scopes work hand in hand with Containers to managed object lifecycles. If the container ever goes our of scope, so"},{"type":"text","text":" "},{"type":"text","text":"will all of its cached references."}],"type":"paragraph"},{"inlineContent":[{"text":"If no scope is associated with a given Factory then the scope is considered to be unique and a new instance","type":"text"},{"text":" ","type":"text"},{"text":"of the dependency will be created each and every time that factory is resolved.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms"}],"type":"paragraph"}]}],"relationshipsSections":[{"title":"Inherited By","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Unique-swift.class"],"kind":"relationships","type":"inheritedBy"},{"title":"Conforms To","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"class","modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit5ScopeC","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"role":"symbol","title":"Scope","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"roleHeading":"Class"},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Unique-swift.class"],"generated":true,"anchor":"Classes"},{"title":"Type Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/$singleton","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/cached-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/graph-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/shared-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/singleton-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/unique-swift.type.property"],"generated":true,"anchor":"Type-Properties"}],"references":{"doc://FactoryKit/documentation/FactoryKit/Scope/cached-swift.type.property":{"abstract":[{"text":"A reference to the default cached scope manager.","type":"text"}],"url":"\/documentation\/factorykit\/scope\/cached-swift.type.property","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC6CachedC","text":"Cached"}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/cached-swift.type.property","role":"symbol","title":"cached"},"doc://FactoryKit/documentation/FactoryKit/Scope":{"url":"\/documentation\/factorykit\/scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"role":"symbol","title":"Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","type":"topic","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}]},"doc://FactoryKit/documentation/FactoryKit/Scope/graph-swift.type.property":{"type":"topic","title":"graph","abstract":[{"type":"text","text":"A reference to the default graph scope manager."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"graph","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10FactoryKit5ScopeC5GraphC","text":"Graph","kind":"typeIdentifier"}],"url":"\/documentation\/factorykit\/scope\/graph-swift.type.property","kind":"symbol","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/graph-swift.type.property"},"doc://FactoryKit/documentation/FactoryKit/Scope/shared-swift.type.property":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:10FactoryKit5ScopeC6SharedC","text":"Shared","kind":"typeIdentifier"}],"type":"topic","title":"shared","kind":"symbol","url":"\/documentation\/factorykit\/scope\/shared-swift.type.property","abstract":[{"type":"text","text":"A reference to the default shared scope manager."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/shared-swift.type.property","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class":{"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"url":"\/documentation\/factorykit\/scope\/cached-swift.class","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","kind":"symbol","role":"symbol","title":"Scope.Cached","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cached","kind":"identifier"}],"type":"topic"},"doc://FactoryKit/documentation/FactoryKit/Scope/Graph-swift.class":{"role":"symbol","title":"Scope.Graph","kind":"symbol","url":"\/documentation\/factorykit\/scope\/graph-swift.class","navigatorTitle":[{"text":"Graph","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","type":"topic","abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Graph","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/singleton-swift.type.property":{"url":"\/documentation\/factorykit\/scope\/singleton-swift.type.property","abstract":[],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","preciseIdentifier":"s:10FactoryKit5ScopeC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Singleton","preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC","kind":"typeIdentifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/singleton-swift.type.property","title":"singleton"},"doc://FactoryKit/documentation/FactoryKit/Scope/$singleton":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/$singleton","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"$singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TaskLocal","kind":"typeIdentifier","preciseIdentifier":"s:12_Concurrency9TaskLocalC"},{"text":"<","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"text":".","kind":"text"},{"text":"Singleton","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC"},{"text":">","kind":"text"}],"title":"$singleton","abstract":[],"kind":"symbol","url":"\/documentation\/factorykit\/scope\/$singleton"},"doc://FactoryKit/documentation/FactoryKit/Scope/unique-swift.type.property":{"abstract":[{"type":"text","text":"A reference to the default unique scope."}],"url":"\/documentation\/factorykit\/scope\/unique-swift.type.property","title":"unique","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/unique-swift.type.property","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC6UniqueC","text":"Unique"}],"type":"topic"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class","kind":"symbol","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"role":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","title":"Scope.Singleton"},"doc://FactoryKit/documentation/FactoryKit/Scope/Unique-swift.class":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Unique"}],"navigatorTitle":[{"kind":"identifier","text":"Unique"}],"type":"topic","title":"Scope.Unique","abstract":[{"type":"text","text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle."}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Unique-swift.class","url":"\/documentation\/factorykit\/scope\/unique-swift.class","role":"symbol"},"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/FactoryKit\/s8SendableP","type":"unresolvable"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"navigatorTitle":[{"kind":"identifier","text":"Shared"}],"url":"\/documentation\/factorykit\/scope\/shared-swift.class","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","title":"Scope.Shared","kind":"symbol","role":"symbol"}}}