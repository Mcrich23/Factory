{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using"},{"type":"text","text":" "},{"type":"text","text":"EnvironmentObject in SwiftUI."}]},{"type":"codeListing","syntax":"swift","code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"]},{"type":"paragraph","inlineContent":[{"text":"The provided keypath resolves to a Factory definition on the ","type":"text"},{"code":"shared","type":"codeVoice"},{"text":" container required for each Container type.","type":"text"},{"text":" ","type":"text"},{"text":"The short version of the keyPath resolves to the default container, while the expanded version","type":"text"},{"text":" ","type":"text"},{"text":"allows you to point an instance of your own custom container type.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every "},{"inlineContent":[{"text":"access","type":"text"}],"type":"strong"},{"type":"text","text":"."}]}],"type":"aside","style":"important","name":"Important"},{"type":"paragraph","inlineContent":[{"text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the","type":"text"},{"text":" ","type":"text"},{"text":"properties are accessed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,","type":"text"},{"text":" ","type":"text"},{"text":"then it probably needs to be cached using one of Factory’s caching mechanisms.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/FactoryKit\/s8SendableP"]}],"sections":[],"topicSections":[{"anchor":"Initializers","generated":true,"title":"Initializers","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-8b8lt","doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-m0lr"]},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/projectedValue","doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/wrappedValue"]}],"metadata":{"externalID":"s:10FactoryKit15DynamicInjectedV","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"}],"title":"DynamicInjected","role":"symbol","modules":[{"name":"FactoryKit"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"symbolKind":"struct"},"variants":[{"paths":["\/documentation\/factorykit\/dynamicinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type."}],"references":{"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/init(_:)-8b8lt":{"role":"symbol","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-8b8lt","title":"init(_:)","type":"topic","url":"\/documentation\/factorykit\/dynamicinjected\/init(_:)-8b8lt"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/wrappedValue":{"title":"wrappedValue","url":"\/documentation\/factorykit\/dynamicinjected\/wrappedvalue","abstract":[{"text":"Manages the wrapped dependency.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/wrappedValue","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected":{"navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}],"url":"\/documentation\/factorykit\/dynamicinjected","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"}],"type":"topic","title":"DynamicInjected"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"},"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/init(_:)-m0lr":{"kind":"symbol","abstract":[{"text":"Initializes the property wrapper. The dependency is resolved on access.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Container","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit9ContainerC"},{"text":", ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"title":"init(_:)","url":"\/documentation\/factorykit\/dynamicinjected\/init(_:)-m0lr","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-m0lr"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/projectedValue":{"url":"\/documentation\/factorykit\/dynamicinjected\/projectedvalue","abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/projectedValue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"projectedValue"}}}