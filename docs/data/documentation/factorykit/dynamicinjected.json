{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"metadata":{"modules":[{"name":"FactoryKit"}],"roleHeading":"Structure","navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}],"symbolKind":"struct","role":"symbol","externalID":"s:10FactoryKit15DynamicInjectedV","title":"DynamicInjected","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"}]},"sections":[],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected"},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-8b8lt","doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-m0lr"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/projectedValue","doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/wrappedValue"],"anchor":"Instance-Properties"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using","type":"text"},{"text":" ","type":"text"},{"text":"EnvironmentObject in SwiftUI.","type":"text"}]},{"code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The provided keypath resolves to a Factory definition on the "},{"type":"codeVoice","code":"shared"},{"type":"text","text":" container required for each Container type."},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"type":"text","text":"allows you to point an instance of your own custom container type."}]},{"style":"important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every "},{"inlineContent":[{"text":"access","type":"text"}],"type":"strong"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the"},{"type":"text","text":" "},{"type":"text","text":"properties are accessed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,"},{"type":"text","text":" "},{"type":"text","text":"then it probably needs to be cached using one of Factory’s caching mechanisms."}]},{"code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/dynamicinjected"]}],"references":{"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/init(_:)-8b8lt":{"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-8b8lt","title":"init(_:)","url":"\/documentation\/factorykit\/dynamicinjected\/init(_:)-8b8lt","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"abstract":[{"text":"Initializes the property wrapper. The dependency is resolved on access.","type":"text"}],"type":"topic","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/projectedValue":{"abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/projectedValue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/factorykit\/dynamicinjected\/projectedvalue","title":"projectedValue","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/wrappedValue":{"abstract":[{"text":"Manages the wrapped dependency.","type":"text"}],"title":"wrappedValue","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"url":"\/documentation\/factorykit\/dynamicinjected\/wrappedvalue","kind":"symbol","role":"symbol"},"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/FactoryKit\/s8SendableP","type":"unresolvable"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected":{"navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}],"role":"symbol","type":"topic","url":"\/documentation\/factorykit\/dynamicinjected","kind":"symbol","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"}],"title":"DynamicInjected"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/init(_:)-m0lr":{"title":"init(_:)","url":"\/documentation\/factorykit\/dynamicinjected\/init(_:)-m0lr","role":"symbol","abstract":[{"text":"Initializes the property wrapper. The dependency is resolved on access.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-m0lr","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Container","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit9ContainerC"},{"text":", ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}]}}}