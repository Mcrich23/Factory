{"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"VoidFactoryType","preciseIdentifier":"s:10FactoryKit04VoidA4Typea","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/VoidFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved","type":"text"},{"text":" ","type":"text"},{"text":"Factory will evaluate the new closure and return an instance of the newly registered object instead.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Here’s an example of registering a new Factory closure.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["container.service.register {","    SomeService()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism"},{"type":"text","text":" "},{"type":"text","text":"used to provide mocks and testing doubles."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Registration “overrides” are stored in the associated container. If the container ever goes out of scope, so"},{"type":"text","text":" "},{"type":"text","text":"will all of its registrations."}]},{"type":"paragraph","inlineContent":[{"text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"factory: A new factory closure that produces an object of the desired type when needed.","type":"text"},{"text":" ","type":"text"},{"text":"Allows updating registered factory and scope.","type":"text"}]}]}]}]}],"abstract":[{"type":"text","text":"Registers a new factory closure capable of producing an object or service of the desired type."}],"kind":"symbol","identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/register(factory:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/factory\/register(factory:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"role":"symbol","title":"register(factory:)","modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit0A0V8register7factoryACyxGxyYbYAc_tF","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VoidFactoryType","preciseIdentifier":"s:10FactoryKit04VoidA4Typea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]},"references":{"doc://FactoryKit/documentation/FactoryKit/Factory/register(factory:)":{"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit04VoidA4Typea"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","url":"\/documentation\/factorykit\/factory\/register(factory:)","title":"register(factory:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/register(factory:)","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"role":"symbol","title":"Factory","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"url":"\/documentation\/factorykit\/factory","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/VoidFactoryType":{"navigatorTitle":[{"kind":"identifier","text":"VoidFactoryType"}],"role":"symbol","title":"VoidFactoryType","abstract":[],"url":"\/documentation\/factorykit\/voidfactorytype","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/VoidFactoryType","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"VoidFactoryType"}]}}}