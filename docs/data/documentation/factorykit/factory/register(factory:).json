{"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/register(factory:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"text":": ","kind":"text"},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit04VoidA4Typea"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"FactoryKit"}],"role":"symbol","symbolKind":"method","title":"register(factory:)","externalID":"s:10FactoryKit0A0V8register7factoryACyxGxyYbYAc_tF"},"variants":[{"paths":["\/documentation\/factorykit\/factory\/register(factory:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" "},{"preciseIdentifier":"s:10FactoryKit04VoidA4Typea","kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/VoidFactoryType","text":"VoidFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved","type":"text"},{"text":" ","type":"text"},{"text":"Factory will evaluate the new closure and return an instance of the newly registered object instead.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Here’s an example of registering a new Factory closure.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["container.service.register {","    SomeService()","}"],"syntax":"swift"},{"inlineContent":[{"text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism","type":"text"},{"text":" ","type":"text"},{"text":"used to provide mocks and testing doubles.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Registration “overrides” are stored in the associated container. If the container ever goes out of scope, so","type":"text"},{"text":" ","type":"text"},{"text":"will all of its registrations.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"factory: A new factory closure that produces an object of the desired type when needed.","type":"text"},{"text":" ","type":"text"},{"text":"Allows updating registered factory and scope.","type":"text"}],"type":"paragraph"}]}]}]}],"references":{"doc://FactoryKit/documentation/FactoryKit/VoidFactoryType":{"navigatorTitle":[{"text":"VoidFactoryType","kind":"identifier"}],"kind":"symbol","abstract":[],"role":"symbol","type":"topic","title":"VoidFactoryType","url":"\/documentation\/factorykit\/voidfactorytype","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/VoidFactoryType","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"VoidFactoryType"}]},"doc://FactoryKit/documentation/FactoryKit/Factory/register(factory:)":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/register(factory:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"VoidFactoryType","preciseIdentifier":"s:10FactoryKit04VoidA4Typea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"title":"register(factory:)","type":"topic","url":"\/documentation\/factorykit\/factory\/register(factory:)","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"role":"symbol","kind":"symbol","title":"Factory","type":"topic","url":"\/documentation\/factorykit\/factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"}}}