{"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/singleton","interfaceLanguage":"swift"},"sections":[],"metadata":{"extendedModule":"FactoryKit","title":"singleton","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Instance Property","symbolKind":"property","externalID":"s:10FactoryKit0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:10FactoryKit0A0V","role":"symbol","modules":[{"name":"FactoryKit"}]},"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","isActive":true},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/factory\/singleton"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"],"type":"codeListing"}],"kind":"content"}],"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","url":"\/documentation\/factorykit\/scope\/singleton-swift.class"},"doc://FactoryKit/documentation/FactoryKit/Factory/singleton":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/singleton","kind":"symbol","title":"singleton","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factorykit\/factory\/singleton"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"title":"Factory","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Factory"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"kind":"symbol","type":"topic","url":"\/documentation\/factorykit\/factory","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"}}}