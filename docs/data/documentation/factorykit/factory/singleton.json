{"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"property","externalID":"s:10FactoryKit0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:10FactoryKit0A0V","roleHeading":"Instance Property","modules":[{"name":"FactoryKit"}],"title":"singleton","extendedModule":"FactoryKit","role":"symbol"},"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/singleton","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"],"syntax":"swift"}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/factorykit\/factory\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://FactoryKit/documentation/FactoryKit/Factory":{"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"role":"symbol","kind":"symbol","title":"Factory","type":"topic","url":"\/documentation\/factorykit\/factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","type":"topic","kind":"symbol","title":"Scope.Singleton","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","type":"topic","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","role":"collection"},"doc://FactoryKit/documentation/FactoryKit/Factory/singleton":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factorykit\/factory\/singleton","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/singleton","role":"symbol","title":"singleton","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","type":"reference","isActive":true},{"text":".","type":"text"}],"kind":"symbol","type":"topic"}}}