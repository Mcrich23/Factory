{"sections":[],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"variants":[{"paths":["\/documentation\/factorykit\/containermanager"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Every container requires a ContainerManager.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"ContainerManager also implements several functions that can be used to reset the container","type":"text"},{"text":" ","type":"text"},{"text":"to a pristine state, as well as push\/pop methods that can save and restore the current state.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Those functions are designed primarily for testing."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms"}]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}],"metadata":{"symbolKind":"class","roleHeading":"Class","role":"symbol","modules":[{"name":"FactoryKit"}],"title":"ContainerManager","externalID":"s:10FactoryKit16ContainerManagerC","navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}]},"kind":"symbol","topicSections":[{"anchor":"Initializers","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/init()"],"title":"Initializers"},{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/defaultScope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/dependencyChainTestMax","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/logger","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/promiseTriggersError","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/trace"],"title":"Instance Properties"},{"anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/pop()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/push()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)"],"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"references":{"doc://FactoryKit/documentation/FactoryKit/ContainerManager/init()":{"url":"\/documentation\/factorykit\/containermanager\/init()","abstract":[{"type":"text","text":"Public initializer"}],"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/init()"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/trace":{"kind":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/trace","url":"\/documentation\/factorykit\/containermanager\/trace","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trace","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"abstract":[{"text":"Public var enabling factory resolution trace statements in debug mode for ALL containers.","type":"text"}],"title":"trace"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/promiseTriggersError":{"type":"topic","url":"\/documentation\/factorykit\/containermanager\/promisetriggerserror","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promiseTriggersError","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/promiseTriggersError","title":"promiseTriggersError","abstract":[{"text":"Public variable promise behavior","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(options:)":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(options:)","abstract":[{"text":"Resets the Container to its original state, removing all registrations and clearing all scope caches.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO"},{"kind":"text","text":")"}],"url":"\/documentation\/factorykit\/containermanager\/reset(options:)","title":"reset(options:)"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}],"navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"title":"ContainerManager","kind":"symbol","type":"topic","url":"\/documentation\/factorykit\/containermanager","abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/dependencyChainTestMax":{"abstract":[{"type":"text","text":"Public variable exposing dependency chain test maximum"}],"url":"\/documentation\/factorykit\/containermanager\/dependencychaintestmax","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/dependencyChainTestMax","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependencyChainTestMax","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"role":"symbol","title":"dependencyChainTestMax","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/pop()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pop"},{"kind":"text","text":"()"}],"abstract":[{"text":"Test function pops and restores a previously pushed registration and cache state","type":"text"}],"url":"\/documentation\/factorykit\/containermanager\/pop()","title":"pop()","kind":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/pop()"},"doc://FactoryKit/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/push()":{"role":"symbol","abstract":[{"text":"Test function pushes the current registration and cache states","type":"text"}],"url":"\/documentation\/factorykit\/containermanager\/push()","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/push()","title":"push()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"()"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(scope:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"title":"reset(scope:)","url":"\/documentation\/factorykit\/containermanager\/reset(scope:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/logger":{"kind":"symbol","role":"symbol","title":"logger","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"abstract":[{"text":"Public access to logging facility in debug mode for ALL containers.","type":"text"}],"url":"\/documentation\/factorykit\/containermanager\/logger","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/logger"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/defaultScope":{"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Default scope"}],"url":"\/documentation\/factorykit\/containermanager\/defaultscope","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/defaultScope","title":"defaultScope","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultScope","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol"}}}