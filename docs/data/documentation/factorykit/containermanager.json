{"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"modules":[{"name":"FactoryKit"}],"title":"ContainerManager","roleHeading":"Class","externalID":"s:10FactoryKit16ContainerManagerC","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}]},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/factorykit\/containermanager"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/init()"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/defaultScope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/dependencyChainTestMax","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/logger","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/promiseTriggersError","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/trace"],"title":"Instance Properties","anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/pop()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/push()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}]},{"type":"paragraph","inlineContent":[{"text":"ContainerManager also implements several functions that can be used to reset the container","type":"text"},{"text":" ","type":"text"},{"text":"to a pristine state, as well as push\/pop methods that can save and restore the current state.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Those functions are designed primarily for testing.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager"},"references":{"doc://FactoryKit/s8SendableP":{"identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/pop()":{"url":"\/documentation\/factorykit\/containermanager\/pop()","type":"topic","abstract":[{"type":"text","text":"Test function pops and restores a previously pushed registration and cache state"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/pop()","role":"symbol","kind":"symbol","title":"pop()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"pop"},{"kind":"text","text":"()"}]},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","type":"topic","url":"\/documentation\/factorykit","title":"FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"role":"collection"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/promiseTriggersError":{"role":"symbol","url":"\/documentation\/factorykit\/containermanager\/promisetriggerserror","abstract":[{"text":"Public variable promise behavior","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/promiseTriggersError","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"promiseTriggersError"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"title":"promiseTriggersError"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/logger":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/containermanager\/logger","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": (","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}],"title":"logger","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/logger","abstract":[{"type":"text","text":"Public access to logging facility in debug mode for ALL containers."}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/defaultScope":{"title":"defaultScope","role":"symbol","url":"\/documentation\/factorykit\/containermanager\/defaultscope","kind":"symbol","abstract":[{"type":"text","text":"Default scope"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultScope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/defaultScope"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager":{"abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"url":"\/documentation\/factorykit\/containermanager","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager","type":"topic","title":"ContainerManager"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/init()":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/containermanager\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"title":"init()","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/init()","abstract":[{"text":"Public initializer","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(scope:)":{"abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"kind":"symbol","url":"\/documentation\/factorykit\/containermanager\/reset(scope:)","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)","title":"reset(scope:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10FactoryKit5ScopeC","kind":"typeIdentifier","text":"Scope"},{"kind":"text","text":")"}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(options:)":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/containermanager\/reset(options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FactoryResetOptions","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"reset(options:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(options:)","abstract":[{"text":"Resets the Container to its original state, removing all registrations and clearing all scope caches.","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/push()":{"role":"symbol","abstract":[{"text":"Test function pushes the current registration and cache states","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/push()","kind":"symbol","url":"\/documentation\/factorykit\/containermanager\/push()","title":"push()"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/dependencyChainTestMax":{"abstract":[{"text":"Public variable exposing dependency chain test maximum","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependencyChainTestMax","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/dependencyChainTestMax","kind":"symbol","title":"dependencyChainTestMax","url":"\/documentation\/factorykit\/containermanager\/dependencychaintestmax"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/trace":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/trace","url":"\/documentation\/factorykit\/containermanager\/trace","type":"topic","abstract":[{"text":"Public var enabling factory resolution trace statements in debug mode for ALL containers.","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trace"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"kind":"symbol","title":"trace","role":"symbol"}}}