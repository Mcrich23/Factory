{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer"},"sections":[],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"],"kind":"relationships","title":"Inherited By","type":"inheritedBy"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"topicSections":[{"anchor":"Instance-Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager"],"title":"Instance Properties","generated":true},{"anchor":"Instance-Methods","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5savv","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-6sobf","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-n9wn"],"title":"Instance Methods","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/managedcontainer"]}],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"},{"text":" : AnyObject, ","kind":"text"},{"text":"Sendable","preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a container only supports ManagedContainer then the container must be instantiated and passed as an instance. Hereâ€™s"},{"type":"text","text":" "},{"type":"text","text":"an example of passing such a container to a view model for dependency resolution."}]},{"code":["class ContentViewModel {","    let service: MyServiceType","    init(container: Container) {","        service = container.service()","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers"},{"type":"text","text":" for more information."}]}],"kind":"content"}],"metadata":{"title":"ManagedContainer","externalID":"s:10FactoryKit16ManagedContainerP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"symbolKind":"protocol","modules":[{"name":"FactoryKit"}],"role":"symbol","roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"references":{"doc://FactoryKit/documentation/FactoryKit/Resolving":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resolving","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"Resolving","abstract":[{"text":"When protocol is applied to a container it enables a typed registration\/resolution mode.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Resolving"}],"url":"\/documentation\/factorykit\/resolving","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/reset(options:)":{"kind":"symbol","title":"reset(options:)","url":"\/documentation\/factorykit\/managedcontainer\/reset(options:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions"},{"kind":"text","text":")"}],"role":"symbol","abstract":[{"type":"text","text":"Defines a thread safe access mechanism to reset the container."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/sharedcontainer","type":"topic","title":"SharedContainer","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"title":"FactoryKit","url":"\/documentation\/factorykit"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-777bk":{"abstract":[{"text":"Defines a with function to allow container transformation on assignment.","type":"text"}],"role":"symbol","title":"with(_:)","type":"topic","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-777bk","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-6sobf":{"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound Factory."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"preciseIdentifier":"s:10FactoryKit04VoidA4Typea","kind":"typeIdentifier","text":"VoidFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-6sobf","role":"symbol","url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-6sobf","title":"callAsFunction(key:_:)","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Containers":{"url":"\/documentation\/factorykit\/containers","kind":"article","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","type":"topic","role":"article","title":"Containers","abstract":[{"type":"text","text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?"}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"title":"ManagedContainer","abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"type":"topic","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"url":"\/documentation\/factorykit\/managedcontainer"},"doc://FactoryKit/documentation/FactoryKit/Container":{"role":"symbol","url":"\/documentation\/factorykit\/container","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","title":"Container","navigatorTitle":[{"text":"Container","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"type":"topic"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-n9wn":{"abstract":[{"text":"Defines an async with function to allow container transformation on assignment.","type":"text"}],"role":"symbol","title":"with(_:)","type":"topic","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-n9wn","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-n9wn"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-1lq85":{"title":"promised(key:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"role":"symbol","type":"topic","abstract":[{"text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution.","type":"text"}],"url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","kind":"symbol"},"doc://FactoryKit/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/decorator(_:)":{"abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"((("},{"kind":"keyword","text":"Any"},{"kind":"text","text":") -> ())?)"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","role":"symbol","url":"\/documentation\/factorykit\/managedcontainer\/decorator(_:)","kind":"symbol","title":"decorator(_:)"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-4mfii":{"type":"topic","title":"promised(key:file:line:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"ParameterFactory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit09ParameterA0V"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"abstract":[{"text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-4mfii"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-5savv":{"title":"callAsFunction(key:_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5savv","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"ParameterFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit09ParameterA4Typea"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"ParameterFactory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit09ParameterA0V"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Syntactic sugar allows container to create a properly bound ParameterFactory.","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-5savv"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/manager":{"title":"manager","abstract":[{"text":"Defines the ContainerManager used to manage registrations, resolutions, and scope caching for that container. Encapsulating the code in","type":"text"},{"text":" ","type":"text"},{"text":"this fashion makes creating and using your own custom containers much simpler.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"manager","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ContainerManager","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit16ContainerManagerC"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager","type":"topic","url":"\/documentation\/factorykit\/managedcontainer\/manager","role":"symbol","required":true}}}