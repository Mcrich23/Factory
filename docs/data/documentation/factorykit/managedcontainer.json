{"relationshipsSections":[{"identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"],"type":"inheritedBy","kind":"relationships","title":"Inherited By"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"metadata":{"modules":[{"name":"FactoryKit"}],"symbolKind":"protocol","role":"symbol","roleHeading":"Protocol","title":"ManagedContainer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"externalID":"s:10FactoryKit16ManagedContainerP"},"abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5savv","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-6sobf","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-n9wn"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"},{"kind":"text","text":" : AnyObject, "},{"preciseIdentifier":"s:s8SendableP","kind":"typeIdentifier","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"If a container only supports ManagedContainer then the container must be instantiated and passed as an instance. Hereâ€™s"},{"type":"text","text":" "},{"type":"text","text":"an example of passing such a container to a view model for dependency resolution."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["class ContentViewModel {","    let service: MyServiceType","    init(container: Container) {","        service = container.service()","    }","}"]},{"inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","isActive":true},{"type":"text","text":" for more information."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/factorykit\/managedcontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"references":{"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"type":"topic","url":"\/documentation\/factorykit\/sharedcontainer","title":"SharedContainer","kind":"symbol","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Containers":{"abstract":[{"type":"text","text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?"}],"kind":"article","title":"Containers","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","type":"topic","url":"\/documentation\/factorykit\/containers","role":"article"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/decorator(_:)":{"kind":"symbol","abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","type":"topic","url":"\/documentation\/factorykit\/managedcontainer\/decorator(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"title":"decorator(_:)"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-777bk":{"kind":"symbol","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-777bk","abstract":[{"type":"text","text":"Defines a with function to allow container transformation on assignment."}],"role":"symbol","title":"with(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-n9wn":{"title":"with(_:)","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-n9wn","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-n9wn","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Defines an async with function to allow container transformation on assignment.","type":"text"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/manager":{"title":"manager","abstract":[{"text":"Defines the ContainerManager used to manage registrations, resolutions, and scope caching for that container. Encapsulating the code in","type":"text"},{"text":" ","type":"text"},{"text":"this fashion makes creating and using your own custom containers much simpler.","type":"text"}],"url":"\/documentation\/factorykit\/managedcontainer\/manager","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"manager"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ContainerManager","preciseIdentifier":"s:10FactoryKit16ContainerManagerC"}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager","kind":"symbol"},"doc://FactoryKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-5savv":{"url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-5savv","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit09ParameterA4Typea","text":"ParameterFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit09ParameterA0V","text":"ParameterFactory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"callAsFunction(key:_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5savv","type":"topic","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound ParameterFactory."}],"kind":"symbol","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Container":{"title":"Container","kind":"symbol","type":"topic","url":"\/documentation\/factorykit\/container","abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","navigatorTitle":[{"kind":"identifier","text":"Container"}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-6sobf":{"title":"callAsFunction(key:_:)","role":"symbol","abstract":[{"text":"Syntactic sugar allows container to create a properly bound Factory.","type":"text"}],"url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-6sobf","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-6sobf","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"VoidFactoryType","preciseIdentifier":"s:10FactoryKit04VoidA4Typea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"kind":"symbol","title":"ManagedContainer","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","type":"topic","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factorykit\/managedcontainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-1lq85":{"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","kind":"symbol","type":"topic","title":"promised(key:file:line:)","url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","title":"FactoryKit","type":"topic","url":"\/documentation\/factorykit","kind":"symbol","role":"collection","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-4mfii":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"ParameterFactory","preciseIdentifier":"s:10FactoryKit09ParameterA0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"kind":"symbol","abstract":[{"text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution.","type":"text"}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii","title":"promised(key:file:line:)","url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-4mfii","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/reset(options:)":{"abstract":[{"text":"Defines a thread safe access mechanism to reset the container.","type":"text"}],"kind":"symbol","title":"reset(options:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)","type":"topic","url":"\/documentation\/factorykit\/managedcontainer\/reset(options:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://FactoryKit/documentation/FactoryKit/Resolving":{"type":"topic","title":"Resolving","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Resolving"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Resolving"}],"abstract":[{"text":"When protocol is applied to a container it enables a typed registration\/resolution mode.","type":"text"}],"url":"\/documentation\/factorykit\/resolving","role":"symbol"}}}