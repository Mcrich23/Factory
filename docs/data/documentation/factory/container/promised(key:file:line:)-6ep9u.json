{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"text":" = ","kind":"text"},{"text":"#file","kind":"keyword"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"kind":"keyword","text":"#line"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V","text":"ParameterFactory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"type":"codeListing","code":["extension Container {","    public var accountLoader: Factory<Int, AccountLoading?> { _ in promised() }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"When run in debug mode and the application attempts to resolve an unregistered accountLoader, ","type":"text"},{"type":"codeVoice","code":"promised()"},{"type":"text","text":" will trigger a fatalError to"},{"text":" ","type":"text"},{"type":"text","text":"inform you of the mistake. But in a released application, "},{"code":"promised()","type":"codeVoice"},{"text":" simply returns nil and your application can continue on.","type":"text"}]}]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:file:line:)-6ep9u"},"metadata":{"role":"symbol","symbolKind":"method","title":"promised(key:file:line:)","modules":[{"name":"Factory"}],"roleHeading":"Instance Method","externalID":"s:7Factory16ManagedContainerPAAE8promised3key4file4lineAA09ParameterA0Vyqd__qd_0_SgGs12StaticStringV_AMSutr0_lF::SYNTHESIZED::s:7Factory9ContainerC","extendedModule":"Factory","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":", "},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Factory09ParameterA0V","text":"ParameterFactory","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Container"]]},"kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution."}],"variants":[{"paths":["\/documentation\/factory\/container\/promised(key:file:line:)-6ep9u"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory/Container/promised(key:file:line:)-6ep9u":{"role":"symbol","url":"\/documentation\/factory\/container\/promised(key:file:line:)-6ep9u","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container\/promised(key:file:line:)-6ep9u","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V","text":"ParameterFactory"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":"?>","kind":"text"}],"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution."}],"type":"topic","title":"promised(key:file:line:)","kind":"symbol"},"doc://Factory/documentation/Factory/Container":{"role":"symbol","type":"topic","url":"\/documentation\/factory\/container","title":"Container","abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/ParameterFactory":{"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"url":"\/documentation\/factory\/parameterfactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"}}}