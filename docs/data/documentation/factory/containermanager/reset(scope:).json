{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"metadata":{"externalID":"s:7Factory16ContainerManagerC5reset5scopeyAA5ScopeC_tF","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Factory"}],"role":"symbol","extendedModule":"Factory","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":")"}],"title":"reset(scope:)"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"kind":"text","text":"("},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"text":")","kind":"text"}]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/factory\/containermanager\/reset(scope:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ContainerManager"]]},"kind":"symbol","references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"kind":"symbol","type":"topic","title":"reset(scope:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","url":"\/documentation\/factory\/containermanager\/reset(scope:)","abstract":[{"text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact.","type":"text"}]},"doc://Factory/documentation/Factory/Scope":{"type":"topic","role":"symbol","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Factory/documentation/Factory/ContainerManager":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","title":"ContainerManager","url":"\/documentation\/factory\/containermanager","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}],"navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"kind":"symbol"}}}