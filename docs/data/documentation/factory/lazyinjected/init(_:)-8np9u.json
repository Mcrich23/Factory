{"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/lazyinjected\/init(_:)-8np9u"]}],"abstract":[{"text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"keyPath","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">>) ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"SharedContainer","preciseIdentifier":"s:7Factory15SharedContainerP","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"keyPath","content":[{"type":"paragraph","inlineContent":[{"text":"KeyPath to a Factory on the specified Container.","type":"text"}]}]}]}],"metadata":{"modules":[{"name":"Factory"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"title":"init(_:)","externalID":"s:7Factory12LazyInjectedVyACyxGs7KeyPathCyqd__A2AVyxGGcAA15SharedContainerRd__lufc","symbolKind":"init","role":"symbol","roleHeading":"Initializer"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/init(_:)-8np9u"},"references":{"doc://Factory/documentation/Factory/LazyInjected/init(_:)-8np9u":{"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"url":"\/documentation\/factory\/lazyinjected\/init(_:)-8np9u","type":"topic","title":"init(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/init(_:)-8np9u","role":"symbol","kind":"symbol","abstract":[{"text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time.","type":"text"}]},"doc://Factory/documentation/Factory/Factory":{"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","url":"\/documentation\/factory\/factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"title":"Factory","role":"symbol"},"doc://Factory/documentation/Factory/SharedContainer":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"type":"topic","kind":"symbol","url":"\/documentation\/factory\/sharedcontainer","role":"symbol","title":"SharedContainer"},"doc://Factory/documentation/Factory/LazyInjected":{"role":"symbol","type":"topic","url":"\/documentation\/factory\/lazyinjected","title":"LazyInjected","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LazyInjected"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"LazyInjected","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"}}}