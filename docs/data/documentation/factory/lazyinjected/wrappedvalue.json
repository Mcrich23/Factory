{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" { "},{"kind":"keyword","text":"mutating"},{"text":" ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/lazyinjected\/wrappedvalue"]}],"abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/wrappedValue"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"role":"symbol","externalID":"s:7Factory12LazyInjectedV12wrappedValuexvp","roleHeading":"Instance Property","modules":[{"name":"Factory"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"symbolKind":"property","title":"wrappedValue"},"references":{"doc://Factory/documentation/Factory/LazyInjected":{"title":"LazyInjected","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"url":"\/documentation\/factory\/lazyinjected","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LazyInjected","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/LazyInjected/wrappedValue":{"role":"symbol","kind":"symbol","title":"wrappedValue","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/wrappedValue","url":"\/documentation\/factory\/lazyinjected\/wrappedvalue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time.","type":"text"}],"type":"topic"}}}