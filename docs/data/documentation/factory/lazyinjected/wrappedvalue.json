{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"]}]}],"abstract":[{"text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time.","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/lazyinjected\/wrappedvalue"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/wrappedValue","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Factory"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"roleHeading":"Instance Property","title":"wrappedValue","role":"symbol","symbolKind":"property","externalID":"s:7Factory12LazyInjectedV12wrappedValuexvp"},"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/LazyInjected/wrappedValue":{"abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"title":"wrappedValue","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/factory\/lazyinjected\/wrappedvalue","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/LazyInjected":{"role":"symbol","url":"\/documentation\/factory\/lazyinjected","title":"LazyInjected","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyInjected"}],"navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","type":"topic","kind":"symbol"}}}