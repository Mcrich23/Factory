{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/projectedValue"},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LazyInjected","kind":"typeIdentifier","preciseIdentifier":"s:7Factory12LazyInjectedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"title":"projectedValue","symbolKind":"property","roleHeading":"Instance Property","externalID":"s:7Factory12LazyInjectedV14projectedValueACyxGvp","modules":[{"name":"Factory"}],"role":"symbol"},"abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"variants":[{"paths":["\/documentation\/factory\/lazyinjected\/projectedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/LazyInjected"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory12LazyInjectedV","identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","text":"LazyInjected"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"> { ","kind":"text"},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/LazyInjected":{"role":"symbol","url":"\/documentation\/factory\/lazyinjected","title":"LazyInjected","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LazyInjected"}],"navigatorTitle":[{"text":"LazyInjected","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/LazyInjected/projectedValue":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/LazyInjected\/projectedValue","url":"\/documentation\/factory\/lazyinjected\/projectedvalue","type":"topic","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"title":"projectedValue","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LazyInjected","kind":"typeIdentifier","preciseIdentifier":"s:7Factory12LazyInjectedV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}]}}}