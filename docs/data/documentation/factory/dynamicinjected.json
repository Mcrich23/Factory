{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected","interfaceLanguage":"swift"},"metadata":{"title":"DynamicInjected","externalID":"s:7Factory15DynamicInjectedV","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"}],"modules":[{"name":"Factory"}]},"abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"generated":true,"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue"],"anchor":"Instance-Properties"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using","type":"text"},{"type":"text","text":" "},{"text":"EnvironmentObject in SwiftUI.","type":"text"}],"type":"paragraph"},{"code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"The provided keypath resolves to a Factory definition on the ","type":"text"},{"code":"shared","type":"codeVoice"},{"type":"text","text":" container required for each Container type."},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"type":"text","text":"allows you to point an instance of your own custom container type."}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every ","type":"text"},{"inlineContent":[{"type":"text","text":"access"}],"type":"strong"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"important","name":"Important","type":"aside"},{"inlineContent":[{"type":"text","text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the"},{"type":"text","text":" "},{"type":"text","text":"properties are accessed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,"},{"type":"text","text":" "},{"text":"then it probably needs to be cached using one of Factory’s caching mechanisms.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"],"type":"codeListing"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/dynamicinjected"]}],"references":{"doc://Factory/documentation/Factory/DynamicInjected":{"abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"}],"title":"DynamicInjected","type":"topic","url":"\/documentation\/factory\/dynamicinjected"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/DynamicInjected/projectedValue":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","title":"projectedValue","abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"url":"\/documentation\/factory\/dynamicinjected\/projectedvalue","role":"symbol","type":"topic","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]},"doc://Factory/documentation/Factory/DynamicInjected/wrappedValue":{"title":"wrappedValue","url":"\/documentation\/factory\/dynamicinjected\/wrappedvalue","abstract":[{"type":"text","text":"Manages the wrapped dependency."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"wrappedValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-2f6gs":{"title":"init(_:)","type":"topic","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/factory\/dynamicinjected\/init(_:)-2f6gs","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs"},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-3wi25":{"abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25","kind":"symbol","type":"topic","title":"init(_:)","url":"\/documentation\/factory\/dynamicinjected\/init(_:)-3wi25","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Container","preciseIdentifier":"s:7Factory9ContainerC"},{"kind":"text","text":", "},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"role":"symbol"}}}