{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"text":" ","kind":"text"},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DynamicInjected","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"EnvironmentObject in SwiftUI."}]},{"syntax":"swift","type":"codeListing","code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The provided keypath resolves to a Factory definition on the "},{"type":"codeVoice","code":"shared"},{"text":" container required for each Container type.","type":"text"},{"text":" ","type":"text"},{"text":"The short version of the keyPath resolves to the default container, while the expanded version","type":"text"},{"text":" ","type":"text"},{"text":"allows you to point an instance of your own custom container type.","type":"text"}]},{"name":"Important","style":"important","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every ","type":"text"},{"type":"strong","inlineContent":[{"text":"access","type":"text"}]},{"type":"text","text":"."}]}]},{"type":"paragraph","inlineContent":[{"text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"properties are accessed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,"},{"type":"text","text":" "},{"text":"then it probably needs to be cached using one of Factory’s caching mechanisms.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"]}]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Factory\/s8SendableP"]}],"sections":[],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25"],"anchor":"Initializers"},{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue"],"anchor":"Instance-Properties"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"metadata":{"roleHeading":"Structure","symbolKind":"struct","title":"DynamicInjected","modules":[{"name":"Factory"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"}],"externalID":"s:7Factory15DynamicInjectedV"},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected"},"variants":[{"paths":["\/documentation\/factory\/dynamicinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type."}],"references":{"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/DynamicInjected/projectedValue":{"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","role":"symbol","title":"projectedValue","abstract":[{"text":"Unwraps the property wrapper granting access to the resolve\/reset function.","type":"text"}],"url":"\/documentation\/factory\/dynamicinjected\/projectedvalue","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier","text":"Factory"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Factory/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/DynamicInjected":{"navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"role":"symbol","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected","kind":"symbol","url":"\/documentation\/factory\/dynamicinjected","title":"DynamicInjected","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DynamicInjected"}]},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-2f6gs":{"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs","role":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"url":"\/documentation\/factory\/dynamicinjected\/init(_:)-2f6gs","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"C"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}]},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-3wi25":{"title":"init(_:)","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25","type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory9ContainerC","text":"Container"},{"text":", ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">>)","kind":"text"}],"abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"url":"\/documentation\/factory\/dynamicinjected\/init(_:)-3wi25"},"doc://Factory/documentation/Factory/DynamicInjected/wrappedValue":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/factory\/dynamicinjected\/wrappedvalue","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Manages the wrapped dependency."}]}}}