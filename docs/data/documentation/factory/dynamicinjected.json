{"metadata":{"roleHeading":"Structure","modules":[{"name":"Factory"}],"title":"DynamicInjected","externalID":"s:7Factory15DynamicInjectedV","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicInjected","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25"],"title":"Initializers","generated":true},{"generated":true,"identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue"],"anchor":"Instance-Properties","title":"Instance Properties"}],"variants":[{"paths":["\/documentation\/factory\/dynamicinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@propertyWrapper","kind":"attribute"},{"kind":"text","text":" "},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using","type":"text"},{"text":" ","type":"text"},{"text":"EnvironmentObject in SwiftUI.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"]},{"inlineContent":[{"text":"The provided keypath resolves to a Factory definition on the ","type":"text"},{"code":"shared","type":"codeVoice"},{"type":"text","text":" container required for each Container type."},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"text":" ","type":"text"},{"type":"text","text":"allows you to point an instance of your own custom container type."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every "},{"inlineContent":[{"text":"access","type":"text"}],"type":"strong"},{"type":"text","text":"."}]}],"name":"Important","style":"important","type":"aside"},{"inlineContent":[{"type":"text","text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the"},{"type":"text","text":" "},{"type":"text","text":"properties are accessed."}],"type":"paragraph"},{"inlineContent":[{"text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"then it probably needs to be cached using one of Factory’s caching mechanisms."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"]}]}],"references":{"doc://Factory/documentation/Factory/DynamicInjected/projectedValue":{"title":"projectedValue","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","role":"symbol","url":"\/documentation\/factory\/dynamicinjected\/projectedvalue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"kind":"symbol"},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-3wi25":{"type":"topic","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"text":"Container","kind":"typeIdentifier","preciseIdentifier":"s:7Factory9ContainerC"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">>)","kind":"text"}],"url":"\/documentation\/factory\/dynamicinjected\/init(_:)-3wi25","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25","role":"symbol"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/DynamicInjected":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"kind":"symbol","url":"\/documentation\/factory\/dynamicinjected","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"DynamicInjected","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected","title":"DynamicInjected","role":"symbol"},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-2f6gs":{"title":"init(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs","role":"symbol","url":"\/documentation\/factory\/dynamicinjected\/init(_:)-2f6gs","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"C"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">>)"}],"abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"kind":"symbol"},"doc://Factory/documentation/Factory/DynamicInjected/wrappedValue":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue","type":"topic","kind":"symbol","role":"symbol","title":"wrappedValue","url":"\/documentation\/factory\/dynamicinjected\/wrappedvalue","abstract":[{"type":"text","text":"Manages the wrapped dependency."}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"}]}}}