{"variants":[{"paths":["\/documentation\/factory\/dynamicinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using"},{"type":"text","text":" "},{"type":"text","text":"EnvironmentObject in SwiftUI."}]},{"code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The provided keypath resolves to a Factory definition on the "},{"type":"codeVoice","code":"shared"},{"type":"text","text":" container required for each Container type."},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"type":"text","text":"allows you to point an instance of your own custom container type."}]},{"style":"important","name":"Important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every "},{"inlineContent":[{"text":"access","type":"text"}],"type":"strong"},{"type":"text","text":"."}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the","type":"text"},{"text":" ","type":"text"},{"text":"properties are accessed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,","type":"text"},{"text":" ","type":"text"},{"text":"then it probably needs to be cached using one of Factory’s caching mechanisms.","type":"text"}]},{"code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"],"syntax":"swift","type":"codeListing"}]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/Factory\/s8SendableP"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Factory"}],"title":"DynamicInjected","externalID":"s:7Factory15DynamicInjectedV","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"roleHeading":"Structure","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"}]},"kind":"symbol","topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue"],"generated":true}],"sections":[],"references":{"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-2f6gs":{"abstract":[{"text":"Initializes the property wrapper. The dependency is resolved on access.","type":"text"}],"type":"topic","kind":"symbol","title":"init(_:)","role":"symbol","url":"\/documentation\/factory\/dynamicinjected\/init(_:)-2f6gs","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-2f6gs"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/DynamicInjected/wrappedValue":{"abstract":[{"type":"text","text":"Manages the wrapped dependency."}],"url":"\/documentation\/factory\/dynamicinjected\/wrappedvalue","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/wrappedValue","type":"topic","kind":"symbol","title":"wrappedValue"},"doc://Factory/documentation/Factory/DynamicInjected":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected","url":"\/documentation\/factory\/dynamicinjected","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type."}],"title":"DynamicInjected","navigatorTitle":[{"kind":"identifier","text":"DynamicInjected"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"}]},"doc://Factory/documentation/Factory/DynamicInjected/init(_:)-3wi25":{"title":"init(_:)","role":"symbol","type":"topic","abstract":[{"text":"Initializes the property wrapper. The dependency is resolved on access.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"Container","kind":"typeIdentifier","preciseIdentifier":"s:7Factory9ContainerC"},{"text":", ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"url":"\/documentation\/factory\/dynamicinjected\/init(_:)-3wi25","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/init(_:)-3wi25"},"doc://Factory/documentation/Factory/DynamicInjected/projectedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"projectedValue","identifier":"doc:\/\/Factory\/documentation\/Factory\/DynamicInjected\/projectedValue","kind":"symbol","type":"topic","url":"\/documentation\/factory\/dynamicinjected\/projectedvalue","role":"symbol","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}]}}}