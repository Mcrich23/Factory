{"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"text":"T","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected"]]},"variants":[{"paths":["\/documentation\/factory\/weaklazyinjected\/wrappedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/wrappedValue","interfaceLanguage":"swift"},"abstract":[{"text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"wrappedValue","modules":[{"name":"Factory"}],"role":"symbol","externalID":"s:7Factory16WeakLazyInjectedV12wrappedValuexSgvp","symbolKind":"property","roleHeading":"Instance Property"},"references":{"doc://Factory/documentation/Factory/WeakLazyInjected/wrappedValue":{"abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/wrappedValue","title":"wrappedValue","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"url":"\/documentation\/factory\/weaklazyinjected\/wrappedvalue"},"doc://Factory/documentation/Factory/WeakLazyInjected":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"WeakLazyInjected","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested."}],"title":"WeakLazyInjected","url":"\/documentation\/factory\/weaklazyinjected","type":"topic"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"}}}