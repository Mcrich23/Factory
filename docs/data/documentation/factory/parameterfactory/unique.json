{"abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true},{"type":"text","text":"."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/parameterfactory\/unique"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"modules":[{"name":"Factory"}],"role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE6uniquexvp::SYNTHESIZED::s:7Factory09ParameterA0V","symbolKind":"property","title":"unique","extendedModule":"Factory","roleHeading":"Instance Property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .unique","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"While you can add the modifier, Factoryâ€™s are unique by default."}]}]}],"references":{"doc://Factory/documentation/Factory/Scope":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"title":"Scope","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/ParameterFactory/unique":{"abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique","url":"\/documentation\/factory\/parameterfactory\/unique","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","type":"topic","title":"unique"},"doc://Factory/documentation/Factory/ParameterFactory":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"role":"symbol","navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","kind":"symbol","url":"\/documentation\/factory\/parameterfactory"}}}