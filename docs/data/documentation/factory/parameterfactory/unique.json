{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"metadata":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Instance Property","extendedModule":"Factory","title":"unique","externalID":"s:7Factory0A9ModifyingPAAE6uniquexvp::SYNTHESIZED::s:7Factory09ParameterA0V","modules":[{"name":"Factory"}],"role":"symbol","symbolKind":"property"},"abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true},{"type":"text","text":"."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/unique"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .unique","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While you can add the modifier, Factoryâ€™s are unique by default."}]}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique","interfaceLanguage":"swift"},"references":{"doc://Factory/documentation/Factory/ParameterFactory/unique":{"kind":"symbol","type":"topic","url":"\/documentation\/factory\/parameterfactory\/unique","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"unique","abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope"},{"type":"text","text":"."}]},"doc://Factory/documentation/Factory/ParameterFactory":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"title":"ParameterFactory","url":"\/documentation\/factory\/parameterfactory","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}]},"doc://Factory/documentation/Factory/Scope":{"type":"topic","role":"symbol","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"}}}