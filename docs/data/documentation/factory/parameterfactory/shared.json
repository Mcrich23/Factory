{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/shared"]}],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","isActive":true},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .shared","}"],"syntax":"swift","type":"codeListing"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"metadata":{"externalID":"s:7Factory0A9ModifyingPAAE6sharedxvp::SYNTHESIZED::s:7Factory09ParameterA0V","roleHeading":"Instance Property","role":"symbol","modules":[{"name":"Factory"}],"extendedModule":"Factory","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"title":"shared","symbolKind":"property"},"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/shared","interfaceLanguage":"swift"},"references":{"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"title":"Scope.Shared","type":"topic","role":"symbol","url":"\/documentation\/factory\/scope\/shared-swift.class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/shared":{"title":"shared","kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/parameterfactory\/shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/shared","role":"symbol","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory":{"title":"ParameterFactory","role":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"url":"\/documentation\/factory\/parameterfactory"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"}}}