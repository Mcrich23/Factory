{"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scopeOnParameters"},"metadata":{"role":"symbol","extendedModule":"Factory","externalID":"s:7Factory0A9ModifyingPAASH1PRpzrlE17scopeOnParametersxvp::SYNTHESIZED::s:7Factory09ParameterA0V","symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopeOnParameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"title":"scopeOnParameters","conformance":{"constraints":[{"type":"codeVoice","code":"P"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"modules":[{"name":"Factory"}],"roleHeading":"Instance Property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopeOnParameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"The behavior can be changed with the ","type":"text"},{"type":"codeVoice","code":".scopeOnParameters"},{"text":" modifier.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var parameterService: ParameterFactory<Int, ParameterService> {","    self { ParameterService(value: $0) }.scopeOnParameters.cached","}"]},{"inlineContent":[{"type":"text","text":"The passed parameter must be Hashable for this modifier to appear and for the per-parameter caching functionality to occur."}],"type":"paragraph"}]}],"abstract":[{"text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are","type":"text"},{"text":" ","type":"text"},{"text":"passed on future requests.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/scopeonparameters"]}],"kind":"symbol","references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/ParameterFactory":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"role":"symbol","navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","kind":"symbol","url":"\/documentation\/factory\/parameterfactory"},"doc://Factory/documentation/Factory/ParameterFactory/scopeOnParameters":{"url":"\/documentation\/factory\/parameterfactory\/scopeonparameters","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scopeOnParameters","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are","type":"text"},{"text":" ","type":"text"},{"text":"passed on future requests.","type":"text"}],"title":"scopeOnParameters","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"P"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"}}}