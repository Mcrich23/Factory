{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"inlineContent":[{"text":"always","type":"text"}],"type":"emphasis"},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"text":"for further examination or manipulation.","type":"text"}],"metadata":{"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Factory"}],"title":"decorator(_:)","extendedModule":"Factory","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:7Factory0A9ModifyingPAAE9decoratoryxy1TQzYbcF::SYNTHESIZED::s:7Factory09ParameterA0V"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"decorator","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","text":"T"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This includes previously created items that may have been cached by a scope."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"]},{"type":"paragraph","inlineContent":[{"text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact.","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/factory\/parameterfactory\/decorator(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"references":{"doc://Factory/documentation/Factory/ParameterFactory":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"title":"ParameterFactory","url":"\/documentation\/factory\/parameterfactory","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}]},"doc://Factory/documentation/Factory/FactoryModifying/T":{"role":"symbol","abstract":[{"type":"text","text":"The return type of the Factoryâ€™s dependency."}],"title":"T","url":"\/documentation\/factory\/factorymodifying\/t","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"T","kind":"identifier"}],"required":true},"doc://Factory/documentation/Factory/ParameterFactory/decorator(_:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"type":"emphasis","inlineContent":[{"text":"always","type":"text"}]},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"kind":"symbol","url":"\/documentation\/factory\/parameterfactory\/decorator(_:)","title":"decorator(_:)","type":"topic"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"}}}