{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)"},"abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"type":"text","text":" be called with the resolved dependency"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decorator"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This includes previously created items that may have been cached by a scope."}]},{"syntax":"swift","code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"],"type":"codeListing"},{"inlineContent":[{"text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact.","type":"text"}],"type":"paragraph"}]}],"metadata":{"title":"decorator(_:)","extendedModule":"Factory","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"Factory"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"externalID":"s:7Factory0A9ModifyingPAAE9decoratoryxy1TQzYbcF::SYNTHESIZED::s:7Factory09ParameterA0V","symbolKind":"method"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/decorator(_:)"]}],"references":{"doc://Factory/documentation/Factory/FactoryModifying/T":{"role":"symbol","kind":"symbol","abstract":[{"text":"The return type of the Factoryâ€™s dependency.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","url":"\/documentation\/factory\/factorymodifying\/t","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"identifier"}],"title":"T","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory/decorator(_:)":{"abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"inlineContent":[{"type":"text","text":"always"}],"type":"emphasis"},{"text":" be called with the resolved dependency","type":"text"},{"type":"text","text":" "},{"text":"for further examination or manipulation.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)","url":"\/documentation\/factory\/parameterfactory\/decorator(_:)","title":"decorator(_:)","kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/ParameterFactory":{"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"url":"\/documentation\/factory\/parameterfactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"}}}