{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"]}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"title":"singleton","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"extendedModule":"Factory","role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:7Factory09ParameterA0V","roleHeading":"Instance Property","modules":[{"name":"Factory"}],"symbolKind":"property"},"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"sections":[],"variants":[{"paths":["\/documentation\/factory\/parameterfactory\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"kind":"symbol","references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/singleton":{"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","role":"symbol","title":"singleton","url":"\/documentation\/factory\/parameterfactory\/singleton"},"doc://Factory/documentation/Factory/ParameterFactory":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"title":"ParameterFactory","url":"\/documentation\/factory\/parameterfactory","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}]},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"url":"\/documentation\/factory\/scope\/singleton-swift.class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}]}}}