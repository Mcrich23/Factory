{"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/parameterfactory\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"metadata":{"roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"property","role":"symbol","externalID":"s:7Factory0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:7Factory09ParameterA0V","modules":[{"name":"Factory"}],"title":"singleton","extendedModule":"Factory"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"]}],"kind":"content"}],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true,"type":"reference"},{"type":"text","text":"."}],"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/ParameterFactory":{"title":"ParameterFactory","role":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"url":"\/documentation\/factory\/parameterfactory"},"doc://Factory/documentation/Factory/ParameterFactory/singleton":{"title":"singleton","type":"topic","role":"symbol","url":"\/documentation\/factory\/parameterfactory\/singleton","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"kind":"symbol","role":"symbol","title":"Scope.Singleton","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class"}}}