{"abstract":[{"text":"Public initializer creates a factory capable of taking parameters at runtime.","type":"text"}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/init(_:key:_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/init(_:key:_:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"container"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:7Factory16ManagedContainerP","kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","text":"ManagedContainer"},{"text":", ","kind":"text"},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"factory","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","kind":"typeIdentifier","text":"ParameterFactoryType","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactoryType"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">)"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"name":"container","content":[{"inlineContent":[{"text":"The bound container that manages registrations and scope caching for this Factory. The scope helper functions bind the","type":"text"},{"type":"text","text":" "},{"text":"current container as well defining the scope.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Hidden value used to differentiate different instances of the same type in the same container.","type":"text"}],"type":"paragraph"}],"name":"key"},{"name":"factory","content":[{"inlineContent":[{"text":"A factory closure that produces an object of the desired type when required.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"syntax":"swift","type":"codeListing","code":["var parameterService: ParameterFactory<Int, ParameterService> {","    self { ParameterService(value: $0) }","}"]}],"kind":"content"}],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(any ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory16ManagedContainerP","text":"ManagedContainer"},{"text":", ","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">)"}],"externalID":"s:7Factory09ParameterA0V_3key_ACyxq_GAA16ManagedContainer_p_s12StaticStringVq_xYbYActcfc","title":"init(_:key:_:)","modules":[{"name":"Factory"}],"symbolKind":"init","role":"symbol","roleHeading":"Initializer"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"sections":[],"references":{"doc://Factory/documentation/Factory/ParameterFactory/init(_:key:_:)":{"url":"\/documentation\/factory\/parameterfactory\/init(_:key:_:)","abstract":[{"type":"text","text":"Public initializer creates a factory capable of taking parameters at runtime."}],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(any "},{"preciseIdentifier":"s:7Factory16ManagedContainerP","kind":"typeIdentifier","text":"ManagedContainer"},{"kind":"text","text":", "},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/init(_:key:_:)","kind":"symbol","title":"init(_:key:_:)"},"doc://Factory/documentation/Factory/ManagedContainer":{"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"title":"ManagedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","url":"\/documentation\/factory\/managedcontainer"},"doc://Factory/documentation/Factory/ParameterFactoryType":{"title":"ParameterFactoryType","role":"symbol","navigatorTitle":[{"text":"ParameterFactoryType","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactoryType"}],"abstract":[],"url":"\/documentation\/factory\/parameterfactorytype","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactoryType"},"doc://Factory/documentation/Factory/ParameterFactory":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"title":"ParameterFactory","url":"\/documentation\/factory\/parameterfactory","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"}}}