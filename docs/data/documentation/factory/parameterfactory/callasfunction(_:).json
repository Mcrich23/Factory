{"metadata":{"modules":[{"name":"Factory"}],"symbolKind":"method","title":"callAsFunction(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"externalID":"s:7Factory09ParameterA0V14callAsFunctionyq_xF","roleHeading":"Instance Method","role":"symbol"},"variants":[{"paths":["\/documentation\/factory\/parameterfactory\/callasfunction(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"parameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"code":["let service = container.parameterService(16)"],"type":"codeListing","syntax":"swift"}]}],"abstract":[{"type":"text","text":"Resolves a factory capable of taking parameters at runtime."}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/callAsFunction(_:)"},"sections":[],"references":{"doc://Factory/documentation/Factory/ParameterFactory":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"role":"symbol","navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","kind":"symbol","url":"\/documentation\/factory\/parameterfactory"},"doc://Factory/documentation/Factory/ParameterFactory/callAsFunction(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"kind":"symbol","type":"topic","title":"callAsFunction(_:)","url":"\/documentation\/factory\/parameterfactory\/callasfunction(_:)","abstract":[{"text":"Resolves a factory capable of taking parameters at runtime.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/callAsFunction(_:)","role":"symbol"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}