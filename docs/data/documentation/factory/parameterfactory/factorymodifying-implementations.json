{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/graph","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scopeOnParameters","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/shared","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/context(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onArg(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onArgs(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onDebug(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onDevice(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onPreview(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onSimulator(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onTest(factory:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/once()","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/reset(_:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scope(_:)","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/timeToLive(_:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/factorymodifying-implementations"]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/FactoryModifying-Implementations","interfaceLanguage":"swift"},"metadata":{"role":"collectionGroup","title":"FactoryModifying Implementations","roleHeading":"API Collection","modules":[{"name":"Factory"}]},"references":{"doc://Factory/documentation/Factory/ParameterFactory/scopeOnParameters":{"url":"\/documentation\/factory\/parameterfactory\/scopeonparameters","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scopeOnParameters","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are","type":"text"},{"text":" ","type":"text"},{"text":"passed on future requests.","type":"text"}],"title":"scopeOnParameters","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"P"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"type":"topic","url":"\/documentation\/factory\/scope\/shared-swift.class"},"doc://Factory/documentation/Factory/ParameterFactory":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","abstract":[{"type":"text","text":"Factory capable of taking parameters at runtime"}],"role":"symbol","navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","kind":"symbol","url":"\/documentation\/factory\/parameterfactory"},"doc://Factory/documentation/Factory/ParameterFactory/cached":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/parameterfactory\/cached","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class"},{"text":".","type":"text"}],"title":"cached","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/onPreview(factory:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onPreview(factory:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onPreview"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"onPreview(factory:)","kind":"symbol","url":"\/documentation\/factory\/parameterfactory\/onpreview(factory:)","abstract":[{"type":"text","text":"Factory builder shortcut for context(.preview) { .. }"}]},"doc://Factory/documentation/Factory/ParameterFactory/graph":{"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be graph. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"graph"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/graph","title":"graph","url":"\/documentation\/factory\/parameterfactory\/graph","kind":"symbol","role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/unique":{"abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/unique","url":"\/documentation\/factory\/parameterfactory\/unique","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","type":"topic","title":"unique"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol","url":"\/documentation\/factory\/scope\/singleton-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"title":"Scope.Cached","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"url":"\/documentation\/factory\/scope\/cached-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}]},"doc://Factory/documentation/Factory/ParameterFactory/onSimulator(factory:)":{"type":"topic","abstract":[{"type":"text","text":"Factory builder shortcut for context(.simulator) { .. }"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onSimulator"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ParameterFactoryType","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"onSimulator(factory:)","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onSimulator(factory:)","role":"symbol","url":"\/documentation\/factory\/parameterfactory\/onsimulator(factory:)"},"doc://Factory/documentation/Factory/ParameterFactory/onDevice(factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onDevice(factory:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onDevice"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"onDevice(factory:)","type":"topic","abstract":[{"type":"text","text":"Factory builder shortcut for context(.device) { .. }"}],"role":"symbol","url":"\/documentation\/factory\/parameterfactory\/ondevice(factory:)","kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/shared":{"type":"topic","url":"\/documentation\/factory\/parameterfactory\/shared","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class"},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/shared","role":"symbol","title":"shared"},"doc://Factory/documentation/Factory/ParameterFactory/onTest(factory:)":{"title":"onTest(factory:)","abstract":[{"text":"Factory builder shortcut for context(.test) { .. }","type":"text"}],"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onTest(factory:)","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onTest"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ParameterFactoryType","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/parameterfactory\/ontest(factory:)"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/ParameterFactory/decorator(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"inlineContent":[{"type":"text","text":"always"}],"type":"emphasis"},{"type":"text","text":" be called with the resolved dependency"},{"type":"text","text":" "},{"type":"text","text":"for further examination or manipulation."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/decorator(_:)","url":"\/documentation\/factory\/parameterfactory\/decorator(_:)","title":"decorator(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/onArgs(_:factory:)":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Factory builder shortcut for context(.args[“test1”,“test2”) { .. }","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onArgs","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/parameterfactory\/onargs(_:factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onArgs(_:factory:)","title":"onArgs(_:factory:)"},"doc://Factory/documentation/Factory/ParameterFactory/timeToLive(_:)":{"abstract":[{"type":"text","text":"Adds time to live option for scopes. If the dependency has been cached for longer than the timeToLive period the"},{"type":"text","text":" "},{"type":"text","text":"cached item will be discarded and a new instance created."}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"timeToLive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/parameterfactory\/timetolive(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/timeToLive(_:)","title":"timeToLive(_:)","kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/reset(_:)":{"url":"\/documentation\/factory\/parameterfactory\/reset(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"reset(_:)","abstract":[{"text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/reset(_:)","role":"symbol","type":"topic"},"doc://Factory/documentation/Factory/ParameterFactory/once()":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/factory\/parameterfactory\/once()","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/once()","title":"once()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"once","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Adds ability to mutate Factory on first instantiation only."}]},"doc://Factory/documentation/Factory/ParameterFactory/scope(_:)":{"role":"symbol","title":"scope(_:)","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scope(_:)","abstract":[{"type":"text","text":"Defines a dependency scope for this Factory. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/factory\/parameterfactory\/scope(_:)"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"url":"\/documentation\/factory\/scope\/graph-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Graph"}],"title":"Scope.Graph"},"doc://Factory/documentation/Factory/ParameterFactory/onArg(_:factory:)":{"abstract":[{"type":"text","text":"Factory builder shortcut for context(.arg(“test”) { .. }"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onArg(_:factory:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onArg","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ParameterFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/parameterfactory\/onarg(_:factory:)","title":"onArg(_:factory:)","type":"topic"},"doc://Factory/documentation/Factory/Scope":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"title":"Scope","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory/singleton":{"title":"singleton","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/singleton","url":"\/documentation\/factory\/parameterfactory\/singleton","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/ParameterFactory/onDebug(factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/onDebug(factory:)","url":"\/documentation\/factory\/parameterfactory\/ondebug(factory:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Factory builder shortcut for context(.debug) { .. }"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onDebug","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"onDebug(factory:)"},"doc://Factory/documentation/Factory/ParameterFactory/context(_:factory:)":{"url":"\/documentation\/factory\/parameterfactory\/context(_:factory:)","title":"context(_:factory:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"context"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A11ContextTypeO","text":"FactoryContextType"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Registers a factory closure to be used only when running in a specific context.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/context(_:factory:)","type":"topic","kind":"symbol"}}}