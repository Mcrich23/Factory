{"kind":"symbol","sections":[],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","type":"reference"},{"text":".","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"codeListing","code":["var service: Factory<ServiceType> {","    factory { MyService() }","        .cached","}"],"syntax":"swift"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Factory","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"Factory"}],"externalID":"s:7Factory0A9ModifyingPAAE6cachedxvp::SYNTHESIZED::s:7Factory09ParameterA0V","title":"cached","roleHeading":"Instance Property","symbolKind":"property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/cached"]}],"references":{"doc://Factory/documentation/Factory/ParameterFactory":{"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"url":"\/documentation\/factory\/parameterfactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"},"doc://Factory/documentation/Factory/ParameterFactory/cached":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","type":"topic","kind":"symbol","title":"cached","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true,"type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/factory\/parameterfactory\/cached"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"navigatorTitle":[{"kind":"identifier","text":"Cached"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"title":"Scope.Cached","kind":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/cached-swift.class","abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol"}}}