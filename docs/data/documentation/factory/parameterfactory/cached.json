{"kind":"symbol","identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"variants":[{"paths":["\/documentation\/factory\/parameterfactory\/cached"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"syntax":"swift","code":["var service: Factory<ServiceType> {","    factory { MyService() }","        .cached","}"],"type":"codeListing"}]}],"metadata":{"title":"cached","externalID":"s:7Factory0A9ModifyingPAAE6cachedxvp::SYNTHESIZED::s:7Factory09ParameterA0V","symbolKind":"property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Factory","modules":[{"name":"Factory"}],"roleHeading":"Instance Property"},"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/ParameterFactory/cached":{"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/cached","kind":"symbol","title":"cached","url":"\/documentation\/factory\/parameterfactory\/cached"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"title":"Scope.Cached","type":"topic","role":"symbol","url":"\/documentation\/factory\/scope\/cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/ParameterFactory":{"title":"ParameterFactory","role":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"url":"\/documentation\/factory\/parameterfactory"}}}