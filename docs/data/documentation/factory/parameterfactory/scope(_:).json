{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scope(_:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/parameterfactory\/scope(_:)"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"]]},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","role":"symbol","extendedModule":"Factory","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Scope","preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"Factory"}],"title":"scope(_:)","externalID":"s:7Factory0A9ModifyingPAAE5scopeyxAA5ScopeCF::SYNTHESIZED::s:7Factory09ParameterA0V"},"abstract":[{"type":"text","text":"Defines a dependency scope for this Factory. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope"},{"type":"text","text":"."}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"scope","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"scope","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Scope","kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"syntax":"swift","type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .scope(.session)","}"]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","title":"Scope","type":"topic","url":"\/documentation\/factory\/scope","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}]},"doc://Factory/documentation/Factory/ParameterFactory/scope(_:)":{"url":"\/documentation\/factory\/parameterfactory\/scope(_:)","abstract":[{"type":"text","text":"Defines a dependency scope for this Factory. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true,"type":"reference"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory\/scope(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"scope","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"scope(_:)"},"doc://Factory/documentation/Factory/ParameterFactory":{"title":"ParameterFactory","role":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"url":"\/documentation\/factory\/parameterfactory"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"}}}