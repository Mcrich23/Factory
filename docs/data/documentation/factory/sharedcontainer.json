{"abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"generated":true,"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SharedContainer"},{"text":" : ","kind":"text"},{"kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","text":"ManagedContainer","preciseIdentifier":"s:7Factory16ManagedContainerP"}]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"inlineContent":[{"text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution.","type":"text"}],"type":"paragraph"},{"code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The default "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","isActive":true},{"text":" provided is a SharedContainer. It can be used in both roles as needed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers"},{"text":" for more information.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"sections":[],"metadata":{"roleHeading":"Protocol","title":"SharedContainer","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"modules":[{"name":"Factory"}],"externalID":"s:7Factory15SharedContainerP","navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"symbolKind":"protocol","role":"symbol"},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","interfaceLanguage":"swift"},"kind":"symbol","relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","doc:\/\/Factory\/s8SendableP"],"type":"inheritsFrom","kind":"relationships"},{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/sharedcontainer"]}],"references":{"doc://Factory/documentation/Factory/SharedContainer":{"abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SharedContainer"}],"url":"\/documentation\/factory\/sharedcontainer","role":"symbol","type":"topic","navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"title":"SharedContainer","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer"},"doc://Factory/documentation/Factory/SharedContainer/shared":{"url":"\/documentation\/factory\/sharedcontainer\/shared","kind":"symbol","title":"shared","abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"type":"topic","required":true,"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/Container":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Container"}],"abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"role":"symbol","url":"\/documentation\/factory\/container","title":"Container","kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic"},"doc://Factory/documentation/Factory/Containers":{"type":"topic","abstract":[{"type":"text","text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?"}],"url":"\/documentation\/factory\/containers","title":"Containers","kind":"article","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","role":"article"},"doc://Factory/documentation/Factory/ManagedContainer":{"title":"ManagedContainer","url":"\/documentation\/factory\/managedcontainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"kind":"symbol"},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}