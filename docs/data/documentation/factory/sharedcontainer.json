{"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","doc:\/\/Factory\/s8SendableP"]},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container"]}],"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","title":"SharedContainer","role":"symbol","externalID":"s:7Factory15SharedContainerP","navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"modules":[{"name":"Factory"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"ManagedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","preciseIdentifier":"s:7Factory16ManagedContainerP"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution.","type":"text"}],"type":"paragraph"},{"code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"The default ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","isActive":true,"type":"reference"},{"text":" provided is a SharedContainer. It can be used in both roles as needed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","isActive":true,"type":"reference"},{"text":" for more information.","type":"text"}],"type":"paragraph"}]}],"abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"kind":"symbol","identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"topicSections":[{"generated":true,"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared"]},{"generated":true,"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/preview(_:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/sharedcontainer"]}],"references":{"doc://Factory/documentation/Factory/Containers":{"abstract":[{"type":"text","text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?"}],"title":"Containers","role":"article","url":"\/documentation\/factory\/containers","kind":"article","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","type":"topic"},"doc://Factory/documentation/Factory/SharedContainer/preview(_:)":{"title":"preview(_:)","abstract":[{"type":"text","text":"Defines a preview convenience function to allow easy shared container transformation in SwiftUI Previews."}],"url":"\/documentation\/factory\/sharedcontainer\/preview(_:)","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/preview(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"preview"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9EmptyViewV","text":"EmptyView"}],"type":"topic"},"doc://Factory/documentation/Factory/Container":{"abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"kind":"symbol","url":"\/documentation\/factory\/container","title":"Container","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container"},"doc://Factory/documentation/Factory/SharedContainer/shared":{"abstract":[{"text":"Defines a single “shared” container for that container type.","type":"text"}],"title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","required":true,"kind":"symbol","url":"\/documentation\/factory\/sharedcontainer\/shared","role":"symbol"},"doc://Factory/documentation/Factory/SharedContainer":{"abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"url":"\/documentation\/factory\/sharedcontainer","role":"symbol","title":"SharedContainer","kind":"symbol","type":"topic"},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://Factory/documentation/Factory/ManagedContainer":{"type":"topic","role":"symbol","title":"ManagedContainer","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/managedcontainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","kind":"symbol","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}