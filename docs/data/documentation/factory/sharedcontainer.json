{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Factory16ManagedContainerP","kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","text":"ManagedContainer"}]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"]},{"inlineContent":[{"text":"The default ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","type":"reference","isActive":true},{"text":" provided is a SharedContainer. It can be used in both roles as needed.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","isActive":true},{"type":"text","text":" for more information."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","doc:\/\/Factory\/s8SendableP"]},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container"],"type":"conformingTypes"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/sharedcontainer"]}],"metadata":{"symbolKind":"protocol","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"roleHeading":"Protocol","externalID":"s:7Factory15SharedContainerP","modules":[{"name":"Factory"}],"title":"SharedContainer"},"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared"],"generated":true,"title":"Type Properties","anchor":"Type-Properties"}],"references":{"doc://Factory/documentation/Factory/SharedContainer":{"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"SharedContainer","kind":"identifier"}],"kind":"symbol","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"title":"SharedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","type":"topic","url":"\/documentation\/factory\/sharedcontainer"},"doc://Factory/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/Containers":{"type":"topic","url":"\/documentation\/factory\/containers","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}],"kind":"article","title":"Containers","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","role":"article"},"doc://Factory/documentation/Factory/Container":{"kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","url":"\/documentation\/factory\/container","title":"Container","role":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer":{"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"title":"ManagedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","url":"\/documentation\/factory\/managedcontainer"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/SharedContainer/shared":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer\/shared","abstract":[{"type":"text","text":"Defines a single “shared” container for that container type."}],"kind":"symbol","role":"symbol","required":true,"url":"\/documentation\/factory\/sharedcontainer\/shared","title":"shared"}}}