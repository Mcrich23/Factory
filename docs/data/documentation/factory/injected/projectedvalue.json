{"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Injected"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory8InjectedV","kind":"typeIdentifier","identifier":"doc:\/\/Factory\/documentation\/Factory\/Injected","text":"Injected"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Injected\/projectedValue"},"abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"metadata":{"roleHeading":"Instance Property","role":"symbol","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Injected","kind":"typeIdentifier","preciseIdentifier":"s:7Factory8InjectedV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7Factory8InjectedV14projectedValueACyxGvp","title":"projectedValue","modules":[{"name":"Factory"}]},"variants":[{"paths":["\/documentation\/factory\/injected\/projectedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory/Injected/projectedValue":{"url":"\/documentation\/factory\/injected\/projectedvalue","title":"projectedValue","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Injected\/projectedValue","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Injected","preciseIdentifier":"s:7Factory8InjectedV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/Injected":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Injected","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Injected"}],"url":"\/documentation\/factory\/injected","kind":"symbol","title":"Injected","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Injected"}]}}}