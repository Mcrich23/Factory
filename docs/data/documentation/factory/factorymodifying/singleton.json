{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" }"}]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"sections":[],"metadata":{"title":"singleton","modules":[{"name":"Factory"}],"roleHeading":"Instance Property","extendedModule":"Factory","symbolKind":"property","externalID":"s:7Factory0A9ModifyingPAAE9singletonxvp","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factorymodifying\/singleton"]}],"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/FactoryModifying":{"abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}],"url":"\/documentation\/factory\/factorymodifying","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","kind":"symbol","title":"FactoryModifying"},"doc://Factory/documentation/Factory/FactoryModifying/singleton":{"type":"topic","url":"\/documentation\/factory\/factorymodifying\/singleton","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","title":"singleton","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","type":"reference","isActive":true},{"type":"text","text":"."}],"role":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"kind":"symbol","role":"symbol","title":"Scope.Singleton","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class"}}}