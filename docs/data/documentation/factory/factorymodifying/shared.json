{"variants":[{"paths":["\/documentation\/factory\/factorymodifying\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Factory0A9ModifyingPAAE6sharedxvp","role":"symbol","roleHeading":"Instance Property","extendedModule":"Factory","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"symbolKind":"property","title":"shared","modules":[{"name":"Factory"}]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"code":["var service: Factory<ServiceType> {","    self { MyService() }","        .shared","}"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class"},{"text":".","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/shared"},"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/FactoryModifying/shared":{"kind":"symbol","url":"\/documentation\/factory\/factorymodifying\/shared","title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/shared","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","isActive":true,"type":"reference"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","type":"topic"},"doc://Factory/documentation/Factory/FactoryModifying":{"role":"symbol","abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryModifying"}],"kind":"symbol","type":"topic","url":"\/documentation\/factory\/factorymodifying","title":"FactoryModifying","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}]},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"type":"topic","url":"\/documentation\/factory\/scope\/shared-swift.class"}}}