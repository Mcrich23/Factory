{"metadata":{"role":"symbol","extendedModule":"Factory","modules":[{"name":"Factory"}],"title":"shared","roleHeading":"Instance Property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"externalID":"s:7Factory0A9ModifyingPAAE6sharedxvp","symbolKind":"property"},"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","isActive":true,"type":"reference"},{"type":"text","text":"."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .shared","}"],"type":"codeListing"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/shared","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/factory\/factorymodifying\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/shared":{"kind":"symbol","role":"symbol","url":"\/documentation\/factory\/factorymodifying\/shared","title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/shared","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","isActive":true},{"text":".","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/shared-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","title":"Scope.Shared","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"navigatorTitle":[{"text":"Shared","kind":"identifier"}],"kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","url":"\/documentation\/factory\/factorymodifying","title":"FactoryModifying","type":"topic","navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryModifying"}],"abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"role":"symbol"}}}