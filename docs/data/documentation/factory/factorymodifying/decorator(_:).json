{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/decorator(_:)","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying"]]},"abstract":[{"text":"Adds a factory specific decorator. The decorator will ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"text":"for further examination or manipulation.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"method","roleHeading":"Instance Method","title":"decorator(_:)","modules":[{"name":"Factory"}],"externalID":"s:7Factory0A9ModifyingPAAE9decoratoryxy1TQzYbcF","extendedModule":"Factory","role":"symbol"},"variants":[{"paths":["\/documentation\/factory\/factorymodifying\/decorator(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decorator","kind":"internalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" ("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier","text":"T"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This includes previously created items that may have been cached by a scope."}],"type":"paragraph"},{"type":"codeListing","code":["var decoratedService: Factory<ParentChildService> {","   self { ParentChildService() }","       .decorated {","           $0.child.parent = $0","       }","}"],"syntax":"swift"},{"inlineContent":[{"text":"As shown, decorator can come in handy when you need to perform some operation or manipulation after the fact.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"kind":"symbol","references":{"doc://Factory/documentation/Factory/FactoryModifying/T":{"role":"symbol","abstract":[{"type":"text","text":"The return type of the Factory’s dependency."}],"title":"T","url":"\/documentation\/factory\/factorymodifying\/t","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","type":"topic","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"T","kind":"identifier"}],"required":true},"doc://Factory/documentation/Factory/FactoryModifying":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","url":"\/documentation\/factory\/factorymodifying","title":"FactoryModifying","type":"topic","navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryModifying"}],"abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"role":"symbol"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/decorator(_:)":{"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/decorator(_:)","abstract":[{"text":"Adds a factory specific decorator. The decorator will ","type":"text"},{"inlineContent":[{"type":"text","text":"always"}],"type":"emphasis"},{"text":" be called with the resolved dependency","type":"text"},{"type":"text","text":" "},{"text":"for further examination or manipulation.","type":"text"}],"kind":"symbol","url":"\/documentation\/factory\/factorymodifying\/decorator(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"title":"decorator(_:)","role":"symbol"}}}