{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/InjectedObservable"]]},"metadata":{"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"17.0","name":"iOS"},{"name":"macOS","beta":false,"introducedAt":"14.0","unavailable":false,"deprecated":false},{"deprecated":false,"beta":false,"unavailable":false,"introducedAt":"17.0","name":"tvOS"},{"deprecated":false,"introducedAt":"10.0","unavailable":false,"beta":false,"name":"watchOS"}],"externalID":"s:7Factory18InjectedObservableVyACyxGs7KeyPathCyAA9ContainerCA2AVyxGGcfc","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"KeyPath","preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Container","preciseIdentifier":"s:7Factory9ContainerC"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"title":"init(_:)","roleHeading":"Initializer","symbolKind":"init","role":"symbol","modules":[{"name":"Factory"}]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/InjectedObservable\/init(_:)-715un","interfaceLanguage":"swift"},"abstract":[{"text":"Initializes the ","type":"text"},{"code":"InjectedObservable","type":"codeVoice"},{"type":"text","text":" property wrapper, resolving the dependency from the default container."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","preciseIdentifier":"s:ScM","text":"MainActor"},{"kind":"text","text":" "},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"keyPath"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Container","preciseIdentifier":"s:7Factory9ContainerC","identifier":"doc:\/\/Factory\/documentation\/Factory\/Container"},{"text":", ","kind":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">>)","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"keyPath","content":[{"inlineContent":[{"text":"A key path to a ","type":"text"},{"code":"Factory","type":"codeVoice"},{"type":"text","text":" on the default "},{"code":"Container","type":"codeVoice"},{"text":" that resolves the dependency.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Example Usage:"}],"type":"strong"}]},{"type":"codeListing","syntax":"swift","code":["@InjectedObservable(\\.contentViewModel) var viewModel: ContentViewModel"]}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/injectedobservable\/init(_:)-715un"]}],"references":{"doc://Factory/documentation/Factory/Container":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Container"}],"abstract":[{"text":"This is the default Container provided for your convenience by Factory.","type":"text"}],"role":"symbol","url":"\/documentation\/factory\/container","title":"Container","kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic"},"doc://Factory/documentation/Factory/InjectedObservable/init(_:)-715un":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Container","preciseIdentifier":"s:7Factory9ContainerC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">>)"}],"type":"topic","url":"\/documentation\/factory\/injectedobservable\/init(_:)-715un","title":"init(_:)","abstract":[{"text":"Initializes the ","type":"text"},{"type":"codeVoice","code":"InjectedObservable"},{"text":" property wrapper, resolving the dependency from the default container.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/InjectedObservable\/init(_:)-715un","role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/InjectedObservable":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"InjectedObservable","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/InjectedObservable","url":"\/documentation\/factory\/injectedobservable","kind":"symbol","role":"symbol","title":"InjectedObservable","navigatorTitle":[{"kind":"identifier","text":"InjectedObservable"}],"type":"topic","abstract":[{"text":"A property wrapper that injects an Observable dependency into a SwiftUI view.","type":"text"}]},"doc://Factory/documentation/Factory/Factory":{"url":"\/documentation\/factory\/factory","kind":"symbol","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Factory"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"}}}