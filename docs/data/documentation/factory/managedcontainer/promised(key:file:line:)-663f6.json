{"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:file:line:)-663f6","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"abstract":[{"text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution.","type":"text"}],"variants":[{"paths":["\/documentation\/factory\/managedcontainer\/promised(key:file:line:)-663f6"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Factory"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V","text":"ParameterFactory"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"externalID":"s:7Factory16ManagedContainerPAAE8promised3key4file4lineAA09ParameterA0Vyqd__qd_0_SgGs12StaticStringV_AMSutr0_lF","title":"promised(key:file:line:)","extendedModule":"Factory"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"externalParam","text":"key"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":" = "},{"text":"#function","kind":"keyword"},{"kind":"text","text":", "},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"kind":"keyword","text":"#file"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"kind":"text","text":" = "},{"text":"#line","kind":"keyword"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory","text":"ParameterFactory","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA0V"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"codeListing","code":["extension Container {","    public var accountLoader: Factory<Int, AccountLoading?> { _ in promised() }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"When run in debug mode and the application attempts to resolve an unregistered accountLoader, ","type":"text"},{"type":"codeVoice","code":"promised()"},{"text":" will trigger a fatalError to","type":"text"},{"type":"text","text":" "},{"type":"text","text":"inform you of the mistake. But in a released application, "},{"code":"promised()","type":"codeVoice"},{"text":" simply returns nil and your application can continue on.","type":"text"}]}],"kind":"content"}],"references":{"doc://Factory/documentation/Factory/ManagedContainer":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","url":"\/documentation\/factory\/managedcontainer","role":"symbol","kind":"symbol","title":"ManagedContainer","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}]},"doc://Factory/documentation/Factory/ManagedContainer/promised(key:file:line:)-663f6":{"type":"topic","role":"symbol","url":"\/documentation\/factory\/managedcontainer\/promised(key:file:line:)-663f6","kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:file:line:)-663f6","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA0V","kind":"typeIdentifier","text":"ParameterFactory"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}],"title":"promised(key:file:line:)"},"doc://Factory/documentation/Factory/ParameterFactory":{"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"url":"\/documentation\/factory\/parameterfactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"}}}