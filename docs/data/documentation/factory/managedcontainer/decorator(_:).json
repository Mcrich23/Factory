{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"kind":"symbol","metadata":{"modules":[{"name":"Factory"}],"externalID":"s:7Factory16ManagedContainerPAAE9decoratoryyyypcSgF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"role":"symbol","extendedModule":"Factory","roleHeading":"Instance Method","symbolKind":"method","title":"decorator(_:)"},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/factory\/managedcontainer\/decorator(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"decorator","kind":"internalParam"},{"kind":"text","text":": (("},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Factory/documentation/Factory/ManagedContainer":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","url":"\/documentation\/factory\/managedcontainer","role":"symbol","kind":"symbol","title":"ManagedContainer","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/ManagedContainer/decorator(_:)":{"type":"topic","role":"symbol","url":"\/documentation\/factory\/managedcontainer\/decorator(_:)","kind":"symbol","abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"title":"decorator(_:)"}}}