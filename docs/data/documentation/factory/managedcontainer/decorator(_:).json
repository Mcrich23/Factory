{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decorator","kind":"internalParam"},{"text":": ((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}]}],"kind":"declarations"}],"kind":"symbol","abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"symbolKind":"method","externalID":"s:7Factory16ManagedContainerPAAE9decoratoryyyypcSgF","title":"decorator(_:)","extendedModule":"Factory","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Factory"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/managedcontainer\/decorator(_:)"]}],"references":{"doc://Factory/documentation/Factory/ManagedContainer":{"type":"topic","role":"symbol","title":"ManagedContainer","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"url":"\/documentation\/factory\/managedcontainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","kind":"symbol","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}]},"doc://Factory/documentation/Factory/ManagedContainer/decorator(_:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","title":"decorator(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"((("},{"kind":"keyword","text":"Any"},{"kind":"text","text":") -> ())?)"}],"url":"\/documentation\/factory\/managedcontainer\/decorator(_:)","kind":"symbol","abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"type":"topic"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}