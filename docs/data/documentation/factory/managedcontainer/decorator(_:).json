{"metadata":{"role":"symbol","title":"decorator(_:)","externalID":"s:7Factory16ManagedContainerPAAE9decoratoryyyypcSgF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"((("},{"kind":"keyword","text":"Any"},{"kind":"text","text":") -> ())?)"}],"extendedModule":"Factory","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Factory"}]},"abstract":[{"text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/managedcontainer\/decorator(_:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"decorator"},{"kind":"text","text":": (("},{"kind":"keyword","text":"Any"},{"text":") -> ())?)","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"references":{"doc://Factory/documentation/Factory/ManagedContainer":{"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"title":"ManagedContainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","url":"\/documentation\/factory\/managedcontainer"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer/decorator(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"kind":"text","text":"((("},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"title":"decorator(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","type":"topic","url":"\/documentation\/factory\/managedcontainer\/decorator(_:)"}}}