{"sections":[],"abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decorator","kind":"internalParam"},{"text":": ((","kind":"text"},{"kind":"keyword","text":"Any"},{"text":") -> ())?)","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/managedcontainer\/decorator(_:)"]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"extendedModule":"Factory","symbolKind":"method","roleHeading":"Instance Method","title":"decorator(_:)","modules":[{"name":"Factory"}],"externalID":"s:7Factory16ManagedContainerPAAE9decoratoryyyypcSgF","role":"symbol"},"references":{"doc://Factory/documentation/Factory/ManagedContainer":{"title":"ManagedContainer","url":"\/documentation\/factory\/managedcontainer","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"kind":"symbol"},"doc://Factory/documentation/Factory/ManagedContainer/decorator(_:)":{"url":"\/documentation\/factory\/managedcontainer\/decorator(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"((("},{"text":"Any","kind":"keyword"},{"kind":"text","text":") -> ())?)"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"title":"decorator(_:)","role":"symbol"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"}}}