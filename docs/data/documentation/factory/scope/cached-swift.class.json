{"topicSections":[{"generated":true,"anchor":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class\/init()"],"title":"Initializers"}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope"],"type":"inheritsFrom"},{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/Factory\/s8SendableP"]}],"seeAlsoSections":[{"title":"Scope Class Definitions","generated":true,"anchor":"Scope-Class-Definitions","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"]}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Cached","kind":"identifier"}]}]}],"variants":[{"paths":["\/documentation\/factory\/scope\/cached-swift.class"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"externalID":"s:7Factory5ScopeC6CachedC","title":"Scope.Cached","roleHeading":"Class","role":"symbol","modules":[{"name":"Factory"}],"extendedModule":"Factory","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Cached"}],"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"symbolKind":"class"},"kind":"symbol","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scope"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://Factory/documentation/Factory/Scope/Cached-swift.class/init()":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class\/init()","type":"topic","kind":"symbol","abstract":[],"title":"init()","url":"\/documentation\/factory\/scope\/cached-swift.class\/init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Graph"}],"role":"symbol","url":"\/documentation\/factory\/scope\/graph-swift.class","title":"Scope.Graph","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Graph"}]},"doc://Factory/documentation/Factory/Scope":{"type":"topic","role":"symbol","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"role":"symbol","url":"\/documentation\/factory\/scope\/cached-swift.class","title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}]},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"navigatorTitle":[{"text":"Unique","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","kind":"symbol","abstract":[{"text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle.","type":"text"}],"url":"\/documentation\/factory\/scope\/unique-swift.class","title":"Scope.Unique","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Unique","kind":"identifier"}],"role":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"url":"\/documentation\/factory\/scope\/singleton-swift.class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}]},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/shared-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","title":"Scope.Shared","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"navigatorTitle":[{"text":"Shared","kind":"identifier"}],"kind":"symbol"},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}