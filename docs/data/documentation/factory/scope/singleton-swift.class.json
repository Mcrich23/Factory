{"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class\/init()"],"title":"Initializers","anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class\/reset()"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/Factory\/s8SendableP"]}],"seeAlsoSections":[{"anchor":"Scope-Class-Definitions","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope","doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"title":"Scope Class Definitions","generated":true}],"metadata":{"role":"symbol","externalID":"s:7Factory5ScopeC9SingletonC","roleHeading":"Class","title":"Scope.Singleton","extendedModule":"Factory","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Singleton"}],"modules":[{"name":"Factory"}]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"kind":"text","text":" "},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/scope\/singleton-swift.class"]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scope"]]},"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Factory/documentation/Factory/Scope/Singleton-swift.class/init()":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"abstract":[],"type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class\/init()","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class\/init()","kind":"symbol","title":"init()","role":"symbol"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class/reset()":{"url":"\/documentation\/factory\/scope\/singleton-swift.class\/reset()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"()"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class\/reset()","kind":"symbol","title":"reset()","abstract":[{"text":"Reset","type":"text"}]},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Graph"}],"role":"symbol","url":"\/documentation\/factory\/scope\/graph-swift.class","title":"Scope.Graph","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Graph"}]},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/shared-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","title":"Scope.Shared","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Shared","kind":"identifier"}],"navigatorTitle":[{"text":"Shared","kind":"identifier"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"navigatorTitle":[{"text":"Unique","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","kind":"symbol","abstract":[{"text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle.","type":"text"}],"url":"\/documentation\/factory\/scope\/unique-swift.class","title":"Scope.Unique","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Unique","kind":"identifier"}],"role":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"url":"\/documentation\/factory\/scope\/singleton-swift.class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}]},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"role":"symbol","url":"\/documentation\/factory\/scope\/cached-swift.class","title":"Scope.Cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}]},"doc://Factory/documentation/Factory/Scope":{"type":"topic","role":"symbol","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}]}}}