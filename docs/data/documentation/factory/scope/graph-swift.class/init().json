{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scope","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class"]]},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"override"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"title":"init()","symbolKind":"init","externalID":"s:7Factory5ScopeC5GraphCAEycfc","roleHeading":"Initializer","role":"symbol","modules":[{"name":"Factory"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class\/init()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/factory\/scope\/graph-swift.class\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory/Scope/Graph-swift.class/init()":{"role":"symbol","title":"init()","type":"topic","abstract":[],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class\/init()","url":"\/documentation\/factory\/scope\/graph-swift.class\/init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"url":"\/documentation\/factory\/scope\/graph-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Graph"}],"title":"Scope.Graph"},"doc://Factory/documentation/Factory/Scope":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"title":"Scope","type":"topic","role":"symbol"}}}