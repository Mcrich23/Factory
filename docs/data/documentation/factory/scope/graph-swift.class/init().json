{"metadata":{"roleHeading":"Initializer","modules":[{"name":"Factory"}],"symbolKind":"init","title":"init()","externalID":"s:7Factory5ScopeC5GraphCAEycfc","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scope","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class"]]},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/scope\/graph-swift.class\/init()"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"override","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"()","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class\/init()"},"references":{"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"kind":"symbol","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"navigatorTitle":[{"kind":"identifier","text":"Graph"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Graph","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","url":"\/documentation\/factory\/scope\/graph-swift.class","type":"topic","role":"symbol","title":"Scope.Graph"},"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","title":"Scope","type":"topic","url":"\/documentation\/factory\/scope","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}]},"doc://Factory/documentation/Factory/Scope/Graph-swift.class/init()":{"role":"symbol","title":"init()","kind":"symbol","abstract":[],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class\/init()","url":"\/documentation\/factory\/scope\/graph-swift.class\/init()","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"}}}