{"metadata":{"symbolKind":"method","externalID":"s:7Factory5ScopeC9SingletonC5resetyyF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"Factory"}],"role":"symbol","roleHeading":"Instance Method","title":"reset()"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"()","kind":"text"}],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scope","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class"]]},"abstract":[{"type":"text","text":"Reset"}],"variants":[{"paths":["\/documentation\/factory\/scope\/singleton-swift.class\/reset()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class\/reset()"},"references":{"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"url":"\/documentation\/factory\/scope\/singleton-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","title":"Scope.Singleton","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Singleton","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class/reset()":{"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Reset"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"text":"()","kind":"text"}],"url":"\/documentation\/factory\/scope\/singleton-swift.class\/reset()","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class\/reset()","title":"reset()"},"doc://Factory/documentation/Factory/Scope":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"type":"topic","role":"symbol","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"text":".","type":"text"}],"kind":"symbol"}}}