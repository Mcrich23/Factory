{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scope","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class"]]},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class\/init()","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"override"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/scope\/shared-swift.class\/init()"]}],"metadata":{"roleHeading":"Initializer","modules":[{"name":"Factory"}],"title":"init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"externalID":"s:7Factory5ScopeC6SharedCAEycfc","symbolKind":"init"},"sections":[],"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/Scope":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"title":"Scope","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"type":"topic","url":"\/documentation\/factory\/scope\/shared-swift.class"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class/init()":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class\/init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/factory\/scope\/shared-swift.class\/init()","title":"init()","kind":"symbol","type":"topic","abstract":[]}}}