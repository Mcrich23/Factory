{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","text":"Scope"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Singleton","preciseIdentifier":"s:7Factory5ScopeC9SingletonC","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/scope\/singleton-swift.type.property"]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Scope"]]},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"text":"Singleton","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC9SingletonC"}],"extendedModule":"Factory","modules":[{"name":"Factory"}],"symbolKind":"property","role":"symbol","externalID":"s:7Factory5ScopeC9singletonAC9SingletonCvpZ","roleHeading":"Type Property","title":"singleton"},"references":{"doc://Factory/documentation/Factory/Scope/singleton-swift.type.property":{"kind":"symbol","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Singleton","preciseIdentifier":"s:7Factory5ScopeC9SingletonC"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","url":"\/documentation\/factory\/scope\/singleton-swift.type.property","type":"topic","role":"symbol","title":"singleton"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"kind":"symbol","role":"symbol","title":"Scope.Singleton","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class"},"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","title":"Scope","type":"topic","url":"\/documentation\/factory\/scope","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"}}}