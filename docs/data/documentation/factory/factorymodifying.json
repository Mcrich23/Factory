{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","interfaceLanguage":"swift"},"abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"topicSections":[{"title":"Associated Types","generated":true,"anchor":"Associated-Types","identifiers":["doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/P","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T"]},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/cached","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/graph","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/registration","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/shared","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/unique"]},{"generated":true,"identifiers":["doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/context(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onArg(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onArgs(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onDebug(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onDevice(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onPreview(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onSimulator(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onTest(factory:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/once()","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/reset(_:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/scope(_:)","doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/timeToLive(_:)"],"anchor":"Instance-Methods","title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Factory","doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"],"type":"conformingTypes","kind":"relationships","title":"Conforming Types"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"FactoryModifying"}],"role":"symbol","roleHeading":"Protocol","symbolKind":"protocol","modules":[{"name":"Factory"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FactoryModifying"}],"externalID":"s:7Factory0A9ModifyingP","title":"FactoryModifying"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"FactoryModifying"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/factory\/factorymodifying"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory/FactoryModifying/P":{"title":"P","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"kind":"identifier","text":"P"}],"kind":"symbol","abstract":[{"type":"text","text":"The parameter type of the Factory, if any. Will be "},{"type":"codeVoice","code":"Void"},{"text":" on the standard Factory.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/P","required":true,"url":"\/documentation\/factory\/factorymodifying\/p","type":"topic"},"doc://Factory/documentation/Factory/FactoryModifying/cached":{"role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","type":"reference"},{"type":"text","text":"."}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"cached","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factorymodifying\/cached","title":"cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/cached","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/onDevice(factory:)":{"role":"symbol","abstract":[{"text":"Factory builder shortcut for context(.device) { .. }","type":"text"}],"type":"topic","url":"\/documentation\/factory\/factorymodifying\/ondevice(factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onDevice(factory:)","kind":"symbol","title":"onDevice(factory:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onDevice"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/Factory":{"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","url":"\/documentation\/factory\/factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"title":"Factory","role":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/decorator(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"text":" be called with the resolved dependency","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"for further examination or manipulation."}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"decorator"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/decorator(_:)","title":"decorator(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/decorator(_:)","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"url":"\/documentation\/factory\/scope\/singleton-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","title":"Scope.Singleton","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Singleton","kind":"identifier"}]},"doc://Factory/documentation/Factory/FactoryModifying/timeToLive(_:)":{"title":"timeToLive(_:)","type":"topic","kind":"symbol","url":"\/documentation\/factory\/factorymodifying\/timetolive(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"timeToLive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"TimeInterval","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSTimeInterval"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/timeToLive(_:)","abstract":[{"text":"Adds time to live option for scopes. If the dependency has been cached for longer than the timeToLive period the","type":"text"},{"text":" ","type":"text"},{"text":"cached item will be discarded and a new instance created.","type":"text"}]},"doc://Factory/documentation/Factory/FactoryModifying/T":{"role":"symbol","kind":"symbol","abstract":[{"text":"The return type of the Factory’s dependency.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/T","url":"\/documentation\/factory\/factorymodifying\/t","required":true,"fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"T","kind":"identifier"}],"title":"T","type":"topic"},"doc://Factory/documentation/Factory/FactoryModifying/graph":{"role":"symbol","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be graph. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/factory\/factorymodifying\/graph","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/graph","kind":"symbol","title":"graph","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"graph","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/ParameterFactory":{"abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"url":"\/documentation\/factory\/parameterfactory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ParameterFactory","kind":"identifier"}],"title":"ParameterFactory","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ParameterFactory"},"doc://Factory/documentation/Factory/FactoryModifying/context(_:factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/context(_:factory:)","role":"symbol","title":"context(_:factory:)","type":"topic","url":"\/documentation\/factory\/factorymodifying\/context(_:factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"context"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A11ContextTypeO","text":"FactoryContextType"},{"kind":"text","text":"..., "},{"kind":"externalParam","text":"factory"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","kind":"typeIdentifier","text":"ParameterFactoryType"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","abstract":[{"text":"Registers a factory closure to be used only when running in a specific context.","type":"text"}]},"doc://Factory/documentation/Factory/FactoryModifying":{"title":"FactoryModifying","role":"symbol","navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"FactoryModifying"}],"kind":"symbol","abstract":[{"text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying","url":"\/documentation\/factory\/factorymodifying","type":"topic"},"doc://Factory/documentation/Factory/FactoryModifying/scope(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Defines a dependency scope for this Factory. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factorymodifying\/scope(_:)","title":"scope(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/scope(_:)","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"navigatorTitle":[{"kind":"identifier","text":"Cached"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"title":"Scope.Cached","kind":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/cached-swift.class","abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/onArgs(_:factory:)":{"role":"symbol","abstract":[{"type":"text","text":"Factory builder shortcut for context(.args[“test1”,“test2”) { .. }"}],"type":"topic","url":"\/documentation\/factory\/factorymodifying\/onargs(_:factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onArgs(_:factory:)","kind":"symbol","title":"onArgs(_:factory:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onArgs","kind":"identifier"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"], ","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/FactoryModifying/onSimulator(factory:)":{"title":"onSimulator(factory:)","abstract":[{"type":"text","text":"Factory builder shortcut for context(.simulator) { .. }"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onSimulator"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onSimulator(factory:)","type":"topic","role":"symbol","url":"\/documentation\/factory\/factorymodifying\/onsimulator(factory:)","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/registration":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"registration"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12RegistrationV","text":"FactoryRegistration"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"registration","url":"\/documentation\/factory\/factorymodifying\/registration","abstract":[{"type":"text","text":"Internal information that describes this Factory."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/registration","required":true,"role":"symbol"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"navigatorTitle":[{"kind":"identifier","text":"Graph"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"title":"Scope.Graph","kind":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/graph-swift.class","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","role":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/once()":{"title":"once()","url":"\/documentation\/factory\/factorymodifying\/once()","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/once()","abstract":[{"text":"Adds ability to mutate Factory on first instantiation only.","type":"text"}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"once"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/FactoryModifying/onDebug(factory:)":{"role":"symbol","abstract":[{"type":"text","text":"Factory builder shortcut for context(.debug) { .. }"}],"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onDebug"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","kind":"typeIdentifier","text":"ParameterFactoryType"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/ondebug(factory:)","title":"onDebug(factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onDebug(factory:)","kind":"symbol"},"doc://Factory/documentation/Factory/Scope":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"type":"topic","role":"symbol","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"text":".","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/unique":{"type":"topic","role":"symbol","title":"unique","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/unique","abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unique"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/unique"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"type":"topic","role":"symbol","title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/shared":{"role":"symbol","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/factory\/factorymodifying\/shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/shared","kind":"symbol","title":"shared","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/FactoryModifying/reset(_:)":{"url":"\/documentation\/factory\/factorymodifying\/reset(_:)","type":"topic","kind":"symbol","abstract":[{"text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/reset(_:)","title":"reset(_:)"},"doc://Factory/documentation/Factory/FactoryModifying/onPreview(factory:)":{"abstract":[{"text":"Factory builder shortcut for context(.preview) { .. }","type":"text"}],"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onPreview(factory:)","url":"\/documentation\/factory\/factorymodifying\/onpreview(factory:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onPreview","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ParameterFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","kind":"symbol","title":"onPreview(factory:)"},"doc://Factory/documentation/Factory/FactoryModifying/singleton":{"role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factorymodifying\/singleton","title":"singleton","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/singleton","kind":"symbol"},"doc://Factory/documentation/Factory/FactoryModifying/onTest(factory:)":{"type":"topic","role":"symbol","abstract":[{"text":"Factory builder shortcut for context(.test) { .. }","type":"text"}],"title":"onTest(factory:)","kind":"symbol","url":"\/documentation\/factory\/factorymodifying\/ontest(factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onTest(factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onTest","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ParameterFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/FactoryModifying/onArg(_:factory:)":{"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryModifying\/onArg(_:factory:)","kind":"symbol","title":"onArg(_:factory:)","url":"\/documentation\/factory\/factorymodifying\/onarg(_:factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onArg"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ParameterFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Factory builder shortcut for context(.arg(“test”) { .. }"}],"type":"topic"}}}