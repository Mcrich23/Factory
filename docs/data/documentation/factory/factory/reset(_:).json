{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"abstract":[{"text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope.","type":"text"}],"variants":[{"paths":["\/documentation\/factory\/factory\/reset(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"options","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FactoryResetOptions","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"text":" = .all) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"options","content":[{"inlineContent":[{"type":"text","text":"Options description"}],"type":"paragraph"}]}]}],"metadata":{"extendedModule":"Factory","title":"reset(_:)","modules":[{"name":"Factory"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Method","externalID":"s:7Factory0A9ModifyingPAAE5resetyxAA0A12ResetOptionsOF::SYNTHESIZED::s:7FactoryAAV","role":"symbol"},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/reset(_:)","interfaceLanguage":"swift"},"kind":"symbol","references":{"doc://Factory/documentation/Factory/Factory/reset(_:)":{"type":"topic","url":"\/documentation\/factory\/factory\/reset(_:)","abstract":[{"type":"text","text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope."}],"title":"reset(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7Factory0A12ResetOptionsO","text":"FactoryResetOptions","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/reset(_:)","kind":"symbol"},"doc://Factory/documentation/Factory/Factory":{"url":"\/documentation\/factory\/factory","kind":"symbol","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Factory"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory/FactoryResetOptions":{"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/FactoryResetOptions","navigatorTitle":[{"text":"FactoryResetOptions","kind":"identifier"}],"url":"\/documentation\/factory\/factoryresetoptions","title":"FactoryResetOptions","abstract":[{"text":"Reset options for Factory’s and Container’s","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"FactoryResetOptions","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"}}}