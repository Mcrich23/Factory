{"metadata":{"roleHeading":"API Collection","role":"collectionGroup","title":"FactoryModifying Implementations","modules":[{"name":"Factory"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/FactoryModifying-Implementations"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"kind":"article","topicSections":[{"generated":true,"title":"Instance Properties","anchor":"Instance-Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Factory\/cached","doc:\/\/Factory\/documentation\/Factory\/Factory\/graph","doc:\/\/Factory\/documentation\/Factory\/Factory\/shared","doc:\/\/Factory\/documentation\/Factory\/Factory\/singleton","doc:\/\/Factory\/documentation\/Factory\/Factory\/unique"]},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Factory\/context(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onArg(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onArgs(_:factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onDebug(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onDevice(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onPreview(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onSimulator(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/onTest(factory:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/once()","doc:\/\/Factory\/documentation\/Factory\/Factory\/reset(_:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/scope(_:)","doc:\/\/Factory\/documentation\/Factory\/Factory\/timeToLive(_:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/factorymodifying-implementations"]}],"references":{"doc://Factory/documentation/Factory/Factory/shared":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/shared","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/factory\/factory\/shared"},"doc://Factory/documentation/Factory/Factory/singleton":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/singleton","url":"\/documentation\/factory\/factory\/singleton","title":"singleton","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","isActive":true},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"singleton","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}]},"doc://Factory/documentation/Factory/Factory/onPreview(factory:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onPreview(factory:)","abstract":[{"text":"Factory builder shortcut for context(.preview) { .. }","type":"text"}],"url":"\/documentation\/factory\/factory\/onpreview(factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onPreview","kind":"identifier"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ParameterFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"onPreview(factory:)","type":"topic"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"navigatorTitle":[{"kind":"identifier","text":"Cached"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"Cached","kind":"identifier"}],"title":"Scope.Cached","kind":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/cached-swift.class","abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","role":"symbol"},"doc://Factory/documentation/Factory/Factory/decorator(_:)":{"title":"decorator(_:)","kind":"symbol","abstract":[{"type":"text","text":"Adds a factory specific decorator. The decorator will "},{"type":"emphasis","inlineContent":[{"type":"text","text":"always"}]},{"text":" be called with the resolved dependency","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for further examination or manipulation."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/decorator(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"text":"((","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factory\/factory\/decorator(_:)","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/Factory/timeToLive(_:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/timeToLive(_:)","abstract":[{"text":"Adds time to live option for scopes. If the dependency has been cached for longer than the timeToLive period the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"cached item will be discarded and a new instance created."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"timeToLive"},{"text":"(","kind":"text"},{"text":"TimeInterval","preciseIdentifier":"c:@T@NSTimeInterval","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factory\/timetolive(_:)","title":"timeToLive(_:)","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/onDebug(factory:)":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/factory\/factory\/ondebug(factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onDebug(factory:)","title":"onDebug(factory:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onDebug","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","kind":"typeIdentifier","text":"ParameterFactoryType"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Factory builder shortcut for context(.debug) { .. }"}]},"doc://Factory/documentation/Factory/Factory/cached":{"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","title":"cached","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/cached","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","type":"reference"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","url":"\/documentation\/factory\/factory\/cached"},"doc://Factory/documentation/Factory/Scope":{"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"type":"topic","role":"symbol","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"text":".","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Factory/reset(_:)":{"abstract":[{"text":"Resets the Factory’s behavior to its original state, removing any registrations and clearing any cached items from the specified scope.","type":"text"}],"title":"reset(_:)","url":"\/documentation\/factory\/factory\/reset(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO","text":"FactoryResetOptions"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/reset(_:)"},"doc://Factory/documentation/Factory/Factory/onTest(factory:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onTest(factory:)","abstract":[{"type":"text","text":"Factory builder shortcut for context(.test) { .. }"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"onTest"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ParameterFactoryType","preciseIdentifier":"s:7Factory09ParameterA4Typea","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factory\/ontest(factory:)","title":"onTest(factory:)","kind":"symbol"},"doc://Factory/documentation/Factory/Factory/graph":{"title":"graph","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be graph. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"graph","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factory\/graph","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/graph"},"doc://Factory/documentation/Factory/Factory/unique":{"kind":"symbol","role":"symbol","type":"topic","title":"unique","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/unique","abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"isActive":true,"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope"},{"text":".","type":"text"}],"url":"\/documentation\/factory\/factory\/unique","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/Factory/once()":{"role":"symbol","abstract":[{"type":"text","text":"Adds ability to mutate Factory on first instantiation only."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/once()","kind":"symbol","url":"\/documentation\/factory\/factory\/once()","title":"once()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"once"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/Factory/onArg(_:factory:)":{"abstract":[{"type":"text","text":"Factory builder shortcut for context(.arg(“test”) { .. }"}],"kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onArg","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"text":"T","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onArg(_:factory:)","url":"\/documentation\/factory\/factory\/onarg(_:factory:)","type":"topic","title":"onArg(_:factory:)"},"doc://Factory/documentation/Factory/Factory/onArgs(_:factory:)":{"kind":"symbol","url":"\/documentation\/factory\/factory\/onargs(_:factory:)","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onArgs(_:factory:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onArgs","kind":"identifier"},{"text":"([","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ParameterFactoryType","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"text":"Factory builder shortcut for context(.args[“test1”,“test2”) { .. }","type":"text"}],"title":"onArgs(_:factory:)","type":"topic"},"doc://Factory/documentation/Factory/Factory":{"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","url":"\/documentation\/factory\/factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"title":"Factory","role":"symbol"},"doc://Factory/documentation/Factory/Factory/onSimulator(factory:)":{"kind":"symbol","url":"\/documentation\/factory\/factory\/onsimulator(factory:)","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onSimulator(factory:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"onSimulator","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"text":"ParameterFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"text":"Factory builder shortcut for context(.simulator) { .. }","type":"text"}],"title":"onSimulator(factory:)","type":"topic"},"doc://Factory/documentation/Factory/Factory/scope(_:)":{"title":"scope(_:)","abstract":[{"type":"text","text":"Defines a dependency scope for this Factory. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scope"},{"kind":"text","text":"("},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/scope(_:)","type":"topic","role":"symbol","url":"\/documentation\/factory\/factory\/scope(_:)","kind":"symbol"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"type":"topic","role":"symbol","title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"kind":"symbol"},"doc://Factory/documentation/Factory/Factory/onDevice(factory:)":{"type":"topic","abstract":[{"type":"text","text":"Factory builder shortcut for context(.device) { .. }"}],"role":"symbol","title":"onDevice(factory:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onDevice"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"T","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A9ModifyingP1TQa"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/onDevice(factory:)","url":"\/documentation\/factory\/factory\/ondevice(factory:)","kind":"symbol"},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"url":"\/documentation\/factory\/scope\/singleton-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","title":"Scope.Singleton","abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Singleton","kind":"identifier"}]},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"navigatorTitle":[{"kind":"identifier","text":"Graph"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"title":"Scope.Graph","kind":"symbol","type":"topic","url":"\/documentation\/factory\/scope\/graph-swift.class","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","role":"symbol"},"doc://Factory/documentation/Factory/Factory/context(_:factory:)":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/context(_:factory:)","abstract":[{"type":"text","text":"Registers a factory closure to be used only when running in a specific context."}],"url":"\/documentation\/factory\/factory\/context(_:factory:)","kind":"symbol","role":"symbol","title":"context(_:factory:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"context","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:7Factory0A11ContextTypeO","kind":"typeIdentifier","text":"FactoryContextType"},{"kind":"text","text":"..., "},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory09ParameterA4Typea","text":"ParameterFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"text":"P","preciseIdentifier":"s:7Factory0A9ModifyingP1PQa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory0A9ModifyingP1TQa","kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}]}}}