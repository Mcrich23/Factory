{"variants":[{"paths":["\/documentation\/factory\/factory\/unique"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"metadata":{"title":"unique","role":"symbol","modules":[{"name":"Factory"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unique"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"roleHeading":"Instance Property","externalID":"s:7Factory0A9ModifyingPAAE6uniquexvp::SYNTHESIZED::s:7FactoryAAV","extendedModule":"Factory","symbolKind":"property"},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/unique","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Syntactic sugar defines defines unique scope. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","isActive":true,"type":"reference"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"unique","kind":"identifier"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" }","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .unique","}"],"syntax":"swift"},{"inlineContent":[{"text":"While you can add the modifier, Factoryâ€™s are unique by default.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/Scope":{"type":"topic","role":"symbol","title":"Scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"url":"\/documentation\/factory\/scope","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Factory/documentation/Factory/Factory":{"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","title":"Factory","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"url":"\/documentation\/factory\/factory","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory/Factory/unique":{"title":"unique","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factory\/factory\/unique","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/unique","abstract":[{"text":"Syntactic sugar defines defines unique scope. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","type":"reference"},{"text":".","type":"text"}]}}}