{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/cached"},"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    factory { MyService() }","        .cached","}"]}]}],"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/factory\/cached"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cached","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","modules":[{"name":"Factory"}],"title":"cached","roleHeading":"Instance Property","extendedModule":"Factory","externalID":"s:7Factory0A9ModifyingPAAE6cachedxvp::SYNTHESIZED::s:7FactoryAAV"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://Factory/documentation/Factory/Factory/cached":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/cached","url":"\/documentation\/factory\/factory\/cached","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","title":"cached","type":"topic","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be cached. See "},{"type":"reference","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","isActive":true},{"type":"text","text":"."}]},"doc://Factory/documentation/Factory/Factory":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"title":"Factory","role":"symbol","url":"\/documentation\/factory\/factory","type":"topic"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"title":"Scope.Cached","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"url":"\/documentation\/factory\/scope\/cached-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}]}}}