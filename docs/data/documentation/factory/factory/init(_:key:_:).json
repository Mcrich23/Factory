{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Public initializer creates a Factory capable of managing dependencies of the desired type."}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/factory\/init(_:key:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/init(_:key:_:)"},"metadata":{"roleHeading":"Initializer","role":"symbol","modules":[{"name":"Factory"}],"symbolKind":"init","title":"init(_:key:_:)","externalID":"s:7FactoryAAV_3key_AByxGAA16ManagedContainer_p_s12StaticStringVxyYbYActcfc","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory16ManagedContainerP","text":"ManagedContainer"},{"text":", ","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Factory04VoidA4Typea","text":"VoidFactoryType","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">)"}]},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"container","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"ManagedContainer","preciseIdentifier":"s:7Factory16ManagedContainerP","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":" = ","kind":"text"},{"text":"#function","kind":"keyword"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"factory"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"text":" ","kind":"text"},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory04VoidA4Typea","identifier":"doc:\/\/Factory\/documentation\/Factory\/VoidFactoryType"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"container","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The bound container that manages registrations and scope caching for this Factory. The scope helper functions bind the"},{"type":"text","text":" "},{"text":"current container as well defining the scope.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Hidden value used to differentiate different instances of the same type in the same container.","type":"text"}],"type":"paragraph"}],"name":"key"},{"content":[{"inlineContent":[{"text":"A factory closure that produces an object of the desired type when required.","type":"text"}],"type":"paragraph"}],"name":"factory"}],"kind":"parameters"}],"references":{"doc://Factory/documentation/Factory/ManagedContainer":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","url":"\/documentation\/factory\/managedcontainer","role":"symbol","kind":"symbol","title":"ManagedContainer","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}]},"doc://Factory/documentation/Factory/Factory/init(_:key:_:)":{"role":"symbol","abstract":[{"type":"text","text":"Public initializer creates a Factory capable of managing dependencies of the desired type."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/init(_:key:_:)","kind":"symbol","url":"\/documentation\/factory\/factory\/init(_:key:_:)","title":"init(_:key:_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(any ","kind":"text"},{"text":"ManagedContainer","kind":"typeIdentifier","preciseIdentifier":"s:7Factory16ManagedContainerP"},{"text":", ","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory04VoidA4Typea"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">)","kind":"text"}]},"doc://Factory/documentation/Factory/Factory":{"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","url":"\/documentation\/factory\/factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"title":"Factory","role":"symbol"},"doc://Factory/documentation/Factory/VoidFactoryType":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/VoidFactoryType","kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"VoidFactoryType"}],"abstract":[],"url":"\/documentation\/factory\/voidfactorytype","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VoidFactoryType"}],"title":"VoidFactoryType"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"}}}