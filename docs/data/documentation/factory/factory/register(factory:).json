{"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"VoidFactoryType","identifier":"doc:\/\/Factory\/documentation\/Factory\/VoidFactoryType","preciseIdentifier":"s:7Factory04VoidA4Typea"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Factory","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved"},{"type":"text","text":" "},{"text":"Factory will evaluate the new closure and return an instance of the newly registered object instead.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s an example of registering a new Factory closure."}]},{"type":"codeListing","code":["container.service.register {","    SomeService()","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism","type":"text"},{"text":" ","type":"text"},{"text":"used to provide mocks and testing doubles.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Registration “overrides” are stored in the associated container. If the container ever goes out of scope, so","type":"text"},{"type":"text","text":" "},{"text":"will all of its registrations.","type":"text"}]},{"inlineContent":[{"text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"factory: A new factory closure that produces an object of the desired type when needed.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Allows updating registered factory and scope."}],"type":"paragraph"}]}]}]}],"sections":[],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory04VoidA4Typea","text":"VoidFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier","text":"Factory"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"register(factory:)","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:7FactoryAAV8register7factoryAByxGxyYbYAc_tF","modules":[{"name":"Factory"}],"role":"symbol"},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"variants":[{"paths":["\/documentation\/factory\/factory\/register(factory:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/VoidFactoryType":{"navigatorTitle":[{"kind":"identifier","text":"VoidFactoryType"}],"type":"topic","kind":"symbol","title":"VoidFactoryType","identifier":"doc:\/\/Factory\/documentation\/Factory\/VoidFactoryType","role":"symbol","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VoidFactoryType","kind":"identifier"}],"url":"\/documentation\/factory\/voidfactorytype"},"doc://Factory/documentation/Factory/Factory":{"url":"\/documentation\/factory\/factory","kind":"symbol","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","role":"symbol","title":"Factory","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Factory"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}]},"doc://Factory/documentation/Factory/Factory/register(factory:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory04VoidA4Typea","text":"VoidFactoryType","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/factory\/factory\/register(factory:)","title":"register(factory:)","abstract":[{"type":"text","text":"Registers a new factory closure capable of producing an object or service of the desired type."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)","role":"symbol"}}}