{"sections":[],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" "},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory04VoidA4Typea","identifier":"doc:\/\/Factory\/documentation\/Factory\/VoidFactoryType"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier","text":"Factory"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved"},{"type":"text","text":" "},{"text":"Factory will evaluate the new closure and return an instance of the newly registered object instead.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here’s an example of registering a new Factory closure."}]},{"type":"codeListing","syntax":"swift","code":["container.service.register {","    SomeService()","}"]},{"inlineContent":[{"type":"text","text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism"},{"text":" ","type":"text"},{"text":"used to provide mocks and testing doubles.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Registration “overrides” are stored in the associated container. If the container ever goes out of scope, so"},{"type":"text","text":" "},{"text":"will all of its registrations.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"factory: A new factory closure that produces an object of the desired type when needed."},{"type":"text","text":" "},{"type":"text","text":"Allows updating registered factory and scope."}]}]}],"type":"unorderedList"}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/factory\/register(factory:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)"},"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Factory"}],"symbolKind":"method","externalID":"s:7FactoryAAV8register7factoryAByxGxyYbYAc_tF","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"factory"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory04VoidA4Typea","kind":"typeIdentifier","text":"VoidFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"register(factory:)"},"references":{"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/Factory/register(factory:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"kind":"text","text":"("},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory04VoidA4Typea"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}],"title":"register(factory:)","abstract":[{"type":"text","text":"Registers a new factory closure capable of producing an object or service of the desired type."}],"url":"\/documentation\/factory\/factory\/register(factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)"},"doc://Factory/documentation/Factory/Factory":{"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","url":"\/documentation\/factory\/factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"title":"Factory","role":"symbol"},"doc://Factory/documentation/Factory/VoidFactoryType":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/VoidFactoryType","kind":"symbol","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"VoidFactoryType"}],"abstract":[],"url":"\/documentation\/factory\/voidfactorytype","type":"topic","navigatorTitle":[{"kind":"identifier","text":"VoidFactoryType"}],"title":"VoidFactoryType"}}}