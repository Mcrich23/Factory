{"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"kind":"text","text":" "},{"text":"VoidFactoryType","identifier":"doc:\/\/Factory\/documentation\/Factory\/VoidFactoryType","preciseIdentifier":"s:7Factory04VoidA4Typea","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier","text":"Factory"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved"},{"text":" ","type":"text"},{"type":"text","text":"Factory will evaluate the new closure and return an instance of the newly registered object instead."}],"type":"paragraph"},{"inlineContent":[{"text":"Here’s an example of registering a new Factory closure.","type":"text"}],"type":"paragraph"},{"code":["container.service.register {","    SomeService()","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"used to provide mocks and testing doubles."}]},{"type":"paragraph","inlineContent":[{"text":"Registration “overrides” are stored in the associated container. If the container ever goes out of scope, so","type":"text"},{"type":"text","text":" "},{"text":"will all of its registrations.","type":"text"}]},{"inlineContent":[{"text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"factory: A new factory closure that produces an object of the desired type when needed.","type":"text"},{"type":"text","text":" "},{"text":"Allows updating registered factory and scope.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"sections":[],"variants":[{"paths":["\/documentation\/factory\/factory\/register(factory:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Method","modules":[{"name":"Factory"}],"symbolKind":"method","title":"register(factory:)","externalID":"s:7FactoryAAV8register7factoryAByxGxyYbYAc_tF","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"register"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"kind":"text","text":": "},{"text":"VoidFactoryType","kind":"typeIdentifier","preciseIdentifier":"s:7Factory04VoidA4Typea"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">","kind":"text"}]},"references":{"doc://Factory/documentation/Factory/Factory/register(factory:)":{"url":"\/documentation\/factory\/factory\/register(factory:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"register","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory04VoidA4Typea","text":"VoidFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7FactoryAAV","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"title":"register(factory:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/register(factory:)","type":"topic","kind":"symbol"},"doc://Factory/documentation/Factory/VoidFactoryType":{"role":"symbol","navigatorTitle":[{"text":"VoidFactoryType","kind":"identifier"}],"title":"VoidFactoryType","identifier":"doc:\/\/Factory\/documentation\/Factory\/VoidFactoryType","type":"topic","url":"\/documentation\/factory\/voidfactorytype","abstract":[],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VoidFactoryType","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"},"doc://Factory/documentation/Factory/Factory":{"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","title":"Factory","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"url":"\/documentation\/factory\/factory","role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Factory","kind":"identifier"}]}}}