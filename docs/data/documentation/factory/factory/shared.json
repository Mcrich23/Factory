{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .shared","}"],"type":"codeListing"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/Factory\/shared"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/Factory"]]},"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class"},{"text":".","type":"text"}],"variants":[{"paths":["\/documentation\/factory\/factory\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"Factory","title":"shared","role":"symbol","roleHeading":"Instance Property","modules":[{"name":"Factory"}],"externalID":"s:7Factory0A9ModifyingPAAE6sharedxvp::SYNTHESIZED::s:7FactoryAAV","symbolKind":"property"},"references":{"doc://Factory/documentation/Factory/Factory":{"abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"navigatorTitle":[{"text":"Factory","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory","url":"\/documentation\/factory\/factory","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Factory","kind":"identifier"}],"title":"Factory","role":"symbol"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/Factory/shared":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Factory\/shared","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","isActive":true,"type":"reference"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","url":"\/documentation\/factory\/factory\/shared"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Shared"}],"type":"topic","role":"symbol","title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"url":"\/documentation\/factory\/scope\/shared-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"kind":"symbol"}}}