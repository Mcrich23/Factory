{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/InjectedObject"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"metadata":{"extendedModule":"Factory","role":"symbol","symbolKind":"init","modules":[{"name":"Factory"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:)","platforms":[{"introducedAt":"14.0","name":"iOS","deprecated":false,"unavailable":false,"beta":false},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"11.0","name":"macOS"},{"deprecated":false,"introducedAt":"14.0","unavailable":false,"beta":false,"name":"tvOS"},{"name":"watchOS","introducedAt":"7.0","deprecated":false,"unavailable":false,"beta":false}],"roleHeading":"Initializer","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:7Factory14InjectedObjectVyACyxGxcfc"},"abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject\/init(_:)-4awwf","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/injectedobject\/init(_:)-4awwf"]}],"references":{"doc://Factory/documentation/Factory/InjectedObject/init(_:)-4awwf":{"title":"init(_:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"T"},{"text":" conforms to ","type":"text"},{"code":"ObservableObject","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject\/init(_:)-4awwf","abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"type":"topic","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"text":")","kind":"text"}],"url":"\/documentation\/factory\/injectedobject\/init(_:)-4awwf","kind":"symbol"},"doc://Factory/documentation/Factory/InjectedObject":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedObject","kind":"identifier"}],"abstract":[{"text":"Immediate injection property wrapper for SwiftUI ObservableObjects.","type":"text"}],"url":"\/documentation\/factory\/injectedobject","role":"symbol","title":"InjectedObject","navigatorTitle":[{"kind":"identifier","text":"InjectedObject"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"title":"Factory","role":"collection","type":"topic","url":"\/documentation\/factory","kind":"symbol"}}}