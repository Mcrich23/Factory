{"abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:)","roleHeading":"Initializer","modules":[{"name":"Factory"}],"role":"symbol","externalID":"s:7Factory14InjectedObjectVyACyxGxcfc","extendedModule":"Factory","platforms":[{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"14.0","name":"iOS"},{"beta":false,"deprecated":false,"unavailable":false,"introducedAt":"11.0","name":"macOS"},{"deprecated":false,"name":"tvOS","beta":false,"unavailable":false,"introducedAt":"14.0"},{"introducedAt":"7.0","deprecated":false,"unavailable":false,"beta":false,"name":"watchOS"}],"symbolKind":"init","conformance":{"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableObject","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"wrappedValue"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"platforms":["macOS"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath."},{"type":"text","text":" "},{"type":"text","text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/injectedobject\/init(_:)-4awwf"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject\/init(_:)-4awwf","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory","doc:\/\/Factory\/documentation\/Factory\/InjectedObject"]]},"references":{"doc://Factory/documentation/Factory/InjectedObject":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject","kind":"symbol","url":"\/documentation\/factory\/injectedobject","title":"InjectedObject","type":"topic","abstract":[{"text":"Immediate injection property wrapper for SwiftUI ObservableObjects.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InjectedObject"}],"navigatorTitle":[{"text":"InjectedObject","kind":"identifier"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/InjectedObject/init(_:)-4awwf":{"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"T","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]},"identifier":"doc:\/\/Factory\/documentation\/Factory\/InjectedObject\/init(_:)-4awwf","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:)","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"type":"topic","url":"\/documentation\/factory\/injectedobject\/init(_:)-4awwf","role":"symbol"}}}