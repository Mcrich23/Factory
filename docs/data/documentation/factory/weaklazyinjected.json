{"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-4r0lx","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-75hq3"],"anchor":"Initializers","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/factory","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/projectedValue","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/wrappedValue"],"anchor":"Instance-Properties","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolve(reset:)","doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolvedOrNil()"],"anchor":"Instance-Methods","generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/factory\/weaklazyinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This wrapper maintains a weak reference to the object in question, so it must exist elsewhere."},{"type":"text","text":" "},{"type":"text","text":"It’s useful for delegate patterns and parent\/child relationships."}]},{"type":"paragraph","inlineContent":[{"text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using","type":"text"},{"text":" ","type":"text"},{"text":"EnvironmentObject in SwiftUI.","type":"text"}]},{"type":"codeListing","code":["class MyViewModel {","   @LazyInjected(\\.myService) var service1","   @LazyInjected(\\MyCustomContainer.myService) var service2","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The provided keypath resolves to a Factory definition on the "},{"code":"shared","type":"codeVoice"},{"type":"text","text":" container required for each Container type."},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"type":"text","text":"allows you to point an instance of your own custom container type."}]},{"content":[{"inlineContent":[{"type":"text","text":"Lazy injection is resolved the first time the dependency is referenced by the code, "},{"type":"strong","inlineContent":[{"text":"not","type":"text"}]},{"type":"text","text":" on initialization."}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"}]}],"kind":"symbol","relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Factory\/s8SendableP"],"type":"conformsTo"}],"metadata":{"externalID":"s:7Factory16WeakLazyInjectedV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"symbolKind":"struct","modules":[{"name":"Factory"}],"role":"symbol","title":"WeakLazyInjected","navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"roleHeading":"Structure"},"abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"sections":[],"references":{"doc://Factory/documentation/Factory/WeakLazyInjected":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"title":"WeakLazyInjected","type":"topic","navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"url":"\/documentation\/factory\/weaklazyinjected","abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested."}],"role":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected/resolve(reset:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolve(reset:)","title":"resolve(reset:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolve"},{"kind":"text","text":"("},{"kind":"externalParam","text":"reset"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":")"}],"url":"\/documentation\/factory\/weaklazyinjected\/resolve(reset:)","abstract":[{"type":"text","text":"Allows the user to force a Factory resolution at their discretion."}],"kind":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected/wrappedValue":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/wrappedValue","url":"\/documentation\/factory\/weaklazyinjected\/wrappedvalue","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"title":"wrappedValue","kind":"symbol","abstract":[{"text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time.","type":"text"}]},"doc://Factory/documentation/Factory/WeakLazyInjected/factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/factory","title":"factory","abstract":[{"text":"Grants access to the internal Factory.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"factory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/factory\/weaklazyinjected\/factory"},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/WeakLazyInjected/projectedValue":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/projectedValue","title":"projectedValue","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}],"url":"\/documentation\/factory\/weaklazyinjected\/projectedvalue","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory16WeakLazyInjectedV","kind":"typeIdentifier","text":"WeakLazyInjected"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://Factory/documentation/Factory/WeakLazyInjected/init(_:)-4r0lx":{"type":"topic","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"kind":"symbol","url":"\/documentation\/factory\/weaklazyinjected\/init(_:)-4r0lx","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory9ContainerC","text":"Container"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"title":"init(_:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-4r0lx"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/WeakLazyInjected/init(_:)-75hq3":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV","text":"Factory"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"url":"\/documentation\/factory\/weaklazyinjected\/init(_:)-75hq3","kind":"symbol","role":"symbol","title":"init(_:)","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time."}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/init(_:)-75hq3"},"doc://Factory/documentation/Factory/WeakLazyInjected/resolvedOrNil()":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/WeakLazyInjected\/resolvedOrNil()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"role":"symbol","title":"resolvedOrNil()","url":"\/documentation\/factory\/weaklazyinjected\/resolvedornil()","type":"topic","kind":"symbol"}}}