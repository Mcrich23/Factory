{"kind":"symbol","variants":[{"paths":["\/documentation\/factory\/scope"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope","interfaceLanguage":"swift"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"anchor":"Classes","generated":true},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/$singleton","doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property"],"anchor":"Type-Properties","generated":true,"title":"Type Properties"}],"relationshipsSections":[{"title":"Inherited By","type":"inheritedBy","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"kind":"relationships"},{"identifiers":["doc:\/\/Factory\/s8SendableP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"seeAlsoSections":[{"anchor":"Scope-Class-Definitions","title":"Scope Class Definitions","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"metadata":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"title":"Scope","modules":[{"name":"Factory"}],"externalID":"s:7Factory5ScopeC","role":"symbol","symbolKind":"class","roleHeading":"Class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Scope"}]},"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"including "},{"code":"Singleton","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"text":", and ","type":"text"},{"code":"Shared","type":"codeVoice"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"text":"When a scope is associated with a Factory the first time the dependency is resolved a reference to that object","type":"text"},{"type":"text","text":" "},{"type":"text","text":"is cached. The next time that Factory is resolved a reference to the originally cached object will be returned."}]},{"inlineContent":[{"type":"text","text":"That behavior can vary according to the scope type (e.g. Shared or Graph)"}],"type":"paragraph"},{"syntax":"swift","code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","            .singleton","    }","}"],"type":"codeListing"},{"inlineContent":[{"text":"Scopes work hand in hand with Containers to managed object lifecycles. If the container ever goes our of scope, so","type":"text"},{"text":" ","type":"text"},{"text":"will all of its cached references.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"If no scope is associated with a given Factory then the scope is considered to be unique and a new instance","type":"text"},{"type":"text","text":" "},{"text":"of the dependency will be created each and every time that factory is resolved.","type":"text"}]},{"inlineContent":[{"text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms","type":"text"}],"type":"paragraph"}]}],"sections":[],"references":{"doc://Factory/documentation/Factory/Scope":{"navigatorTitle":[{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","title":"Scope","type":"topic","url":"\/documentation\/factory\/scope","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}]},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"kind":"symbol","role":"symbol","title":"Scope.Singleton","type":"topic","url":"\/documentation\/factory\/scope\/singleton-swift.class","navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines the singleton scope. The same instance will always be returned by the factory."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class"},"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"kind":"symbol","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"navigatorTitle":[{"kind":"identifier","text":"Graph"}],"fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Graph","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","url":"\/documentation\/factory\/scope\/graph-swift.class","type":"topic","role":"symbol","title":"Scope.Graph"},"doc://Factory/documentation/Factory/Scope/cached-swift.type.property":{"title":"cached","type":"topic","role":"symbol","url":"\/documentation\/factory\/scope\/cached-swift.type.property","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":"."},{"text":"Cached","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6CachedC"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","abstract":[{"text":"A reference to the default cached scope manager.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/singleton-swift.type.property":{"kind":"symbol","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Singleton","preciseIdentifier":"s:7Factory5ScopeC9SingletonC"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","url":"\/documentation\/factory\/scope\/singleton-swift.type.property","type":"topic","role":"symbol","title":"singleton"},"doc://Factory/documentation/Factory/Scope/$singleton":{"title":"$singleton","type":"topic","role":"symbol","url":"\/documentation\/factory\/scope\/$singleton","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"$singleton"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TaskLocal","preciseIdentifier":"s:12_Concurrency9TaskLocalC"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC9SingletonC","kind":"typeIdentifier","text":"Singleton"},{"text":">","kind":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/$singleton","abstract":[],"kind":"symbol"},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"title":"Scope.Unique","type":"topic","role":"symbol","url":"\/documentation\/factory\/scope\/unique-swift.class","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"Unique","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","navigatorTitle":[{"kind":"identifier","text":"Unique"}],"abstract":[{"text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/shared-swift.type.property":{"kind":"symbol","abstract":[{"text":"A reference to the default shared scope manager.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":"."},{"text":"Shared","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6SharedC"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","url":"\/documentation\/factory\/scope\/shared-swift.type.property","type":"topic","role":"symbol","title":"shared"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"title":"Scope.Cached","type":"topic","role":"symbol","url":"\/documentation\/factory\/scope\/cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/Scope/unique-swift.type.property":{"kind":"symbol","abstract":[{"text":"A reference to the default unique scope.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Unique","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC6UniqueC"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property","url":"\/documentation\/factory\/scope\/unique-swift.type.property","type":"topic","role":"symbol","title":"unique"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"title":"Scope.Shared","type":"topic","role":"symbol","url":"\/documentation\/factory\/scope\/shared-swift.class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/Scope/graph-swift.type.property":{"kind":"symbol","abstract":[{"text":"A reference to the default graph scope manager.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"graph"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier","text":"Scope"},{"kind":"text","text":"."},{"text":"Graph","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC5GraphC"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","url":"\/documentation\/factory\/scope\/graph-swift.type.property","type":"topic","role":"symbol","title":"graph"}}}