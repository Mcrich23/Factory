{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"kind":"symbol","metadata":{"roleHeading":"Class","externalID":"s:7Factory5ScopeC","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"modules":[{"name":"Factory"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"role":"symbol","title":"Scope","symbolKind":"class"},"sections":[],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/Scope","interfaceLanguage":"swift"},"topicSections":[{"generated":true,"title":"Classes","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"anchor":"Classes"},{"generated":true,"title":"Type Properties","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/$singleton","doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property","doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property"],"anchor":"Type-Properties"}],"abstract":[{"text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,","type":"text"},{"text":" ","type":"text"},{"text":"including ","type":"text"},{"type":"codeVoice","code":"Singleton"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Cached"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Graph"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Shared"},{"text":".","type":"text"}],"seeAlsoSections":[{"generated":true,"title":"Scope Class Definitions","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"anchor":"Scope-Class-Definitions"}],"relationshipsSections":[{"title":"Inherited By","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class"],"type":"inheritedBy","kind":"relationships"},{"title":"Conforms To","identifiers":["doc:\/\/Factory\/s8SendableP"],"type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"When a scope is associated with a Factory the first time the dependency is resolved a reference to that object","type":"text"},{"text":" ","type":"text"},{"text":"is cached. The next time that Factory is resolved a reference to the originally cached object will be returned.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"That behavior can vary according to the scope type (e.g. Shared or Graph)","type":"text"}]},{"code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","            .singleton","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Scopes work hand in hand with Containers to managed object lifecycles. If the container ever goes our of scope, so","type":"text"},{"text":" ","type":"text"},{"text":"will all of its cached references.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If no scope is associated with a given Factory then the scope is considered to be unique and a new instance","type":"text"},{"text":" ","type":"text"},{"text":"of the dependency will be created each and every time that factory is resolved.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms","type":"text"}]}],"kind":"content"}],"variants":[{"paths":["\/documentation\/factory\/scope"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory/Scope/Graph-swift.class":{"url":"\/documentation\/factory\/scope\/graph-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Graph-swift.class","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Graph"}],"title":"Scope.Graph"},"doc://Factory/documentation/Factory/Scope/shared-swift.type.property":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC6SharedC","text":"Shared","kind":"typeIdentifier"}],"abstract":[{"text":"A reference to the default shared scope manager.","type":"text"}],"url":"\/documentation\/factory\/scope\/shared-swift.type.property","title":"shared","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/shared-swift.type.property","role":"symbol"},"doc://Factory/documentation/Factory/Scope/Shared-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Shared-swift.class","title":"Scope.Shared","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"type":"topic","url":"\/documentation\/factory\/scope\/shared-swift.class"},"doc://Factory/documentation/Factory/Scope/singleton-swift.type.property":{"url":"\/documentation\/factory\/scope\/singleton-swift.type.property","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC9SingletonC","text":"Singleton"}],"kind":"symbol","role":"symbol","title":"singleton","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/singleton-swift.type.property"},"doc://Factory/documentation/Factory/Scope/Cached-swift.class":{"title":"Scope.Cached","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Cached"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"url":"\/documentation\/factory\/scope\/cached-swift.class","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}]},"doc://Factory/documentation/Factory/Scope":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factory\/scope","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"title":"Scope","type":"topic","role":"symbol"},"doc://Factory/documentation/Factory/Scope/cached-swift.type.property":{"abstract":[{"text":"A reference to the default cached scope manager.","type":"text"}],"title":"cached","url":"\/documentation\/factory\/scope\/cached-swift.type.property","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/cached-swift.type.property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Cached","preciseIdentifier":"s:7Factory5ScopeC6CachedC"}],"role":"symbol","type":"topic"},"doc://Factory/documentation/Factory/Scope/unique-swift.type.property":{"url":"\/documentation\/factory\/scope\/unique-swift.type.property","type":"topic","kind":"symbol","role":"symbol","title":"unique","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/unique-swift.type.property","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC6UniqueC","kind":"typeIdentifier","text":"Unique"}],"abstract":[{"type":"text","text":"A reference to the default unique scope."}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]},"doc://Factory/documentation/Factory/Scope/Singleton-swift.class":{"navigatorTitle":[{"kind":"identifier","text":"Singleton"}],"title":"Scope.Singleton","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Singleton-swift.class","role":"symbol","url":"\/documentation\/factory\/scope\/singleton-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Singleton"}],"kind":"symbol"},"doc://Factory/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/Factory\/s8SendableP","type":"unresolvable"},"doc://Factory/documentation/Factory/Scope/graph-swift.type.property":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/graph-swift.type.property","title":"graph","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"graph","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"text":".","kind":"text"},{"text":"Graph","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC5GraphC"}],"abstract":[{"type":"text","text":"A reference to the default graph scope manager."}],"url":"\/documentation\/factory\/scope\/graph-swift.type.property","type":"topic","kind":"symbol","role":"symbol"},"doc://Factory/documentation/Factory/Scope/$singleton":{"url":"\/documentation\/factory\/scope\/$singleton","abstract":[],"type":"topic","role":"symbol","title":"$singleton","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"$singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TaskLocal","preciseIdentifier":"s:12_Concurrency9TaskLocalC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Scope","preciseIdentifier":"s:7Factory5ScopeC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Singleton","preciseIdentifier":"s:7Factory5ScopeC9SingletonC","kind":"typeIdentifier"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/$singleton"},"doc://Factory/documentation/Factory/Scope/Unique-swift.class":{"role":"symbol","title":"Scope.Unique","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Unique"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Unique"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/Scope\/Unique-swift.class","abstract":[{"type":"text","text":"Defines the unique scope. A new instance of a given type will be returned on every resolution cycle."}],"url":"\/documentation\/factory\/scope\/unique-swift.class"}}}