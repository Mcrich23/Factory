{"sections":[],"kind":"symbol","metadata":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}],"modules":[{"name":"Factory"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"title":"ContainerManager","role":"symbol","externalID":"s:7Factory16ContainerManagerC","symbolKind":"class","roleHeading":"Class"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()"],"anchor":"Initializers","title":"Initializers","generated":true},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)"]}],"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"text":" ","kind":"text"},{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ContainerManager"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}]},{"inlineContent":[{"text":"ContainerManager also implements several functions that can be used to reset the container","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to a pristine state, as well as push\/pop methods that can save and restore the current state."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Those functions are designed primarily for testing."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms"}]}],"kind":"content"}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/Factory\/s8SendableP"],"type":"conformsTo"}],"variants":[{"paths":["\/documentation\/factory\/containermanager"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://Factory/documentation/Factory/ContainerManager/defaultScope":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","type":"topic","abstract":[{"text":"Default scope","type":"text"}],"kind":"symbol","title":"defaultScope","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"defaultScope","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/factory\/containermanager\/defaultscope"},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/ContainerManager":{"url":"\/documentation\/factory\/containermanager","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}],"abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","title":"ContainerManager"},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","title":"Factory","type":"topic","abstract":[{"text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"role":"collection"},"doc://Factory/documentation/Factory/ContainerManager/logger":{"url":"\/documentation\/factory\/containermanager\/logger","abstract":[{"text":"Public access to logging facility in debug mode for ALL containers.","type":"text"}],"type":"topic","title":"logger","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"logger","kind":"identifier"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}],"role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/reset(options:)":{"title":"reset(options:)","role":"symbol","abstract":[{"text":"Resets the Container to its original state, removing all registrations and clearing all scope caches.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"FactoryResetOptions","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":")"}],"url":"\/documentation\/factory\/containermanager\/reset(options:)"},"doc://Factory/documentation/Factory/ContainerManager/dependencyChainTestMax":{"url":"\/documentation\/factory\/containermanager\/dependencychaintestmax","abstract":[{"type":"text","text":"Public variable exposing dependency chain test maximum"}],"type":"topic","title":"dependencyChainTestMax","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"dependencyChainTestMax"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/pop()":{"title":"pop()","role":"symbol","abstract":[{"text":"Test function pops and restores a previously pushed registration and cache state","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"pop","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/factory\/containermanager\/pop()"},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"url":"\/documentation\/factory\/containermanager\/reset(scope:)","abstract":[{"text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact.","type":"text"}],"type":"topic","title":"reset(scope:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/init()":{"title":"init()","role":"symbol","abstract":[{"text":"Public initializer","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"url":"\/documentation\/factory\/containermanager\/init()"},"doc://Factory/documentation/Factory/ContainerManager/trace":{"url":"\/documentation\/factory\/containermanager\/trace","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"trace","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"text":"Public var enabling factory resolution trace statements in debug mode for ALL containers.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace","type":"topic","title":"trace"},"doc://Factory/documentation/Factory/ContainerManager/promiseTriggersError":{"kind":"symbol","title":"promiseTriggersError","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","url":"\/documentation\/factory\/containermanager\/promisetriggerserror","abstract":[{"text":"Public variable promise behavior","type":"text"}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"promiseTriggersError"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory/ContainerManager/push()":{"url":"\/documentation\/factory\/containermanager\/push()","abstract":[{"text":"Test function pushes the current registration and cache states","type":"text"}],"type":"topic","title":"push()","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"push","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","kind":"symbol"}}}