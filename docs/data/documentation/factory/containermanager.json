{"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/Factory\/s8SendableP"],"kind":"relationships","type":"conformsTo"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager"},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"metadata":{"roleHeading":"Class","modules":[{"name":"Factory"}],"symbolKind":"class","externalID":"s:7Factory16ContainerManagerC","navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ContainerManager","kind":"identifier"}],"title":"ContainerManager"},"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()"],"anchor":"Initializers","title":"Initializers","generated":true},{"title":"Instance Properties","anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace"]},{"generated":true,"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/containermanager"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ContainerManager","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}]},{"type":"paragraph","inlineContent":[{"text":"ContainerManager also implements several functions that can be used to reset the container","type":"text"},{"type":"text","text":" "},{"type":"text","text":"to a pristine state, as well as push\/pop methods that can save and restore the current state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Those functions are designed primarily for testing."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms"}]}]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}],"references":{"doc://Factory/documentation/Factory/ContainerManager/promiseTriggersError":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promiseTriggersError","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Public variable promise behavior"}],"title":"promiseTriggersError","url":"\/documentation\/factory\/containermanager\/promisetriggerserror","type":"topic"},"doc://Factory/documentation/Factory/ContainerManager/logger":{"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/factory\/containermanager\/logger","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","title":"logger","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logger","kind":"identifier"},{"text":": (","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"}],"abstract":[{"text":"Public access to logging facility in debug mode for ALL containers.","type":"text"}]},"doc://Factory/documentation/Factory/ContainerManager/pop()":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pop"},{"text":"()","kind":"text"}],"title":"pop()","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","role":"symbol","abstract":[{"text":"Test function pops and restores a previously pushed registration and cache state","type":"text"}],"url":"\/documentation\/factory\/containermanager\/pop()","kind":"symbol"},"doc://Factory/s8SendableP":{"identifier":"doc:\/\/Factory\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://Factory/documentation/Factory/ContainerManager":{"role":"symbol","kind":"symbol","abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","url":"\/documentation\/factory\/containermanager","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}],"title":"ContainerManager","navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"type":"topic"},"doc://Factory/documentation/Factory/ContainerManager/dependencyChainTestMax":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","type":"topic","kind":"symbol","url":"\/documentation\/factory\/containermanager\/dependencychaintestmax","abstract":[{"text":"Public variable exposing dependency chain test maximum","type":"text"}],"title":"dependencyChainTestMax","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependencyChainTestMax"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"role":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/defaultScope":{"abstract":[{"text":"Default scope","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","title":"defaultScope","role":"symbol","url":"\/documentation\/factory\/containermanager\/defaultscope","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultScope","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":"?"}]},"doc://Factory/documentation/Factory/ContainerManager/trace":{"title":"trace","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trace","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/factory\/containermanager\/trace","abstract":[{"text":"Public var enabling factory resolution trace statements in debug mode for ALL containers.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace"},"doc://Factory/documentation/Factory/ContainerManager/init()":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()","abstract":[{"type":"text","text":"Public initializer"}],"url":"\/documentation\/factory\/containermanager\/init()","kind":"symbol","role":"symbol","title":"init()","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}]},"doc://Factory/documentation/Factory/ContainerManager/push()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","url":"\/documentation\/factory\/containermanager\/push()","abstract":[{"type":"text","text":"Test function pushes the current registration and cache states"}],"role":"symbol","title":"push()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"text":"()","kind":"text"}]},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/ContainerManager/reset(options:)":{"title":"reset(options:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FactoryResetOptions","kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO"},{"kind":"text","text":")"}],"abstract":[{"text":"Resets the Container to its original state, removing all registrations and clearing all scope caches.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","url":"\/documentation\/factory\/containermanager\/reset(options:)","kind":"symbol","type":"topic"},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","abstract":[{"text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact.","type":"text"}],"url":"\/documentation\/factory\/containermanager\/reset(scope:)","kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","title":"reset(scope:)"}}}