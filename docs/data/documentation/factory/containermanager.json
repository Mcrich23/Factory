{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factory\/containermanager"]}],"kind":"symbol","metadata":{"symbolKind":"class","modules":[{"name":"Factory"}],"externalID":"s:7Factory16ContainerManagerC","title":"ContainerManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"role":"symbol","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}],"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()"],"title":"Initializers","anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/Factory\/s8SendableP"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"ContainerManager also implements several functions that can be used to reset the container"},{"type":"text","text":" "},{"type":"text","text":"to a pristine state, as well as push\/pop methods that can save and restore the current state."}]},{"type":"paragraph","inlineContent":[{"text":"Those functions are designed primarily for testing.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"references":{"doc://Factory/documentation/Factory/ContainerManager/logger":{"kind":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/logger","title":"logger","url":"\/documentation\/factory\/containermanager\/logger","type":"topic","abstract":[{"type":"text","text":"Public access to logging facility in debug mode for ALL containers."}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"}],"role":"symbol"},"doc://Factory/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Factory\/s8SendableP"},"doc://Factory/documentation/Factory/ContainerManager/defaultScope":{"url":"\/documentation\/factory\/containermanager\/defaultscope","kind":"symbol","type":"topic","title":"defaultScope","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/defaultScope","abstract":[{"text":"Default scope","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"defaultScope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:7Factory5ScopeC"},{"kind":"text","text":"?"}]},"doc://Factory/documentation/Factory/ContainerManager/reset(options:)":{"abstract":[{"text":"Resets the Container to its original state, removing all registrations and clearing all scope caches.","type":"text"}],"type":"topic","role":"symbol","url":"\/documentation\/factory\/containermanager\/reset(options:)","title":"reset(options:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(options:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO","text":"FactoryResetOptions"},{"kind":"text","text":")"}]},"doc://Factory/documentation/Factory/ContainerManager":{"kind":"symbol","url":"\/documentation\/factory\/containermanager","title":"ContainerManager","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContainerManager","kind":"identifier"}],"navigatorTitle":[{"text":"ContainerManager","kind":"identifier"}],"abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager","role":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/pop()":{"role":"symbol","kind":"symbol","title":"pop()","url":"\/documentation\/factory\/containermanager\/pop()","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/pop()","type":"topic","abstract":[{"type":"text","text":"Test function pops and restores a previously pushed registration and cache state"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pop","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://Factory/documentation/Factory/ContainerManager/trace":{"role":"symbol","abstract":[{"text":"Public var enabling factory resolution trace statements in debug mode for ALL containers.","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/trace","title":"trace","type":"topic","url":"\/documentation\/factory\/containermanager\/trace","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trace","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/push()":{"kind":"symbol","title":"push()","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/push()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"push"},{"kind":"text","text":"()"}],"url":"\/documentation\/factory\/containermanager\/push()","abstract":[{"type":"text","text":"Test function pushes the current registration and cache states"}]},"doc://Factory/documentation/Factory/ContainerManager/reset(scope:)":{"title":"reset(scope:)","url":"\/documentation\/factory\/containermanager\/reset(scope:)","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/reset(scope:)","type":"topic","abstract":[{"text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact.","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Factory5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/init()":{"type":"topic","title":"init()","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"text":"Public initializer","type":"text"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/init()","url":"\/documentation\/factory\/containermanager\/init()","kind":"symbol"},"doc://Factory/documentation/Factory/ContainerManager/dependencyChainTestMax":{"title":"dependencyChainTestMax","url":"\/documentation\/factory\/containermanager\/dependencychaintestmax","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/dependencyChainTestMax","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependencyChainTestMax","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"kind":"symbol","abstract":[{"text":"Public variable exposing dependency chain test maximum","type":"text"}],"type":"topic"},"doc://Factory/documentation/Factory/ContainerManager/promiseTriggersError":{"title":"promiseTriggersError","kind":"symbol","url":"\/documentation\/factory\/containermanager\/promisetriggerserror","identifier":"doc:\/\/Factory\/documentation\/Factory\/ContainerManager\/promiseTriggersError","abstract":[{"type":"text","text":"Public variable promise behavior"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"promiseTriggersError","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]},"doc://Factory/documentation/Factory":{"identifier":"doc:\/\/Factory\/documentation\/Factory","kind":"symbol","url":"\/documentation\/factory","role":"collection","title":"Factory","type":"topic","abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}]}}}