{"variants":[{"paths":["\/documentation\/factory\/managedcontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer"},"hierarchy":{"paths":[["doc:\/\/Factory\/documentation\/Factory"]]},"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"},{"kind":"text","text":" : AnyObject, "},{"kind":"typeIdentifier","preciseIdentifier":"s:s8SendableP","text":"Sendable"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a container only supports ManagedContainer then the container must be instantiated and passed as an instance. Hereâ€™s"},{"type":"text","text":" "},{"type":"text","text":"an example of passing such a container to a view model for dependency resolution."}]},{"type":"codeListing","code":["class ContentViewModel {","    let service: MyServiceType","    init(container: Container) {","        service = container.service()","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers","isActive":true,"type":"reference"},{"text":" for more information.","type":"text"}]}]}],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/Factory\/s8SendableP"],"kind":"relationships"},{"kind":"relationships","identifiers":["doc:\/\/Factory\/documentation\/Factory\/Resolving","doc:\/\/Factory\/documentation\/Factory\/SharedContainer"],"type":"inheritedBy","title":"Inherited By"},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/Container"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"topicSections":[{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/manager"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"identifiers":["doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/callAsFunction(key:_:)-9ht01","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/callAsFunction(key:_:)-up8n","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:file:line:)-663f6","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:file:line:)-8l95o","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/reset(options:)","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/with(_:)-79tin","doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/with(_:)-8s90o"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"}],"metadata":{"roleHeading":"Protocol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"externalID":"s:7Factory16ManagedContainerP","modules":[{"name":"Factory"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}],"title":"ManagedContainer","symbolKind":"protocol"},"references":{"doc://Factory/documentation/Factory/ManagedContainer/callAsFunction(key:_:)-9ht01":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"ParameterFactoryType","preciseIdentifier":"s:7Factory09ParameterA4Typea","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"ParameterFactory","preciseIdentifier":"s:7Factory09ParameterA0V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","abstract":[{"text":"Syntactic sugar allows container to create a properly bound ParameterFactory.","type":"text"}],"kind":"symbol","url":"\/documentation\/factory\/managedcontainer\/callasfunction(key:_:)-9ht01","title":"callAsFunction(key:_:)","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/callAsFunction(key:_:)-9ht01"},"doc://Factory/documentation/Factory":{"abstract":[{"type":"text","text":"A new approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"kind":"symbol","title":"Factory","role":"collection","type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory","url":"\/documentation\/factory"},"doc://Factory/documentation/Factory/SharedContainer":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/SharedContainer","abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"type":"topic","kind":"symbol","url":"\/documentation\/factory\/sharedcontainer","role":"symbol","title":"SharedContainer"},"doc://Factory/documentation/Factory/ManagedContainer/with(_:)-79tin":{"type":"topic","role":"symbol","url":"\/documentation\/factory\/managedcontainer\/with(_:)-79tin","kind":"symbol","abstract":[{"type":"text","text":"Defines a with function to allow container transformation on assignment."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/with(_:)-79tin","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"title":"with(_:)"},"doc://Factory/documentation/Factory/ManagedContainer/promised(key:file:line:)-8l95o":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:file:line:)-8l95o","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7FactoryAAV","kind":"typeIdentifier","text":"Factory"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution."}],"url":"\/documentation\/factory\/managedcontainer\/promised(key:file:line:)-8l95o","title":"promised(key:file:line:)"},"doc://Factory/documentation/Factory/ManagedContainer/promised(key:file:line:)-663f6":{"type":"topic","role":"symbol","url":"\/documentation\/factory\/managedcontainer\/promised(key:file:line:)-663f6","kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/promised(key:file:line:)-663f6","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Factory09ParameterA0V","kind":"typeIdentifier","text":"ParameterFactory"},{"kind":"text","text":"<"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":"?>"}],"title":"promised(key:file:line:)"},"doc://Factory/documentation/Factory/ManagedContainer/manager":{"required":true,"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/manager","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"manager","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ContainerManager","kind":"typeIdentifier","preciseIdentifier":"s:7Factory16ContainerManagerC"}],"role":"symbol","abstract":[{"type":"text","text":"Defines the ContainerManager used to manage registrations, resolutions, and scope caching for that container. Encapsulating the code in"},{"text":" ","type":"text"},{"type":"text","text":"this fashion makes creating and using your own custom containers much simpler."}],"url":"\/documentation\/factory\/managedcontainer\/manager","title":"manager"},"doc://Factory/documentation/Factory/ManagedContainer":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer","type":"topic","url":"\/documentation\/factory\/managedcontainer","role":"symbol","kind":"symbol","title":"ManagedContainer","abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"ManagedContainer","kind":"identifier"}]},"doc://Factory/documentation/Factory/Resolving":{"title":"Resolving","role":"symbol","identifier":"doc:\/\/Factory\/documentation\/Factory\/Resolving","type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Resolving"}],"navigatorTitle":[{"text":"Resolving","kind":"identifier"}],"abstract":[{"text":"When protocol is applied to a container it enables a typed registration\/resolution mode.","type":"text"}],"url":"\/documentation\/factory\/resolving"},"doc://Factory/documentation/Factory/ManagedContainer/decorator(_:)":{"type":"topic","role":"symbol","url":"\/documentation\/factory\/managedcontainer\/decorator(_:)","kind":"symbol","abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/decorator(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"title":"decorator(_:)"},"doc://Factory/documentation/Factory/ManagedContainer/with(_:)-8s90o":{"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/with(_:)-8s90o","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"kind":"text","text":"(("},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"type":"text","text":"Defines an async with function to allow container transformation on assignment."}],"url":"\/documentation\/factory\/managedcontainer\/with(_:)-8s90o","title":"with(_:)"},"doc://Factory/documentation/Factory/ManagedContainer/reset(options:)":{"type":"topic","role":"symbol","url":"\/documentation\/factory\/managedcontainer\/reset(options:)","kind":"symbol","abstract":[{"type":"text","text":"Defines a thread safe access mechanism to reset the container."}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/reset(options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Factory0A12ResetOptionsO","text":"FactoryResetOptions"},{"kind":"text","text":")"}],"title":"reset(options:)"},"doc://Factory/documentation/Factory/Container":{"role":"symbol","type":"topic","url":"\/documentation\/factory\/container","title":"Container","abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"identifier":"doc:\/\/Factory\/documentation\/Factory\/Container"},"doc://Factory/documentation/Factory/Containers":{"title":"Containers","type":"topic","role":"article","abstract":[{"text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?","type":"text"}],"url":"\/documentation\/factory\/containers","kind":"article","identifier":"doc:\/\/Factory\/documentation\/Factory\/Containers"},"doc://Factory/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/Factory\/s8SendableP"},"doc://Factory/documentation/Factory/ManagedContainer/callAsFunction(key:_:)-up8n":{"type":"topic","identifier":"doc:\/\/Factory\/documentation\/Factory\/ManagedContainer\/callAsFunction(key:_:)-up8n","url":"\/documentation\/factory\/managedcontainer\/callasfunction(key:_:)-up8n","abstract":[{"text":"Syntactic sugar allows container to create a properly bound Factory.","type":"text"}],"kind":"symbol","title":"callAsFunction(key:_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"VoidFactoryType","preciseIdentifier":"s:7Factory04VoidA4Typea","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:7FactoryAAV"},{"kind":"text","text":"<"},{"text":"T","kind":"typeIdentifier"},{"kind":"text","text":">"}]}}}